id 6113617

body /**************************************************************************** * * Function: CheckForIPListConflicts * * Purpose: Checks For IP List Conflicts in a RuleTreeNode. Such as * negations that are overlapping and more general are not allowed. * * For example, the following is not allowed: * * [1.1.0.0/16,!1.0.0.0/8] * * The following is allowed though (not overlapping): * * [1.1.0.0/16,!2.0.0.0/8] * * Arguments: addrset -- IpAddrSet pointer. * * Returns: -1 if IP is empty, 1 if a conflict exists and 0 otherwise. * ***************************************************************************/

user 4 Checks For IP List Conflicts in a RuleTreeNode.

user 5 Checks For IP List Conflicts in a RuleTreeNode.

user 6 Checks For IP List Conflicts in a RuleTreeNode.

user 3 Checks For IP List Conflicts in a RuleTreeNode.

user 8 Checks For IP List Conflicts in a RuleTreeNode.


id 1442286

body /* ** Return a 64-bit integer value for a query parameter. */

user 4 Return a 64-bit integer value for a query parameter.

user 5 Return a 64-bit integer value for a query parameter.

user 6 Return a 64-bit integer value for a query parameter.

user 3 Return a 64-bit integer value for a query parameter.

user 8 Return a 64-bit integer value for a query parameter.


id 4727971

body /************************************************************************** PROBE - Look for an adapter, this routine's visible to the outside ***************************************************************************/

user 4 Look for an adapter,

user 5 Look for an adapter,

user 6

user 3 Look for an adapter,

user 8 Look for an adapter, this routine's visible to the outside


id 1572184

body /*! \param pdbf */

user 4

user 3

user 5

user 8

user 6


id 5407449

body /* * ":print", ":list", ":number". */

user 4 ":print", ":list", ":number".

user 3

user 6

user 5

user 8


id 3347320

body /* GETNAME gets the name of the n'th sequence in ENTRYNAM.IDX */

user 4 gets the name of the n'th sequence in ENTRYNAM.IDX

user 3 gets the name of the n'th sequence in ENTRYNAM.IDX

user 5 gets the name of the n'th sequence in ENTRYNAM.IDX

user 6 gets the name of the n'th sequence in ENTRYNAM.IDX

user 8 gets the name of the n'th sequence in ENTRYNAM.IDX


id 5304045

body /****************************************************************** *	WINECON_RegLoad * * */

user 4 WINECON_RegLoad

user 5

user 3

user 6

user 8


id 3871237

body /* llvalue -> lltype -> string -> llbuilder -> llvalue */

user 4

user 5

user 3

user 6

user 8


id 2833747

body /* * Prints into a string the Protocol UUID * coping a maximum of n characters. */

user 4 Prints into a string the Protocol UUID coping a maximum of n

user 5 Prints into a string the Protocol UUID

user 3 Prints into a string the Protocol UUID

user 6 Prints into a string the Protocol UUID

user 8 characters.


id 3823717

body /* ** Set the pIdxInfo->estimatedRows variable to nRow. Unless this ** extension is currently being used by a version of SQLite too old to ** support estimatedRows. In that case this function is a no-op. */

user 4 Set the pIdxInfo->estimatedRows variable to nRow. Unless this extension is currently being

user 5 Set the pIdxInfo->estimatedRows variable to nRow.

user 3 Set the pIdxInfo->estimatedRows variable to nRow.

user 8 Set the pIdxInfo->estimatedRows variable to nRow.

user 6 Set the pIdxInfo->estimatedRows variable to nRow.


id 4074779

body /* Stop python */

user 4 Stop python

user 3 Stop python

user 5 Stop python

user 6 Stop python

user 8 Stop python


id 648649

body /* k8595 in k8591 in a8531 in k8396 in walk in build-node-graph in k7495 in k6115 in k6112 in k4861 in k4827 in k4824 in k4821 */

user 4

user 3

user 5

user 6

user 8


id 3126474

body /** * Return 1 is both expressions are constant terms and e1 is bigger than e2. */

user 4 Return 1 is both expressions are constant terms and e1 is bigger

user 6 Return 1 is both expressions are constant terms and e1 is

user 5 both expressions are constant terms and e1 is bigger than e2.

user 3 Return 1 is both expressions are constant terms and e1 is bigger

user 8 than e2.


id 5659244

body /* Handle a keystroke. */

user 4 Handle a keystroke.

user 5 Handle a keystroke.

user 6 Handle a keystroke.

user 3 Handle a keystroke.

user 8 Handle a keystroke.


id 2766962

body /*! \fn size_t FslReadTimeSeries(FSLIO *fslio, void *buffer, short xVox, short yVox, short zVox, size_t nvols) \brief Read one voxel (xyz location) from first nvols volumes in dataset; ie get a t dim buffer. Dimension and datatype of buffer are as is specified in nifti_image structure fslio->niftiptr. Note: filepointer in file data array is restored to its initial position. \param fslio pointer to open dataset \param buffer buffer to hold one timeseries vector \param xVox x voxel [0 x-1] \param yVox y voxel [0 y-1] \param zVox z voxel [0 z-1] \param nvols number of volumes to read a voxel from \return Number of volumes from which a voxel was successfully read. 0 on error. */

user 4 Read one voxel (xyz location) from first nvols volumes in dataset;

user 5 Read one voxel (xyz location) from first nvols volumes in dataset;

user 6 Read one voxel (xyz location) from first nvols volumes in dataset;

user 3 Read one voxel (xyz location) from first nvols volumes in dataset;

user 8 get a t dim buffer.


id 3620409

body /* ** Close an existing SQLite database */

user 4 Close an existing SQLite database

user 3 Close an existing SQLite database

user 5 Close an existing SQLite database

user 6 Close an existing SQLite database

user 8 Close an existing SQLite database


id 577020

body /* Create note file from a string and return a newly allocated string that * contains its name. */

user 4 Create note file from a string and return a newly allocated string

user 6 Create note file from a string

user 5 Create note file from a string and return a newly allocated string

user 3 Create note file from a string

user 8 that contains its name.


id 5107732

body /* * NAME:	crc->macb() * DESCRIPTION:	compute MacBinary II-style CRC value for a block of data */

user 4 compute MacBinary II-style CRC value for a block of data

user 5 compute MacBinary II-style CRC value for a block of data

user 3 compute MacBinary II-style CRC value for a block of data

user 8 compute MacBinary II-style CRC value for a block of data

user 6 compute MacBinary II-style CRC value for a block of data


id 1280286

body /* Widget class command */

user 4

user 3

user 5

user 6

user 8 Widget class command


id 4314734

body /* ** Generate code that concludes an operation that may have changed ** the database. If a statement transaction was started, then emit ** an OP_Commit that will cause the changes to be committed to disk. ** ** Note that checkpoints are automatically committed at the end of ** a statement. Note also that there can be multiple calls to ** sqliteBeginWriteOperation() but there should only be a single ** call to sqliteEndWriteOperation() at the conclusion of the statement. */

user 4 Generate code that concludes an operation that may have changed the database.

user 6 Generate code that concludes an operation that may have changed the database.

user 5 concludes an operation that may have changed the database.

user 3 Generate code that concludes an operation that may have changed the database.

user 8 Generate code that concludes an operation that may have changed the database.


id 6573807

body /** * \brief Tell if a given player has the fire power. * \param p The index of the player. */

user 4 Tell if a given player has the fire power.

user 5 Tell if a given player has the fire power.

user 3 Tell if a given player has the fire power.

user 6 Tell if a given player has the fire power.

user 8 Tell if a given player has the fire power.


id 1677751

body /* ** pEList is a list of expressions which are really the result set of the ** a SELECT statement. pE is a term in an ORDER BY or GROUP BY clause. ** This routine checks to see if pE is a simple identifier which corresponds ** to the AS-name of one of the terms of the expression list. If it is, ** this routine return an integer between 1 and N where N is the number of ** elements in pEList, corresponding to the matching entry. If there is ** no match, or if pE is not a simple identifier, then this routine ** return 0. ** ** pEList has been resolved. pE has not. */

user 4 checks to see if pE is a simple identifier which corresponds to

user 3 checks to see if pE is a simple identifier

user 5 checks to see if pE is a simple identifier

user 6 checks to see if pE is a simple identifier which corresponds to

user 8 the AS-name of one of the terms of the expression list.


id 754290

body /* Function: al_create_sample_instance */

user 4

user 5

user 6

user 3

user 8


id 5655937

body /* * Get the next token in the input stream, reading additional lines from * the source file as needed. */

user 4 Get the next token in the input stream,

user 5 Get the next token in the input stream,

user 3 Get the next token in the input stream,

user 6 Get the next token in the input stream,

user 8 the source file as needed.


id 848251

body /*! Indicates that this QGlyphRun should be painted with an strike out decoration if \a strikeOut is true. Otherwise the QGlyphRun should be painted with no strike out decoration. \sa strikeOut() */

user 4 Indicates that this QGlyphRun should be painted with an strike out decoration

user 6 Indicates that this QGlyphRun should be painted with an strike out decoration

user 5 QGlyphRun should be painted with an strike out decoration if \a strikeOut

user 3 Indicates that this QGlyphRun should be painted with an strike out decoration

user 8 Indicates that this QGlyphRun should be painted with an strike out decoration


id 2172031

body /* Export the username through $USER and $DOMAIN */

user 4 Export the username through $USER and $DOMAIN

user 5 Export the username through $USER and $DOMAIN

user 3 Export the username through $USER and $DOMAIN

user 6 Export the username through $USER and $DOMAIN

user 8 Export the username through $USER and $DOMAIN


id 6070808

body /*! Destructor of the Core::ApplicationVersionInformation class */

user 4 Destructor of the Core::ApplicationVersionInformation class

user 5 Destructor of the Core::ApplicationVersionInformation class

user 3

user 6 Destructor of the Core::ApplicationVersionInformation

user 8 Destructor of the Core::ApplicationVersionInformation class


id 4605940

body /*! \brief Catch window show events. */

user 4 Catch window show events.

user 5 Catch window show events.

user 3 Catch window show events.

user 6 Catch window show events.

user 8 Catch window show events.


id 2668573

body /* Do an fread without changing the file pointer */

user 4 fread without changing the file pointer

user 3 Do an fread without changing the file pointer

user 5 Do an fread without changing the file pointer

user 6 Do an fread without changing the file pointer

user 8 Do an fread without changing the file pointer


id 4602852

body /** Calculate the size of extra memory areas associated with tag list. */

user 4 Calculate the size of extra memory areas associated with tag list.

user 5 Calculate the size of extra memory areas associated with tag list.

user 3 Calculate the size of extra memory areas associated with tag list.

user 6 Calculate the size of extra memory areas associated with tag list.

user 8 Calculate the size of extra memory areas associated with tag list.


id 4400555

body /*-<a href="qh-merge.htm#TOC" >-------------------------------</a><a name="appendmergeset">-</a> qh_appendmergeset( facet, neighbor, mergetype, angle ) appends an entry to qh.facet_mergeset or qh.degen_mergeset angle ignored if NULL or !qh.ANGLEmerge returns: merge appended to facet_mergeset or degen_mergeset sets ->degenerate or ->redundant if degen_mergeset see: qh_test_appendmerge() design: allocate merge entry if regular merge append to qh.facet_mergeset else if degenerate merge and qh.facet_mergeset is all degenerate append to qh.degen_mergeset else if degenerate merge prepend to qh.degen_mergeset else if redundant merge append to qh.degen_mergeset */

user 4 appends an entry to qh.facet_mergeset or qh.degen_mergeset

user 5 appends an entry to qh.facet_mergeset or qh.degen_mergeset

user 3 appends an entry to qh.facet_mergeset or qh.degen_mergeset

user 6 appends an entry to qh.facet_mergeset or qh.degen_mergeset angle

user 8 appends an entry to qh.facet_mergeset or qh.degen_mergeset


id 6437472

body /** * Subscribes the caller to receive the given event. @e [unimplemented] * * @return * - #C_INIT_ERROR if the library has not been initialized * - #C_NOT_IMPLEMENTED */

user 4 Subscribes the caller to receive the given event.

user 5 Subscribes the caller to receive the given event.

user 3 Subscribes the caller to receive the given event.

user 8 Subscribes the caller to receive the given event.

user 6 Subscribes the caller to receive the given event.


id 3745963

body /*! * \brief Send a speaker gain unsolicited AT response * \param rsock the rfcomm socket to use * \param gain the speaker gain value */

user 4 Send a speaker gain unsolicited AT response

user 3 Send a speaker gain

user 5 Send a speaker gain unsolicited AT response

user 6 Send a speaker gain unsolicited AT response

user 8 Send a speaker gain unsolicited AT response


id 5348266

body /*********************************************************************** * read_directory_vfat * * Read a directory using the VFAT ioctl; helper for NtQueryDirectoryFile. */

user 4 Read a directory using the VFAT ioctl;

user 3 Read a directory using the VFAT ioctl;

user 5 Read a directory using the VFAT ioctl;

user 6 Read a directory

user 8 Read a directory using the VFAT ioctl;


id 1111418

body /* true for uniqueness, zero for duplication */

user 4

user 5

user 3

user 6

user 8


id 6123418

body /** * process request to print a certain field from a previously pushed block */

user 4 process request to print a certain field from a previously pushed block

user 3 print a certain field

user 5 process request to print a certain field from a previously pushed block

user 6 process request to print a certain field from a previously pushed block

user 8 process request to print a certain field from a previously pushed block


id 375544

body /* * return to print internally stored source * know only called if no errors * * must save cur iti num since this is debug routine that can be called * from anywhere */

user 4 print internally stored source

user 3 return to print internally stored source

user 5 return to print internally stored source

user 8 return to print internally stored source

user 6 return to print internally stored source


id 5895828

body /*@C RGSetType - Selects the type for the RG object. Logically Collective on RG Input Parameter: + rg - the region context - type - a known type Level: intermediate .seealso: RGGetType() @*/

user 4 Selects the type for the RG object.

user 5 Selects the type for the RG object.

user 6 Selects the type for the RG object.

user 3 Selects the type for the RG object.

user 8 Selects the type for the RG object.


id 3297039

body /** * Find UML object from tree item. * @param item the item from the tree widget * @return the UML object behind the item */

user 4 Find UML object from tree item.

user 5

user 3 Find UML object from tree item.

user 6 Find UML object from tree item.

user 8 Find UML object from tree item.


id 3502919

body /* Copies an UTF-16 stream from an UTF-32 string * Returns 1 if successful or -1 on error */

user 4 Copies an UTF-16 stream from an UTF-32 string

user 6 Copies an UTF-16 stream from an UTF-32 string

user 5 Copies an UTF-16 stream from an UTF-32 string

user 3 Copies an UTF-16 stream from an UTF-32 string

user 8 Copies an UTF-16 stream from an UTF-32 string


id 5356737

body /****************************************************************************** * IMalloc16_HeapMinimize [COMPOBJ.508] */

user 4

user 5

user 3

user 6

user 8


id 5270765

body /* Retrieves the droid file identifier * Returns a Python object if successful or NULL on error */

user 4 Retrieves the droid file identifier

user 5 Retrieves the droid file identifier

user 3 Retrieves the droid file identifier

user 6 Retrieves the droid file identifier

user 8 Retrieves the droid file identifier


id 108825

body /* ** Merge all level iLevel segments in the database into a single ** iLevel+1 segment. Or, if iLevel<0, merge all segments into a ** single segment with a level equal to the numerically largest level ** currently present in the database. ** ** If this function is called with iLevel<0, but there is only one ** segment in the database, SQLITE_DONE is returned immediately. ** Otherwise, if successful, SQLITE_OK is returned. If an error occurs, ** an SQLite error code is returned. */

user 4 Merge all level iLevel segments in the database into a single

user 5 Merge all level iLevel segments in the database

user 3 Merge all level iLevel segments in the database into a single

user 8 iLevel+1 segment.

user 6 Merge all level iLevel segments in the database into a single


id 2107475

body /******************** pC++ /HPC++ profiling code **************************/

user 2

user 4

user 5

user 3 profiling code

user 6

user 8


id 4638971

body /* ** Add a whole list of operations to the operation stack. Return the ** address of the first operation added. */

user 4 Add a whole list of operations to the operation stack.

user 5 Add a whole list of operations to the operation stack.

user 3 Add a whole list of operations to the operation stack.

user 6 Add a whole list of operations to the operation stack.

user 8 Add a whole list of operations to the operation stack.


id 5342080

body /******************************************************************* * AppendMenuW (USER32.@) */

user 4

user 3

user 5

user 8

user 6


id 3890817

body /** * Function for verification of handler and the annunciator data in the cache. * It returns a pointer on the equivalent NewSimulatorAnnunciator object.\n * * @param hnd pointer on a oh_handler * @param rid resource id * @param num annunciator id * @param newsim pointer on the address of a newsim object * @return pointer on NewSimulatorAnnunciator object equivalent to the input **/

user 4 verification of handler and the annunciator data in the cache.

user 5 Function for verification of handler and the annunciator data in the cache.

user 3 Function for verification of handler and the annunciator data in the cache.

user 6 verification of handler and the annunciator data in the cache.

user 8 Function for verification of handler and the annunciator data in the cache.


id 2255131

body /* ** Change the lock state for a shared-memory segment. */

user 4 Change the lock state for a shared-memory segment.

user 3 Change the lock state for a shared-memory segment.

user 5 Change the lock state for a shared-memory segment.

user 6 Change the lock state for a shared-memory segment.

user 8 Change the lock state for a shared-memory segment.


id 6247050

body /* * Function local__extname (filename) * * Return pointer within filename to its extenstion, or NULL if * filename has no extension. * */

user 4 Return pointer within filename to its extenstion,

user 5 Return pointer within filename to its extenstion,

user 3 Return pointer within filename to its extenstion,

user 8 no extension.

user 6 Return pointer within filename to its extenstion,


id 3574393

body /* * in-place sort to keep chained facs from migrating... */

user 4 sort to keep chained facs from migrating...

user 6 in-place sort

user 5 in-place sort to keep chained facs from migrating...

user 3 in-place sort to keep chained facs from migrating...

user 8 in-place sort to keep chained facs from migrating...


id 4500857

body /* setup interface */

user 4 setup interface

user 5 setup interface

user 3 setup interface

user 6

user 8 setup interface


id 2960157

body /** * Get the next specified datum * * @param dis_metadata The metadata structure * @param entry_type The second uint16_t of any datum header struct * @param value_type The third uint16_t of any datum header struct * @param datum_begin The beginning of the search, begins after this given datum * @param datum_result The found datum * @return TRUE if result can be trusted, FALSE otherwise */

user 4 Get the next specified datum

user 3 Get the next specified datum

user 5 Get the next specified datum

user 6 Get the next specified datum

user 8 Get the next specified datum


id 3995828

body /* Compute the pullback of "mpa1" by the function represented by "mpa2". * In other words, plug in "mpa2" in "mpa1". */

user 4 Compute the pullback of "mpa1" by the function represented by "mpa2".

user 3 Compute the pullback of "mpa1" by the function represented by "mpa2".

user 5 plug in "mpa2" in "mpa1".

user 6 Compute the pullback of "mpa1" by the function represented by "mpa2".

user 8 Compute the pullback of "mpa1" by the function represented by "mpa2".


id 1291611

body /* ** Sleep for a little while. Return the amount of time slept. */

user 4 Sleep for a little

user 5 Sleep for a little while. Return the amount of time slept.

user 3 Sleep for a little while. Return the amount of time slept.

user 6 Sleep for a little while.

user 8 Sleep for a little while. Return the amount of time slept.


id 5718585

body /* displays profile. Return NULL on error */

user 4

user 3 displays profile.

user 5 displays profile.

user 6 displays profile.

user 8 displays profile.


id 1247657

body /* * cd_freeinfo(cd) * * frees a allocate CDInfo */

user 4 frees a allocate CDInfo

user 5 frees a allocate CDInfo

user 3 frees a allocate CDInfo

user 6 frees a allocate CDInfo

user 8 frees a allocate CDInfo


id 4248853

body /****** read_defaults/get_user_home() ****************************************** * NAME * get_user_home() -- get absoult filename in users home dir * * SYNOPSIS * bool get_user_home(dstring *home_dir, const char *user, lList * **answer_list) * * FUNCTION * Sets the absolut filename of a file in the users home directory * * INPUTS * dstring *home_dir - created absolut filename * const char *user - user * lList **answer_list - answer list * * RESULT * bool - true on success * false on error * * NOTES * MT-NOTE: get_user_home() is MT safe * *******************************************************************************/

user 4 get absoult filename in users home dir

user 5 get absoult filename in users home dir

user 3 Sets the absolut filename of a file in the users home directory

user 6 Sets the absolut filename of a file in the users home directory

user 8 get absoult filename in users home dir


id 2211892

body /* _xwin_draw_sprite_v_flip: * Wrapper for draw_sprite_v_flip. */

user 4 Wrapper for draw_sprite_v_flip.

user 3

user 5

user 6

user 8 Wrapper for draw_sprite_v_flip.


id 1106849

body /** * \brief Constructs new GlobalShortcutManager. */

user 4 Constructs new GlobalShortcutManager.

user 5 Constructs new GlobalShortcutManager.

user 6 Constructs new GlobalShortcutManager.

user 3 Constructs new GlobalShortcutManager.

user 8 Constructs new GlobalShortcutManager.


id 6028031

body /* igb_write_i2c_byte - Writes 8 bit word over I2C * @hw: pointer to hardware structure * @byte_offset: byte offset to write * @dev_addr: device address * @data: value to write * * Performs byte write operation over I2C interface at * a specified device address. */

user 4 Writes 8 bit word over I2C

user 5 Performs byte write operation over I2C interface at a specified device address.

user 3 Performs byte write operation over I2C interface at a specified device address.

user 6 Writes 8 bit word over I2C

user 8 Writes 8 bit word over I2C


id 4442858

body /* XXX: use host strnlen if available ? */

user 4

user 5 use host strnlen if available

user 3

user 6

user 8


id 1572086

body /* open database */

user 4 open database

user 6 open database

user 5 open database

user 3

user 8 open database


id 2533639

body /* Return the decoder for this stream. */

user 4 Return the decoder for this stream.

user 6 Return the decoder for this stream.

user 5 Return the decoder for this stream.

user 3 Return the decoder for this stream.

user 8 Return the decoder for this stream.


id 5656550

body /* * Allocate an object with a particular ID */

user 4 Allocate an object with a particular ID

user 5 Allocate an object with a particular ID

user 3 Allocate an object with a particular ID

user 8 Allocate an object with a particular ID

user 6 Allocate an object with a particular ID


id 6114800

body /******************************************************************** * Function: DCE2_QueueEnqueue() * * Inserts data into the queue. * * Arguments: * DCE2_Queue * * A pointer to the queue object. * void * * Pointer to the data to insert into the queue. * * Returns: * DCE2_Ret * DCE2_RET__ERROR if memory cannot be allocated for a new * queue node or the queue object passed in is NULL. * DCE2_RET__SUCCESS if the data is successfully added to * the queue. * ********************************************************************/

user 3 Inserts data into the queue.

user 4 Inserts data into the queue.

user 5 Inserts data into the queue.

user 6 Inserts data into the queue.

user 8 Inserts data into the queue.


id 5363222

body /*********************************************************************** *	phoneSetHookSwitch (TAPI32.@) */

user 4

user 5

user 3

user 6

user 8 phoneSetHookSwitch


id 663523

body /* for-each-loop2031 in k12214 in k12192 in k12186 in k11805 in k11802 in a11799 in process-declaration in k6316 in k6313 in k6310 */

user 4

user 5

user 3

user 6

user 8


id 6588697

body /* Return true if segment contains a segment link */

user 4 if segment contains a segment link

user 5 Return true if segment contains a segment link

user 3 Return true if segment contains a segment link

user 8 Return true if segment contains a segment link

user 6 Return true if segment contains a segment link


id 5656858

body /* * log an error in a source line */

user 4 log an error in a source line

user 3 log an error in a source line

user 5 log an error in a source line

user 6 log an error in a source line

user 8 log an error in a source line


id 4686632

body /* write the header (used two times if non streamed) */

user 4 write the header

user 5 write the header

user 3 write the header

user 8 write the header (used two times if non streamed)

user 6 write the header


id 2211018

body /* _linear_draw_glyph16: * Draws a glyph onto a 16 bit bitmap. */

user 4 Draws a glyph onto a 16 bit bitmap.

user 5 Draws a glyph onto a 16 bit bitmap.

user 3 Draws a glyph onto a 16 bit bitmap.

user 8 Draws a glyph onto a 16 bit bitmap.

user 6 Draws a glyph onto a 16 bit bitmap.


id 6437496

body /** * Retrieves the value of a given V4L2 control. */

user 4 Retrieves the value of a given V4L2 control.

user 3 Retrieves the value of a given V4L2 control.

user 5 Retrieves the value of a given V4L2 control.

user 6 Retrieves the value of a given V4L2 control.

user 8 Retrieves the value of a given V4L2 control.


id 5270968

body /* Converts the systemtime into an UTF-16 string * The string size should include the end of string character * Returns 1 if successful or -1 on error */

user 4 Converts the systemtime into an UTF-16 string

user 3 Converts the systemtime into an UTF-16 string

user 5

user 6 Converts the systemtime into an UTF-16 string

user 8 Converts the systemtime into an UTF-16 string


id 3967093

body /** * Retrieve the type information associated with an element * * \param element The element to retrieve type information from * \param result Pointer to location to receive type information * \return DOM_NO_ERR. * * The returned typeinfo will have its reference count increased. It is * the responsibility of the caller to unref the typeinfo once it has * finished with it. */

user 4 Retrieve the type information associated with an element

user 5 Retrieve the type information associated with an element

user 3

user 6 Retrieve the type information associated with an element

user 8 Retrieve the type information associated with an element


id 2282904

body /* ** Return the cost of sorting nRow rows, assuming that the keys have ** nOrderby columns and that the first nSorted columns are already in ** order. */

user 4 Return the cost of sorting nRow rows,

user 3 Return the cost of sorting nRow rows,

user 5 Return the cost of sorting nRow rows,

user 6 Return the cost of sorting nRow rows,

user 8 Return the cost of sorting nRow rows,


id 5169647

body /* Enable DUKFUNC exotic behavior once properties are set up. */

user 4 Enable DUKFUNC exotic behavior once properties are set up.

user 5

user 3

user 8 Enable DUKFUNC exotic behavior once properties are set up.

user 6 Enable DUKFUNC exotic behavior once properties are set up.


id 3774059

body /*Dummy input just send a file name, no multitrack to handle so we don't need to check sub_url nor expected type*/

user 4

user 5

user 3

user 6

user 8


id 5834062

body /* Get the message string corresponding to an error code. */

user 4 Get the message string corresponding to an error code.

user 6 Get the message string corresponding to an error code.

user 3 Get the message string corresponding to an error code.

user 5 Get the message string corresponding to an error code.

user 8


id 6120011

body /* this should only be called after packet has been verified/authenticated! */

user 4

user 6

user 5

user 3

user 8


id 3333123

body /* show the textbox */

user 4 show the textbox

user 5 show the textbox

user 3 show the textbox

user 6 show the textbox

user 8 show the textbox


id 664245

body /* k871 in k864 in loop in k846 in k839 in k836 in k833 in k830 in k827 in k824 in file-copy in k785 in k782 in k779 */

user 4

user 3

user 5

user 6

user 8


id 4112463

body /* * This function concats in a buffer the values needed to do a signature * verification. */

user 4 concats in a buffer the values needed to do a signature verification.

user 5 concats in a buffer the values needed to do a signature verification.

user 3 This function concats in a buffer the values needed to do a

user 6 concats in a buffer the values needed to do a signature verification.

user 8 concats in a buffer the values needed to do a signature verification.


id 6346270

body /* * Prints error containing the function name |func| and message |msg| * and exit. */

user 4 Prints error containing the function name |func| and message |msg| and exit.

user 5 Prints error containing the function name |func| and message |msg| and exit.

user 3 Prints error containing the function name |func| and message |msg| and exit.

user 8 Prints error containing the function name |func| and message |msg| and exit.

user 6 Prints error containing the function name |func| and message |msg| and exit.


id 3261992

body /* *	peek_u16_le *	Read a little-endian 16-bit unsigned integer from memory area *	pointed to by <ptr>. */

user 4 Read a little-endian 16-bit unsigned integer from memory

user 5 Read a little-endian 16-bit unsigned integer from memory area

user 3 Read a little-endian 16-bit unsigned integer from memory

user 8 <ptr>.

user 6 Read a little-endian 16-bit unsigned integer from memory


id 3802843

body /** * * Set the background color * * \param dev device * \param color pen (either one of default pens 0-26, or a pen returned by g2_ink() ) * * \ingroup color */

user 4 Set the background color

user 5 Set the background color

user 3 Set the background color

user 8 Set the background color

user 6 Set the background color


id 4154934

body /** * Adds a new memory pool to #static_mem_pool_set. * * @param __memory_pool_p pointer to the memory pool to add */

user 4 Adds a new memory pool to #static_mem_pool_set.

user 3 Adds a new memory pool to #static_mem_pool_set.

user 5 Adds a new memory pool to #static_mem_pool_set.

user 6 Adds a new memory pool to #static_mem_pool_set.

user 8 Adds a new memory pool to #static_mem_pool_set.


id 1677035

body /* ** Helper function to free the conversion objects from and to UTF-8. */

user 4 free the conversion objects from and to UTF-8.

user 6 Helper function to free the conversion objects from and to UTF-8.

user 5 free the conversion objects from and to UTF-8.

user 3 Helper function to free the conversion objects from and to UTF-8.

user 8 free the conversion objects from and to UTF-8.


id 3207945

body /* write text to a debug file */

user 4 write text to a debug file

user 3 write text to a debug file

user 5 write text to a debug file

user 6 write text to a debug file

user 8 write text to a debug file


id 3030708

body /* =================== Key_Bind_f =================== */

user 4

user 3

user 5

user 6

user 8


id 1172622

body /** * Decode DC coefficients for all blocks in a slice. */

user 4 Decode DC coefficients for all blocks in a slice.

user 3 Decode DC coefficients for all blocks in a slice.

user 6 Decode DC coefficients for all blocks in a slice.

user 5

user 8


id 2954034

body /* name will be NULL if the object is to simply terminate the function * definition. See SLang_restart. */

user 4

user 5

user 3

user 8

user 6


id 1146481

body /* drive_base is either 8 or 0 depending on unit or drive display. Dual drives display drive 0: and 1: instead of unit 8: and 9: */

user 4

user 3

user 5 Dual drives display drive

user 6

user 8


id 5087867

body void /* PRIVATE */

user 4

user 5

user 3

user 6

user 8


id 5085960

body /** Constructs the linear world. Note that here no functions can be called * that use World::getWorld(), since it is not yet defined. */

user 3 Constructs the linear world.

user 4 Constructs the linear world.

user 5 Constructs the linear world.

user 6 Constructs the linear world.

user 8 Constructs the linear world.


id 2001919

body /** * ipa_from_u32 - convert IPv4 address to an integer * @x: IP address * * This function takes an IPv4 address and returns its numeric * representation. */

user 4 takes an IPv4 address and returns its numeric representation.

user 3

user 5 convert IPv4 address to an integer

user 6 convert IPv4 address to an integer

user 8 This function takes an IPv4 address and returns its numeric representation.


id 1102613

body /*! \fn Commitmsg_impl::initHistory() */

user 3

user 4

user 5

user 6

user 8


id 2464659

body /** * Writes a objects section. This section is needed in VER_R13. * Note that this method currently only writes a faked OBJECTS section * to make the file readable by Aut*cad. */

user 4 Writes a objects section.

user 5 Writes a objects section.

user 6 Writes a objects section.

user 3 Writes a objects section.

user 8 This section is needed in VER_R13.


id 1066581

body /* Sets the data offset and size * Returns 1 if successful or -1 on error */

user 4 Sets the data offset and size

user 5 Sets the data offset and size

user 3 Sets the data offset and size

user 6 Sets the data offset and size

user 8 Sets the data offset and size


id 1291928

body /* ** Implementation of a simple r-tree geom callback to test for intersection ** of r-tree rows with a "cube" shape. Cubes are defined by six scalar ** coordinates as follows: ** ** cube(x, y, z, width, height, depth) ** ** The width, height and depth parameters must all be greater than zero. */

user 4 Implementation of a simple r-tree geom callback to test for intersection of

user 3 test for intersection of r-tree rows with a "cube" shape.

user 5 test for intersection of r-tree rows with a "cube" shape.

user 6 Implementation of a simple r-tree geom

user 8 r-tree rows with a "cube" shape.


id 1004429

body /** * If order is true sort ascending, otherwise a descending sort */

user 4 If order is true sort ascending, otherwise a descending sort

user 5 If order is true sort ascending, otherwise a descending sort

user 3 If order is true sort ascending, otherwise a descending sort

user 6 If order is true sort ascending, otherwise a descending sort

user 8 If order is true sort ascending, otherwise a descending sort


id 5285789

body /* pan position */

user 4 pan position

user 7

user 5

user 3

user 6

user 8 pan position


id 4142323

body /*! \brief Set the alignmnet Alignment means the position of the legend relative to the geometry of the plot canvas. \param alignment Alignment flags \sa alignment(), setMaxColumns() \note To align a legend with many items horizontally the number of columns need to be limited */

user 4 Set the alignmnet

user 3 Set the alignmnet

user 5 Set the alignmnet

user 6 Set the alignmnet

user 8 Set the alignmnet


id 4151123

body /* * Update the on-disk mmp buffer, after checking that it hasn't been changed. */

user 4 Update the on-disk mmp buffer,

user 5 Update the on-disk mmp buffer,

user 3 Update the on-disk mmp buffer,

user 6 Update the on-disk mmp buffer,

user 8 Update the on-disk mmp buffer, after checking that it hasn't been changed.


id 4149194

body /* * Given a mode, return the ext2 file type */

user 4 Given a mode, return the ext2 file type

user 3 Given a mode, return the ext2 file type

user 5 Given a mode, return the ext2 file type

user 6 Given a mode, return the ext2 file type

user 8 Given a mode, return the ext2 file type


id 891744

body /*! \brief Remove the bases that are not in coding RNA Remove the bases that are not in coding RNA and test at each loss that fitness is not changed */

user 4 Remove the bases that are not in coding RNA

user 5 Remove the bases that are not in coding RNA

user 6 Remove the bases that are not in coding RNA

user 3 Remove the bases that are not in coding RNA and test at

user 8 Remove the bases that are not in coding RNA


id 5323584

body /***************************************************************************** * _dump_D3DVIEWPORT, _dump_D3DVIEWPORT2 * * Writes viewport information to TRACE * *****************************************************************************/

user 4 Writes viewport information to TRACE

user 3 Writes viewport information to TRACE

user 5 Writes viewport information to TRACE

user 6 Writes viewport information to TRACE

user 8 Writes viewport information to TRACE


id 510352

body /** @return a QList of all known types */

user 4 @return a QList of all known types

user 5 @return a QList of all known types

user 3 @return a QList of all known types

user 6

user 8 @return a QList of all known types


id 6127221

body /* Copies a byte stream from a base64 stream * * LIBUNA_BASE64_FLAG_STRIP_WHITESPACE removes leading space and tab characters, * and trailing space, tab and end of line characters * * Returns 1 if successful or -1 on error */

user 4 Copies a byte stream from a base64 stream

user 3 Copies a byte stream from a base64 stream

user 5 Copies a byte stream from a base64 stream

user 8 Copies a byte stream from a base64 stream

user 6 Copies a byte stream from a base64 stream


id 6510619

body /* Split-VQ innovation for high-band wideband */

user 4 Split-VQ innovation for high-band wideband

user 3

user 5 Split-VQ innovation for high-band wideband

user 6

user 8 Split-VQ innovation for high-band wideband


id 4101038

body /* ** COMMAND: rss* ** ** Usage: %fossil rss ?OPTIONS? ** ** The CLI variant of the /timeline.rss page, this produces an RSS ** feed of the timeline to stdout. Options: ** ** -type|y FLAG ** may be: all (default), ci (show check-ins only), t (show tickets only), ** w (show wiki only). ** ** -limit|n LIMIT ** The maximum number of items to show. ** ** -tkt UUID ** Filters for only those events for the specified ticket. ** ** -tag TAG ** filters for a tag ** ** -wiki NAME ** Filters on a specific wiki page. ** ** Only one of -tkt, -tag, or -wiki may be used. ** ** -name FILENAME ** filters for a specific file. This may be combined with one of the other ** filters (useful for looking at a specific branch). ** ** -url STRING ** Sets the RSS feed's root URL to the given string. The default is ** "URL-PLACEHOLDER" (without quotes). */

user 4 produces an RSS feed of the timeline to stdout.

user 3 produces an RSS feed of the timeline to stdout.

user 5 produces an RSS feed of the timeline to stdout.

user 6 produces an RSS feed of the timeline to stdout.

user 8 produces an RSS feed of the timeline to stdout.


id 5435178

body /************************************************* Function: tourBusNode Description: Searchs the bubble using the "Tour Bus algorithm" by the function "tourBus", "tourBusNode", "tourBusArc". Input: 1. node: the current edge Output: None. Return: None. *************************************************/

user 4 Searchs the bubble using the "Tour Bus algorithm"

user 3 Searchs the bubble using the "Tour Bus algorithm"

user 5 Searchs the bubble using the "Tour Bus algorithm" by the function "tourBus",

user 6 Searchs the bubble using the "Tour Bus algorithm"

user 8 "tourBusNode", "tourBusArc".


id 6511628

body /** * jclass_jar_open * @filename: The filename for the jar file. * * Opens a jar stream for reading. * * Returns: A newly allocated jar stream on success, * or NULL if any error occured. */

user 4 Opens a jar stream for reading.

user 3 Opens a jar stream for reading.

user 6 Opens a jar stream for reading.

user 5 Opens a jar stream for reading.

user 8 Opens a jar stream for reading.


id 3408064

body /** * Updates player action {*down,*up,*power,*roll,*guns,*bombs} * according to current state of joystick t * @param t index of joystick (0 or 1) * @param inmenu = 1 if the player is in a menu (e.g. hangar menu) */

user 4 Updates player action {down,up,power,roll,guns,bombs} according to current state of joystick t

user 5 Updates player action {down,up,power,roll,guns,bombs} according to current state of joystick t

user 3 Updates player action {down,up,power,roll,guns,bombs} according to current state of joystick t

user 6 Updates player action

user 8 Updates player action {down,up,power,roll,guns,bombs} according to current state of joystick t


id 5055267

body /* * Prompts the user (player "Play") to give an errand to one of his/her * bitches. The decision is relayed to the server for implementation. */

user 4 Prompts the user (player "Play") to give an errand to one of

user 3 Prompts the user (player "Play") to give an errand to one of

user 5 Prompts the user (player "Play") to give an errand

user 6 Prompts the user (player "Play") to give an errand

user 8 his/her bitches.


id 2678597

body /* ** Set the SegReader to point to the first docid in the doclist associated ** with the current term. */

user 4 Set the SegReader to point to the first docid in the doclist

user 3 Set the SegReader to point to the first docid in the doclist

user 5 Set the SegReader to point to the first docid in the doclist

user 6 Set the SegReader to point to the first docid

user 8 associated with the current term.


id 5953155

body /* * frg100_open routine * */

user 4

user 5

user 6

user 3

user 8


id 1010712

body /*check for changed file data*/

user 4 check for changed file data

user 5 check for changed file data

user 3 check for changed file data

user 6 check for changed file data

user 8 check for changed file data


id 4053517

body /* count the elements of a list */

user 4 count the elements of a list

user 3 count the elements of a list

user 5 count the elements of a list

user 6 count the elements of a list

user 8 count the elements of a list


id 3749851

body /*! \brief Comparator function for XMPP resource */

user 4 Comparator function for XMPP resource

user 3

user 5 Comparator function for XMPP resource

user 6

user 8 Comparator function for XMPP resource


id 2177150

body /*! Destroys this factory, and all the widgets it has created. */

user 4 Destroys this factory, and all the widgets it has created.

user 3 Destroys this factory, and all the widgets it has created.

user 5 Destroys this factory, and all the widgets it has created.

user 8 Destroys this factory, and all the widgets it has created.

user 6 Destroys this factory, and all the widgets it has created.


id 6115235

body /* * Entry point to snort preprocessor for each packet * * @param packet standard Packet structure * * @return none */

user 3 Entry point to snort preprocessor

user 4 Entry point to snort preprocessor for each packet

user 5 Entry point to snort preprocessor for each packet

user 6

user 8 Entry point to snort preprocessor for each packet


id 1604112

body /* * Attempt to initialize the logging system. This works only if MPID_Init * is not responsible for updating the environment and/or command-line * arguments. */

user 4 Attempt to initialize the logging system.

user 5 initialize the logging system.

user 3 Attempt to initialize the logging system.

user 6 Attempt to initialize the logging system.

user 8 Attempt to initialize the logging system.


id 2605052

body /* Frees all memory associated with the heap and its data */

user 4 Frees all memory associated with the heap and its data

user 6 Frees all memory associated with the heap and its data

user 5 Frees all memory associated with the heap and its data

user 3 Frees all memory associated with the heap and its data

user 8 Frees all memory associated with the heap and its data


id 3771444

body /* * proc_cache_add_at_hash_index() *	heler function to add proc info to the proc cache and list */

user 4 add proc info to the proc cache and list

user 3 heler function to add proc info to the proc cache and list

user 5 add proc info to the proc cache and list

user 6 heler function to add proc info to the proc cache and list

user 8 add proc info to the proc cache and list


id 3449896

body /* * Close a session. * * Must be called with sess_list_mutex locked. */

user 4 Close a session.

user 5 Close a session.

user 3 Close a session.

user 8 Close a session.

user 6 Close a session.


id 6186852

body /* Sprintf * Print into a String. See vSprintf(). */

user 4 Print into a String.

user 5 Print into a String.

user 3 Print into a String.

user 8 Print into a String.

user 6 Print into a String.


id 2095328

body /* Pack rsync ACL -> system ACL verbatim. Return whether we succeeded. */

user 4 Pack rsync ACL -> system ACL verbatim.

user 3 Pack rsync ACL -> system ACL verbatim.

user 5

user 6 Pack rsync ACL -> system ACL verbatim.

user 8 Pack rsync ACL -> system ACL verbatim.


id 514415

body /*====================================================================== // outline traversing functions. //----------------------------------------------------------------------*/

user 4

user 5

user 3 outline traversing functions.

user 6

user 8


id 5229440

body /* avoid using where possible!, ideally the type is known */

user 4

user 3

user 5

user 8

user 6


id 2669400

body /* Schittkowski (modified) problem 235 (box/linearly constrained), minimum at (-1.725, 2.9, 0.725) * constr1: p[0] + p[2] = -1.0; * * To the above constraint, we add the following 2: * constr2: p[1] - 4*p[2] = 0; * constr3: 0.1 <= p[1] <= 2.9; * constr4: 0.7 <= p[2]; * */

user 4

user 3

user 5

user 8

user 6


id 684199

body /** @brief Assign a fitness to a table by first checking the cache and * then calling all fitness functions. * * Uses table_fitness() if no matching timetable was found in fitness cache. * * @param tab Pointer to the table to be fitnessd. */

user 4 Assign a fitness to a table

user 5 Assign a fitness to a table by first checking the cache

user 3 Assign a fitness to a table

user 8 then calling all fitness functions.

user 6 checking the cache and then calling all fitness functions.


id 2045164

body /* * ----------------------------------------------------------------- * Function : cpSpbcgSetup * ----------------------------------------------------------------- * This routine does the setup operations for the Spbcg linear solver. * It makes a decision as to whether or not to signal for reevaluation * of Jacobian data in the pset routine, based on various state * variables, then it calls pset. If we signal for reevaluation, * then we reset jcur = *jcurPtr to TRUE, regardless of the pset output. * In any case, if jcur == TRUE, we increment npe and save nst in nstlpre. * ----------------------------------------------------------------- */

user 4 does the setup operations for the Spbcg linear solver.

user 5 This routine does the setup operations for the Spbcg linear solver.

user 3 This routine does the setup operations for the Spbcg linear solver.

user 8 This routine does the setup operations for the Spbcg linear solver.

user 6 setup operations for the Spbcg linear solver.


id 2151607

body /* * Floyd-Steinberg dithering */

user 4 Floyd-Steinberg dithering

user 5

user 3

user 8 Floyd-Steinberg dithering

user 6


id 14715

body /* * NAME:	block->dumpcache() * DESCRIPTION:	dump the cache tables for a volume */

user 4 dump the cache tables for a volume

user 5 dump the cache tables for a volume

user 3 dump the cache tables for a volume

user 6 dump the cache tables for a volume

user 8 dump the cache tables for a volume


id 6266153

body /** * dump_non_resident_attr */

user 4

user 3

user 5

user 6

user 8


id 5839390

body for (k=buffer; k<l; k++) putchar(' '); /* space out the next line */

user 4

user 5

user 3

user 6

user 8


id 1601689

body /*@ MPI_Request_free - Frees a communication request object Input Parameters: . request - communication request (handle) Notes: This routine is normally used to free inactive persistent requests created with either 'MPI_Recv_init' or 'MPI_Send_init' and friends. It `is` also permissible to free an active request. However, once freed, the request can no longer be used in a wait or test routine (e.g., 'MPI_Wait') to determine completion. This routine may also be used to free a non-persistent requests such as those created with 'MPI_Irecv' or 'MPI_Isend' and friends. Like active persistent requests, once freed, the request can no longer be used with test/wait routines to determine completion. .N ThreadSafe .N Fortran .N Errors .N MPI_SUCCESS .N MPI_ERR_REQUEST .N MPI_ERR_ARG .see also: MPI_Isend, MPI_Irecv, MPI_Issend, MPI_Ibsend, MPI_Irsend, MPI_Recv_init, MPI_Send_init, MPI_Ssend_init, MPI_Rsend_init, MPI_Wait, MPI_Test, MPI_Waitall, MPI_Waitany, MPI_Waitsome, MPI_Testall, MPI_Testany, MPI_Testsome @*/

user 4 Frees a communication request object

user 3 Frees a communication request object

user 6 Frees a communication request object

user 5 Frees a communication request object

user 8 may also be used to free a non-persistent requests


id 2225607

body /*---------------------------------------------------------------------- Compute area under ROC (1st class label[i]==1; 2nd class label[i] != 1). ----------------------------------------------------------------------*/

user 4 Compute area under ROC

user 3

user 5 Compute area under ROC

user 6 Compute area under ROC

user 8 Compute area under ROC


id 4619756

body /** This function is used to process the input buffer and provide one output buffer */

user 4 process the input buffer and provide one output buffer

user 5 process the input buffer and provide one output buffer

user 3 process the input buffer and provide one output buffer

user 6

user 8 process the input buffer and provide one output buffer


id 2609479

body /* Return the number of equality constraints in "bmap" that involve * local variables. This function assumes that Gaussian elimination * has been applied to the equality constraints. */

user 4 Return the number of equality constraints in "bmap" that involve local variables.

user 3 Return the number of equality constraints in "bmap" that involve local variables.

user 5 Return the number of equality constraints in "bmap"

user 6 Return the number of equality constraints in "bmap"

user 8 Return the number of equality constraints in "bmap" that involve local variables.


id 539212

body /* clock startup for Jellybean with Lemondrop attached Configure PLL1 to max speed (204MHz). Note: PLL1 clock is used by M4/M0 core, Peripheral, APB1. */

user 2 clock startup for Jellybean with Lemondrop attached

user 4

user 3 clock startup for Jellybean with Lemondrop attached

user 5 clock startup for Jellybean with Lemondrop attached

user 6 Configure PLL1 to max speed (204MHz).

user 8 clock startup for Jellybean with Lemondrop attached


id 4306306

body /* Locked * returns non-zero if locked */

user 4

user 5 returns non-zero if locked

user 3

user 6 returns non-zero if locked

user 8 returns non-zero if locked


id 1045314

body /* xio is the I/O context that the move got reported in. */

user 4

user 5

user 3

user 6

user 8


id 2763015

body /** * log(sum_i exp(a_i)) */

user 4

user 5

user 6

user 3

user 8


id 5634872

body /* * Returns a zero terminated array of strings */

user 4 Returns a zero terminated array of strings

user 5 Returns a zero terminated array of strings

user 6 Returns a zero terminated array of strings

user 3 Returns a zero terminated array of strings

user 8 Returns a zero terminated array of strings


id 1510553

body /** * This function is used to find the light intensity at any given point * on the screen. */

user 4 find the light intensity at any given point on the screen.

user 3 find the light intensity at any given point on the screen.

user 5 find the light intensity at any given point on the screen.

user 6 find the light intensity at any given point on the screen.

user 8 point on the screen.


id 5931734

body /* Update the displayed thumbnail */

user 4 Update the displayed thumbnail

user 3 Update the displayed thumbnail

user 5

user 6 Update the displayed thumbnail

user 8 Update the displayed thumbnail


id 3468376

body /* AcceptSessionJoiner callback */

user 4 AcceptSessionJoiner callback

user 3

user 5

user 6

user 8 AcceptSessionJoiner callback


id 538900

body /* Set MAX5864 operation mode to "Shutdown": * REF: off * CLK: off * ADCs: off (bus is tri-stated) * DACs: off (set input bus to zero or OVdd) */

user 4 Set MAX5864 operation mode to "Shutdown":

user 3 Set MAX5864 operation mode to "Shutdown":

user 5 Set MAX5864 operation mode to "Shutdown":

user 6 Set MAX5864 operation mode to "Shutdown":

user 8 Set MAX5864 operation mode to "Shutdown":


id 2211960

body /* _xwin_set_warped_mouse_mode: * Switch mouse handling into warped mode. */

user 4 Switch mouse handling into warped mode.

user 3 Switch mouse handling into warped mode.

user 6 Switch mouse handling into warped mode.

user 5 Switch mouse handling into warped mode.

user 8 Switch mouse handling into warped mode.


id 2079590

body /* AIS: Give us a mesh with value x */

user 4 Give us a mesh with value x

user 5 Give us a mesh with value x

user 3 Give us a mesh with value x

user 6 Give us a mesh with value x

user 8 Give us a mesh with value x


id 827957

body /* ** xNext - Advance the cursor to the next row, if any. */

user 4 Advance the cursor to the next row,

user 5 Advance the cursor to the next row, if any.

user 3 Advance the cursor to the next row, if any.

user 8

user 6 Advance the cursor to the next row,


id 6578175

body /* * Validate 'in' as UTF-8, and either return a copy of it, or an empty * string if it is invalid utf-8. * Caller must free the return. */

user 4 Validate 'in' as UTF-8,

user 6 Validate 'in' as UTF-8,

user 5 Validate 'in' as UTF-8,

user 3 Validate 'in' as UTF-8,

user 8 an empty string if it is invalid utf-8.


id 6077428

body /* * We use a primitive form of cooperative reference counting to figure out * when it's ok to delete an item. Whenever anyone iterates over ClientList, * they "lock" with NULL to claim a reference on all DCC items. When they * are done, they "unlock" with NULL to release the references to all DCC * items. It is also possible to claim a reference on a particular DCC item. * All references must be released later, naturally. A DCC item is garbage * collected when it is marked as "DELETE"d, it has no reference locks, and * there are no global reference locks. */

user 4

user 5 DCC item is garbage collected when it is marked as "DELETE"d,

user 3 figure out when it's ok to delete an item.

user 8 item.

user 6 when it's ok to delete an item.


id 6670235

body /* * Do swap of [crash base - crash base + size] with [0 - crash size] * * We swap all kexec segments except of purgatory. The rest is copied * from [0 - crash size] to [crash base - crash base + size]. * We use [0x2000 - 0x10000] for purgatory. This area is never used * by s390 Linux kernels. * * This functions assumes that the sha256_regions[] is sorted. */

user 4 Do swap of [crash base - crash base + size] with [0

user 6 Do swap of [crash base - crash base + size] with [0

user 5 swap all kexec segments except of purgatory.

user 3 Do swap of [crash base - crash base + size] with [0

user 8 - crash size]


id 3802888

body /* * * Transform user coord. in physical device coord (double) * */

user 4 Transform user coord. in physical device coord (double)

user 5 Transform user coord. in physical device coord (double)

user 3 Transform user coord. in physical device coord

user 6 Transform user coord. in physical device coord

user 8 Transform user coord.


id 3261846

body /* insert into specific bit-position */

user 4 insert into specific bit-position

user 5 insert into specific bit-position

user 6 insert into specific bit-position

user 3 insert into specific bit-position

user 8 insert into specific bit-position


id 1586159

body /** Callback set in the rdp_freerdp structure, and used to make a certificate validation * when the connection requires it. * This function will actually be called by tls_verify_certificate(). * @see rdp_client_connect() and tls_connect() * @param instance - pointer to the rdp_freerdp structure that contains the connection settings * @param subject * @param issuer * @param fingerprint * @return TRUE if the certificate is trusted. FALSE otherwise. */

user 4 make a certificate validation when the connection requires it.

user 5 Callback set in the rdp_freerdp structure, and used to make a certificate

user 3 make a certificate validation when the connection requires it.

user 6 certificate validation when the connection requires

user 8 used to make a certificate validation when the connection requires it.


id 301850

body /* ** Return coordinate iCoord from cell iCell in node pNode. */

user 4 Return coordinate iCoord from cell iCell in node pNode.

user 3 Return coordinate iCoord from cell iCell in node pNode.

user 5 Return coordinate iCoord from cell iCell in node pNode.

user 6 Return coordinate iCoord from cell iCell in node pNode.

user 8 Return coordinate iCoord from cell iCell in node pNode.


id 4504377

body /** * @brief Transfer data to a peer. * * Put the contents of <tt>src_buffer_hdl</tt> into <tt>dest_buffer_hdl</tt>. It is * assumed that the destination is at least <tt>src_length</tt> bytes in size. * */

user 4 Transfer data to a peer.

user 3 Transfer data to a peer.

user 5 Transfer data to a peer.

user 8 Transfer data to a peer.

user 6 Put the contents of <tt>src_buffer_hdl</tt> into <tt>dest_buffer_hdl</tt>.


id 1710108

body /* read a byte from FEEPROM */

user 4 read a byte from FEEPROM

user 5 read a byte from FEEPROM

user 3 read a byte from FEEPROM

user 6 read a byte from FEEPROM

user 8 read a byte from FEEPROM


id 2279617

body /* calculate the number of strings from start to end taking into account duplicate removal worst case: O(2^n), could be improved using memoize */

user 4 calculate the number of strings from start to end

user 3 calculate the number of strings from start to end

user 6 calculate the number of strings from start to end

user 5 calculate the number of strings from start to end

user 8 duplicate removal worst case: O(2^n), could be improved using memoize


id 4826646

body /* Prints a backtrace of the error to the string * The end-of-string character is not included in the return value * Returns the number of printed characters if successful or -1 on error */

user 4 Prints a backtrace of the error to the string

user 6 Prints a backtrace of the error to the string

user 5 Prints a backtrace of the error to the string

user 3 Prints a backtrace of the error to the string

user 8 Prints a backtrace of the error to the string


id 179917

body /* kex_agree_hostkey * Agree on a Hostkey which works with this kex */

user 4 Agree on a Hostkey which works with this kex

user 3

user 5 Agree on a Hostkey which works with this kex

user 8 Agree on a Hostkey which works with this kex

user 6


id 972832

body /* Checks whether the point is before the bound rect for bound of given orientation */

user 4 Checks whether the point is before the bound rect for bound of

user 5 Checks whether the point is before the bound rect for bound

user 3 Checks whether the point is before the bound rect

user 6 Checks whether the point is before the bound rect for bound of

user 8 bound of given orientation


id 5148732

body /* Checks if @place is splittable. */

user 4 Checks if @place is splittable.

user 3 Checks if @place is splittable.

user 5 Checks if @place is splittable.

user 6 Checks if @place is splittable.

user 8 Checks if @place is splittable.


id 1167329

body /* look for a tmcd track not referenced by any video track, and export it globally */

user 4 look for a tmcd track not referenced by any video track, and

user 6

user 5 look for a tmcd track not referenced by any video track,

user 3 look for a tmcd track not referenced by any video track, and

user 8 export it globally


id 1109692

body /* find the named chunk and call printchunk on it */

user 4 find the named chunk and call printchunk on it

user 5 find the named chunk and call printchunk on it

user 3 find the named chunk and call printchunk on it

user 8 find the named chunk and call printchunk on it

user 6 find the named chunk and call printchunk on it


id 969973

body /* Returns the UDP port number for the given service name */

user 4 Returns the UDP port number for the given service name

user 5 Returns

user 6 Returns the UDP port number for the given service name

user 3 Returns the UDP port number for the given service name

user 8 Returns the UDP port number for the given service name


id 2980678

body /*@only@*/ lclPredicateNode

user 4

user 5

user 3

user 6

user 8


id 1456594

body /*! Inserts the QtSoapType \a item at the absolute position \a pos in the array. Note that this function can be used to insert items into arrays with any number of dimensions. If the array is one dimensional, then \a pos is simply the index position in the array. But if the array is multi-dimensional then \a pos is the absolute position. For example, if we have a two dimensional array [['a', 'b'], ['c', 'd'], ['e', 'f']], the element at position 0 is 'a', at position 1 is 'b', at position 2 is 'c', and so on. (There are other insert() overloads that allow for each dimension to be specified individually.) */

user 4 Inserts the QtSoapType \a item at the absolute position \a pos in

user 3 Inserts the QtSoapType \a item

user 5 Inserts the QtSoapType \a item at the absolute position

user 6 Inserts the QtSoapType \a item at the absolute position

user 8 the array.


id 3096314

body /* BEWARE: - *sa must be large enough to hold either PF_INET or PF_INET6 - *sa_len is IN for *sa size and OUT for *addr size */

user 4

user 5

user 6

user 3

user 8


id 6210969

body /* _imgRead3DFHeader ** ** Summary: UNPUBLISHED - read header and fill in header info */

user 4 read header and fill in header info

user 5 read header and fill in header info

user 3 read header and fill in header info

user 6 read header and fill in header info

user 8 read header and fill in header info


id 1251078

body /* Blocking, ONLY called from dat_ep_free */

user 4

user 5

user 3

user 6

user 8


id 4538411

body /*! Constructor \param x Array of x values \param y Array of y values \param size Size of the x and y arrays \warning The programmer must assure that the memory blocks referenced by the pointers remain valid during the lifetime of the QwtPlotCPointer object. \sa QwtPlotCurve::setData(), QwtPlotCurve::setRawSamples() */

user 4 Constructor

user 5 Constructor

user 3 Constructor

user 6 Constructor

user 8 Constructor


id 3737240

body /*! * \brief SHA1Input * \param context [in/out] The SHA context to update * \param message_array [in] An array of characters representing the next portion of *	the message. * \param length [in] The length of the message in message_array. * This function accepts an array of octets as the next portion * of the message. * \return sha Error Code. */

user 4

user 6

user 3 accepts an array of octets as the next portion of the message.

user 5 accepts an array of octets as the next portion of the message.

user 8 accepts an array of octets as the next portion of the message.


id 3114292

body /*! Specify an attribute how to draw the curve \param attribute Paint attribute \param on On/Off /sa PaintAttribute, testPaintAttribute() */

user 4 Specify an attribute how to draw the curve

user 7

user 3 Specify an attribute how to draw the curve

user 5 Specify an attribute how to draw the curve

user 6 Specify an attribute how to draw the curve

user 8 Specify an attribute how to draw the curve


id 4722332

body /** * parse_args - * @argc:	number of elements in @argv * @argv:	NULL-terminated argument vector * @settings:	pointer to settings structure * * Parse options from @argv and put it into @settings. */

user 4 Parse options from @argv and put it into @settings.

user 5 Parse options from @argv and put it into @settings.

user 6 Parse options from @argv and put it into @settings.

user 3 Parse options from @argv and put it into @settings.

user 8 Parse options from @argv and put it into @settings.


id 4835409

body /* * slurm_suspend2 - suspend execution of a job. * IN job_id in string form - job on which to perform operation * OUT resp - per task response to the request, *	free using slurm_free_job_array_resp() * RET 0 or a slurm error code */

user 4 suspend execution of a job.

user 3 suspend execution of a job.

user 5 suspend execution of a job.

user 6 suspend execution of a job.

user 8 suspend execution of a job.


id 362171

body /* Takes an ISO-8601-formatted date string and returns the time_t. * Returns (time_t)-1 if the parse fails. */

user 4 Takes an ISO-8601-formatted date string and returns the time_t.

user 5 Takes an ISO-8601-formatted date string and returns the time_t.

user 3 Takes an ISO-8601-formatted date string and returns the time_t.

user 8 Takes an ISO-8601-formatted date string and returns the time_t.

user 6 Takes an ISO-8601-formatted date string and returns the time_t.


id 3749613

body /*! * \internal * \brief CLI tab completion for cache names */

user 4 CLI tab completion for cache names

user 5 CLI tab completion for cache names

user 3 CLI tab completion for cache names

user 6 CLI tab completion for cache names

user 8 CLI tab completion for cache names


id 4730594

body /* find the most recent super block */

user 4 find the most recent super block

user 5 find the most recent super block

user 3 find the most recent super block

user 6 find the most recent super block

user 8 find the most recent super block


id 5003565

body /*! Constructs a new audio decoder control with the given \a parent. */

user 4 Constructs a new audio decoder control with the given \a parent.

user 3 Constructs a new audio decoder control with the given \a parent.

user 5 Constructs a new audio decoder control with the given \a parent.

user 6 Constructs a new audio decoder control

user 8 Constructs a new audio decoder control with the given \a parent.


id 4601187

body /** Replace or add a parameter to a header. * * A header parameter @a param is a string of format <i>name "=" value</i> * or just name. The value part following "=" is ignored when selecting a * parameter to replace. * * @note This function @b does @b not duplicate @p param. The caller should * have allocated the @a param from the memory home associated with header * @a h. * * The possible shortcuts to parameter values are updated. For example, the * "received" parameter in @Via header has shortcut in structure #sip_via_t, * the @ref sip_via_s::v_received "v_received" field. * * @param home memory home used to re-allocate parameter list in header * @param h pointer to a header * @param param parameter to be replaced or added * * @retval 0 if parameter was added * @retval 1 if parameter was replaced * @retval -1 upon an error * * @sa msg_header_add_param(), msg_header_remove_param(), * msg_header_update_params(), * #msg_common_t, #msg_header_t, * #msg_hclass_t, msg_hclass_t::hc_params, msg_hclass_t::hc_update */

user 4 Replace or add a parameter to a header.

user 5 Replace or add a parameter to a header.

user 6 Replace or add a parameter to a header.

user 3 Replace or add a parameter to a header.

user 8 Replace or add a parameter to a header.


id 4435252

body /* Get last byte of a range from offset + length. * Undefined for ranges that wrap around 0. */

user 4 Get last byte of a range from offset + length.

user 3 Get last byte of a range

user 5

user 6 Get last byte of a range from offset + length.

user 8 Get last byte of a range from offset + length.


id 5235812

body /* Takes an object and returns its first selected curve, else just its curve * This should work for multiple curves per object */

user 4 Takes an object and returns its first selected curve, else just its

user 6 Takes an object and returns its first selected curve,

user 5 Takes an object and returns its first selected curve,

user 3 Takes an object and returns its first selected curve,

user 8 Takes an object and returns its first selected curve,


id 1004068

body /** * Setup last_goto_tool value */

user 4 Setup last_goto_tool value

user 6 Setup last_goto_tool value

user 5 Setup last_goto_tool value

user 3 Setup last_goto_tool value

user 8 Setup last_goto_tool value


id 5829400

body /** * Shows the configuration dialog, with the "general" tab opened. */

user 3 Shows the configuration dialog, with the "general" tab opened.

user 4 Shows the configuration dialog,

user 5 Shows the configuration dialog, with the "general" tab opened.

user 6 Shows the configuration dialog, with the "general" tab opened.

user 8 Shows the configuration dialog, with the "general" tab opened.


id 2733309

body /* ** Delete memory allocated for the column names of a table or view (the ** Table.aCol[] array). */

user 4 Delete memory allocated for the column names of a table or view

user 6 Delete memory allocated for the column names

user 3 Delete memory allocated for the column names of a table or view

user 5 Delete memory allocated for the column names of a table or view

user 8 Delete memory allocated for the column names of a table or view


id 6070633

body /** Slot connected to the page selection. */

user 4

user 6

user 5 Slot connected to the page selection.

user 3

user 8 Slot connected to the page selection.


id 3612228

body /*++ * Function:	Handler * * Purpose:	SIGINT handler routine * * Parameters:	nada * * Returns:	nada * * Authors:	Dave McMurtrie <davemcmurtrie@hotmail.com> * * Notes: *-- */

user 4 SIGINT handler routine

user 5 SIGINT handler routine

user 3 SIGINT handler routine

user 6 SIGINT handler routine

user 8 SIGINT handler routine


id 2306691

body /*********************************************************************** * Sample and tick rate comprehension below **********************************************************************/

user 4

user 5 Sample and tick rate comprehension below

user 6

user 3

user 8 Sample and tick rate comprehension below


id 1073101

body /* this is a hack, but I guess that's what I writing anyways */

user 4

user 5

user 6

user 3

user 8


id 6469366

body /** Handle mouse button click on position @x,@y. Return 1 if either Quit * button or levelset has been clicked, 0 otherwise. If set has been * selected store it in ssd::selected_set. */

user 4 Handle mouse button click on position @x,@y.

user 5 Handle mouse button click on position @x,@y.

user 3 Handle mouse button click on position @x,@y.

user 6 Handle mouse button click on position @x,@y.

user 8 Handle mouse button click on position @x,@y.


id 2147347

body /** * webkit_get_web_database_directory_path: * * Returns the current path to the directory WebKit will write Web * Database databases. By default this path will be in the user data * directory. * * Returns: the current database directory path * * Since: 1.1.14 **/

user 4 current path to the directory WebKit will write Web Database databases.

user 3 Returns the current path to the directory

user 5 Returns the current path to the directory WebKit

user 6 Returns: the current database directory path

user 8 Database databases.


id 3966487

body /** * Initialise a dom_html_head_element object * * \param params The html element creation parameters * \param ele The dom_html_head_element object * \return DOM_NO_ERR on success, appropriate dom_exception on failure. */

user 4 Initialise a dom_html_head_element object

user 6 Initialise a dom_html_head_element object

user 5 Initialise a dom_html_head_element object

user 3 Initialise a dom_html_head_element object

user 8 Initialise a dom_html_head_element object


id 1437030

body /* ** Delete all entries in the %_segments table associated with the segment ** opened with seg-reader pSeg. This function does not affect the contents ** of the %_segdir table. */

user 4 Delete all entries in the %_segments table associated with the segment opened

user 5 Delete all entries in the %_segments table associated with the segment opened

user 3 Delete all entries in the %_segments table associated with the segment opened

user 6 Delete all entries in the %_segments table associated with the segment opened

user 8 opened with seg-reader pSeg.


id 5533564

body /* Update "data" based on the tree node "tree" in case "data" has * already been initialized. * * Return 0 on success and -1 on error. * * If "tree" is a domain and data->universe_domain is not set, then * intersect data->filter with the domain. * If "tree" is a filter, then we intersect data->filter with this filter * (or its universe). * If "tree" is a band with at least one member and data->collect_prefix * is set, then we extend data->prefix with the band schedule. * If "tree" is an extension, then we make sure that we are not collecting * information on any extended domain elements. */

user 4 Update "data" based on the tree node "tree"

user 3 Update "data" based on the tree node "tree"

user 5 Update "data" based on the tree node "tree"

user 6 Update "data" based on the tree node "tree" in case "data" has

user 8 already been initialized.


id 6464952

body /* this is the multidraw connect interface */

user 4

user 6

user 3

user 5 this is the multidraw connect interface

user 8 this is the multidraw connect interface


id 6569242

body /* * kill the selected connection connection */

user 4 kill the selected connection

user 5 kill the selected connection

user 3 kill the selected connection

user 6 kill the selected connection connection

user 8 kill the selected connection


id 4325342

body /* ** Compare the key in memory cell pVal with the key that the sorter cursor ** passed as the first argument currently points to. For the purposes of ** the comparison, ignore the rowid field at the end of each record. ** ** If the sorter cursor key contains any NULL values, consider it to be ** less than pVal. Even if pVal also contains NULL values. ** ** If an error occurs, return an SQLite error code (i.e. SQLITE_NOMEM). ** Otherwise, set *pRes to a negative, zero or positive value if the ** key in pVal is smaller than, equal to or larger than the current sorter ** key. ** ** This routine forms the core of the OP_SorterCompare opcode, which in ** turn is used to verify uniqueness when constructing a UNIQUE INDEX. */

user 4 Compare the key in memory cell pVal with the key that the

user 3 Compare the key in memory cell pVal with the key that the

user 5 Compare the key in memory cell pVal with the key

user 8 sorter cursor passed as the first argument currently points to.

user 6 Compare the key in memory cell pVal with the key that the


id 5976610

body /* Await data on raw fd in socket. */

user 4 Await data on raw fd in socket.

user 3 Await data on raw fd in socket.

user 5 Await data on raw fd in socket.

user 8 Await data on raw fd in socket.

user 6 Await data on raw fd in socket.


id 2917579

body /* Retrieves the element index for a specific offset * Returns 1 if successful or -1 on error */

user 4 Retrieves the element index for a specific offset

user 3 Retrieves the element index for a specific offset

user 5 Retrieves the element index for a specific offset

user 6 Retrieves the element index for a specific offset

user 8 Retrieves the element index for a specific offset


id 933551

body /* The caller must free filename and ref after calling this. */

user 4

user 5

user 6

user 3

user 8 The caller must free filename and ref after calling this.


id 2283169

body /* ** Return a pointer to a buffer containing a text representation of the ** expression passed as the first argument. The buffer is obtained from ** sqlite3_malloc(). It is the responsibility of the caller to use ** sqlite3_free() to release the memory. If an OOM condition is encountered, ** NULL is returned. ** ** If the second argument is not NULL, then its contents are prepended to ** the returned expression text and then freed using sqlite3_free(). */

user 4 Return a pointer to a buffer containing a text representation of the

user 3

user 5 pointer to a buffer containing a text representation of the expression passed

user 8 expression passed as the first argument.

user 6 Return a pointer to a buffer containing a text representation of the


id 2919084

body /* Closes the handle * Returns 0 if successful or -1 on error */

user 4 Closes the handle

user 5 Closes the handle

user 3 Closes the handle

user 6 Closes the handle

user 8 Closes the handle


id 5052029

body /* * IsPipeliningPossible() returns TRUE if the options set would allow * pipelining/multiplexing and the connection is using a HTTP protocol. */

user 3

user 4 returns TRUE if the options set would allow pipelining/multiplexing and the connection

user 5 returns TRUE if the options set would allow pipelining/multiplexing

user 6 returns TRUE if the options set would allow pipelining/multiplexing

user 8 is using a HTTP protocol.


id 5566418

body /** * \brief Extract HTML assignment: TAG = "VALUE" * \param data data to parse * \param tag tag to extract * \param p value is surrounded by " flag * \return tag value */

user 4 Extract HTML assignment: TAG = "VALUE"

user 5 Extract HTML assignment: TAG = "VALUE"

user 3 Extract HTML assignment:

user 6 Extract HTML assignment: TAG = "VALUE"

user 8 Extract HTML assignment: TAG = "VALUE"


id 2743862

body /* Note: this isn't an assoc_update. The key must not already exist to call this */

user 4

user 3

user 5

user 6

user 8


id 3913503

body /********************************************************************** Returns true if the SM port is down. The SM's port object must exist in the port_guid table. **********************************************************************/

user 4 Returns true if the SM port is down.

user 5 Returns true if the SM port is down.

user 3 Returns true if the SM port is down.

user 6 Returns true if the SM port is down.

user 8 Returns true if the SM port is down.


id 6077640

body /* * set_lastlog_mask: called whenever a "SET LASTLOG_LEVEL" is done. It * parses the settings and sets the lastlog_mask variable appropriately. It * also rewrites the LASTLOG_LEVEL variable to make it look nice */

user 4 parses the settings and sets the lastlog_mask variable appropriately. It also rewrites

user 6 parses the settings and sets the lastlog_mask variable

user 5 parses the settings and sets the lastlog_mask variable

user 3 parses the settings and sets the lastlog_mask variable appropriately.

user 8 parses the settings and sets the lastlog_mask variable appropriately.


id 4729365

body /** * Plug an interface into a new destination interface * * @v intf	Interface * @v dest	New destination interface * * The reference to the existing destination interface is dropped, a * reference to the new destination interface is obtained, and the * interface is updated to point to the new destination interface. * * Note that there is no "unplug" call; instead you must plug the * interface into a null interface. */

user 4 Plug an interface into a new destination interface

user 5 Plug an interface into a new destination interface

user 3 Plug an interface into a new destination interface

user 8 Plug an interface into a new destination interface

user 6 Plug an interface into a new destination interface


id 1258911

body /** * Returns the influence range of vertex v1, namely the set of nodes who are * reachable by v1 (See Wasserman and Faust, pp.200-201, based on Lin, 1976). * This function is for digraphs only */

user 4 Returns the influence range of vertex v1,

user 6 Returns the influence range of vertex v1,

user 5 Returns the influence range of vertex v1,

user 3 Returns the influence range of vertex v1,

user 8 who are reachable by v1


id 1538046

body /*! \qmlproperty bool QtQuick.Particles::Affector::relative Whether the affected particles have their existing position/velocity/acceleration added to the new one. Default is true. */

user 4

user 3

user 5 Whether the affected particles have their existing position/velocity/acceleration added to the new

user 8

user 6


id 5255324

body /** @brief Free the dynamically allocated global memory. * * This function deallocates the memory allocated by dv_init(). * */

user 4 Free the dynamically allocated global memory.

user 6 Free the dynamically allocated global memory.

user 5 Free the dynamically allocated global memory.

user 3 This function deallocates the memory allocated by dv_init().

user 8 Free the dynamically allocated global memory.


id 106832

body /* ** Move the current position of the file handle passed as the first ** argument to offset iOffset within the file. If successful, return 0. ** Otherwise, set pFile->lastErrno and return non-zero. */

user 4 Move the current position of the file handle passed as the first

user 5 Move the current position of the file handle

user 6 Move the current position of the file handle passed as the first

user 3 Move the current position of the file handle passed as the first

user 8 argument to offset iOffset within the file.


id 3956003

body /** Constructeur @param editor L'editeur d'element concerne @param parent Le QGraphicsItem parent de ce texte statique @param scene La scene sur laquelle figure ce texte statique */

user 4 Constructeur

user 5

user 3

user 6

user 8 Constructeur


id 2736010

body /* ** Move data out of a btree key or data field and into a Mem structure. ** The data or key is taken from the entry that pCur is currently pointing ** to. offset and amt determine what portion of the data or key to retrieve. ** key is true to get the key or false to get data. The result is written ** into the pMem element. ** ** The pMem structure is assumed to be uninitialized. Any prior content ** is overwritten without being freed. ** ** If this routine fails for any reason (malloc returns NULL or unable ** to read from the disk) then the pMem is left in an inconsistent state. */

user 4 Move data out of a btree key or data field and into

user 3 Move data out of a btree key or data field and into

user 5 Move data out of a btree key or data field

user 6 Move data out of a btree key or data field and into

user 8 a Mem structure.


id 375694

body /* * collect a ral (f,g, e, and t) real number from input into num token global * returns F on error - if so dret not changed */

user 4 collect a ral (f,g, e, and t) real number from input into

user 5 collect a ral (f,g, e, and t) real number from input

user 3 collect a ral (f,g, e, and t) real number from input

user 6 collect a ral (f,g, e, and t) real number from input into

user 8 collect a ral (f,g, e, and t) real number from input into


id 193782

body /* * Look for reserved variable names and replace them with real values */

user 4 Look for reserved variable names and replace them with real values

user 3 Look for reserved variable names and replace them with real values

user 5 Look for reserved variable names and replace them with real values

user 6 Look for reserved variable names and replace them with real values

user 8 Look for reserved variable names and replace them with real values


id 6565250

body /** Moves to the next book. */

user 4 Moves to the next book.

user 5 Moves to the next book.

user 6 Moves to the next book.

user 3 Moves to the next book.

user 8 Moves to the next book.


id 3096159

body /* {{{ PHP_RSHUTDOWN_FUNCTION */

user 4

user 5

user 3

user 8

user 6


id 70413

body /*! @decl Image.Image write_char(int char) *! @fixme */

user 4

user 3

user 5

user 6

user 8


id 5170221

body /* * Helper to walk the thread chain and see if there is an active error * catcher. Protected calls or finally blocks aren't considered catching. */

user 4 walk the thread chain and see if there is an active error

user 5 walk the thread chain and see if there is an active error

user 3 Helper to walk the thread chain and see if there is an

user 6 active error catcher.

user 8 catcher.


id 6632535

body /* [inside top level 17612] */

user 4

user 3

user 7

user 5

user 8

user 6


id 2337336

body /* * Active Side: CM_ID <-- CONN_SENT * * If successful, results in the generation of a CONNECT_REPLY * event. iw_cm_disconnect and iw_cm_destroy will block until the * CONNECT_REPLY event is received from the provider. */

user 4

user 5

user 3

user 6

user 8 results in the generation of a CONNECT_REPLY event.


id 5588294

body /* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % D e l e t e I m a g e F r o m L i s t % % % % % % % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % DeleteImageFromList() deletes an image from the list. List pointer % is moved to the next image, if one is present. See RemoveImageFromList(). % % The format of the DeleteImageFromList method is: % % DeleteImageFromList(Image **images) % % A description of each parameter follows: % % o images: the image list. % */

user 4 deletes an image from the list.

user 5 deletes an image from the list.

user 6 deletes an image from the list.

user 3 deletes an image from the list.

user 8 deletes an image from the list.


id 5656761

body /* * create resource loader */

user 4 create resource loader

user 5 create resource loader

user 3 create resource loader

user 6 create resource loader

user 8 create resource loader


id 4826341

body /* Cross Windows safe version of GetLocaleInfoA * Returns the number of bytes read if successful or 0 on error */

user 4 safe version of GetLocaleInfoA

user 5

user 3

user 6

user 8 Cross Windows safe version of GetLocaleInfoA


id 5392884

body /******************************************************************* * exit_on_signal */

user 4

user 5

user 3

user 6

user 8


id 185576

body /* ========================= R_PreciseCullSurface Check the surface for visibility on a per-triangle basis for cases when it is going to be VERY expensive to draw (subviews) If not culled, also returns the bounding box of the surface in Normalized Device Coordinates, so it can be used to crop the scissor rect. OPTIMIZE: we could also take exact portal passing into consideration ========================= */

user 4 Check the surface for visibility on a per-triangle basis for cases when it

user 5 Check the surface for visibility on a per-triangle basis

user 6 Check the surface for visibility

user 3 Check the surface for visibility on a per-triangle basis

user 8 Check the surface for visibility on a per-triangle basis


id 2674442

body /*Compute the first (d+1) coefficients of the product of a degree e and a degree f polynomial.*/

user 4 Compute the first (d+1) coefficients of the product of a degree e

user 3 Compute the first (d+1) coefficients of the product of a degree e

user 5 Compute the first (d+1) coefficients of the product of a degree e

user 6 Compute the first (d+1) coefficients of the product of a degree e

user 8 and a degree f polynomial.


id 3842316

body /* Insert a band node at position "node" in the schedule tree corresponding * to the current band in "graph". Mark the band node permutable * if "permutable" is set. * The partial schedules and the coincidence property are extracted * from the graph nodes. * Return the updated schedule node. */

user 4 Insert a band node at position "node" in the schedule tree corresponding

user 5 Insert a band node at position "node" in the schedule tree

user 3 Insert a band node at position "node" in the schedule tree

user 6 Insert a band node at position "node" in the schedule tree

user 8 to the current band in "graph".


id 6431675

body /* ** Checks whether a window is still alive, and closes it only if so. ** Intended to be used when the file could not be opened for some reason. ** Normally the window is still alive, but the user may have closed the ** window instead of the error dialog. In that case, we shouldn't close the ** window a second time. */

user 4 Checks whether a window is still alive, and closes it only if

user 5 Checks whether a window is still alive,

user 6 Checks whether a window is still alive, and closes it

user 3 Checks whether a window is still alive, and closes it

user 8 so.


id 2929444

body /** Yearly "callback". Called whenever the year changes. */

user 4 Yearly "callback". Called whenever the year changes.

user 5 Yearly "callback".

user 3

user 6

user 8 Yearly "callback". Called whenever the year changes.


id 2069000

body /** * Joins strings with a comma and space. * * Takes an array of strings and joins them togther with a comma and a space * between each of them. * * @param array * Pointer to struct of type String_Array, containing strings to join * */

user 4 Joins strings with a comma and space.

user 5 Joins strings with a comma and space.

user 3 Joins strings with a comma and space.

user 6 Joins strings with a comma and space.

user 8 and a space between each of them.


id 3774269

body /* * find_pack_start * look for the pack start code in the file - read 512 bytes at a time, * searching for that code. * Note: we may also be okay looking for >= 00 00 01 bb */

user 4 look for the pack start code in the file

user 3 look for the pack start code in the file

user 5 look for the pack start code in the file

user 8 bytes at a time, searching for that code.

user 6 look for the pack start code in the file


id 3957233

body /** * @brief QET::qetCollectionToString * @param c QetCollection value to convert * @return The QetCollection enum value converted to a QString */

user 4

user 5

user 3 QetCollection enum value converted to a QString

user 6

user 8 QET::qetCollectionToString


id 1997763

body /* These functions implement a double linked list for the global objects. */

user 4 implement a double linked list for the global objects.

user 3

user 5 implement a double linked list for the global objects.

user 6

user 8 double linked list for the global objects.


id 1445868

body /** * rename_current_note: * * Rename the current note. */

user 4 Rename the current note.

user 5 Rename the current note.

user 3 Rename the current note.

user 6 Rename the current note.

user 8 Rename the current note.


id 2259788

body /* input into layer2 (from layer 1) */

user 4 input into layer2 (from layer 1)

user 6

user 5

user 3 input into layer2

user 8 input into layer2 (from layer 1)


id 3888345

body void /* PRIVATE */

user 4

user 3

user 5

user 6

user 8


id 6591746

body /* * pipeprotect: protect against "special" local filenames by prepending * "./". Special local filenames are "-" and "|..." AND "/...". */

user 4 protect against "special" local filenames

user 6 protect against "special" local filenames

user 5 protect against "special" local filenames by prepending "./".

user 3 protect against "special" local filenames by prepending "./".

user 8 protect against "special" local filenames


id 5823642

body /* chompsp: inspired by Perl chomp. Kills all trailing space. */

user 4 Kills all trailing space.

user 3 Kills all trailing space.

user 5 Kills all trailing space.

user 6 Kills all trailing space.

user 8 Kills all trailing space.


id 5714768

body /* Return nz on error */

user 4

user 3

user 5

user 8

user 6 Return nz on error


id 6188430

body /*** Close an open file descriptor. @function close @see close(2) @int fd @return 0 on success, nil otherwise @return error message if failed. */

user 4 Close an open file descriptor.

user 5 Close an open file descriptor.

user 3 Close an open file descriptor.

user 8 Close an open file descriptor.

user 6 Close an open file descriptor.


id 5602384

body /** Erase formatting settings conflicting to upcoming changes and produce warnings as needed. * * @param[in] scaffold Settings to scan * * @since 0.5 */

user 4 Erase formatting settings conflicting to upcoming changes and produce warnings as needed.

user 3 Erase formatting settings conflicting to upcoming changes and produce warnings as needed.

user 5 Erase formatting settings conflicting to upcoming changes and produce warnings as needed.

user 6 Erase formatting settings conflicting to upcoming changes and produce warnings as needed.

user 8 Erase formatting settings conflicting to upcoming changes and produce warnings as needed.


id 299840

body /* ** Lock a file region. */

user 4 Lock a file region.

user 3 Lock a file region.

user 5 Lock a file region.

user 6 Lock a file region.

user 8 Lock a file region.


id 826178

body /* ** Set the "type" of an allocation. */

user 4 Set the "type" of an allocation.

user 3 Set the "type" of an allocation.

user 5 Set the "type" of an allocation.

user 6 Set the "type" of an allocation.

user 8 Set the "type" of an allocation.


id 3263818

body /** * idmef_linkage_new_file: * @ptr: pointer to a #idmef_linkage_t object. * @ret: pointer to an address where to store the created #idmef_file_t object. * * Create a new file object, children of #idmef_linkage_t. * If @ptr already contain a #idmef_file_t object, then it is destroyed. * * Returns: 0 on success, or a negative value if an error occured. */

user 4 Create a new file object, children of #idmef_linkage_t.

user 3 Create a new file object,

user 5 Create a new file object, children of #idmef_linkage_t.

user 6 Create a new file object, children of #idmef_linkage_t.

user 8 Create a new file object, children of #idmef_linkage_t.


id 2612950

body /* For use by MLE, OLS, et al. Available for public use, but undocumented. */

user 4

user 3

user 5

user 6

user 8


id 5364821

body /*********************************************************************** * utf7_can_directly_encode * * Helper for utf7_wcstombs */

user 4

user 5

user 6

user 3

user 8 Helper for utf7_wcstombs


id 5775524

body /** * BEQ : branch if equal 0 : Z=1 * * HINZVC * ...... */

user 3 branch if equal

user 4 branch if equal 0

user 5

user 6

user 8


id 5037210

body /* * Duplicate an entire note list. This is used when breaking a contig. * * Note that we assume cto has no existing note list - this is a valid * assumption when called from break contig. * * Returns 0 for success, -1 for failure. */

user 4 Duplicate an entire note list.

user 5 Duplicate an entire note list.

user 3 Duplicate an entire note list.

user 6 Duplicate an entire note list.

user 8 Duplicate an entire note list. This is used when breaking a contig.


id 4034920

body /* ** Extract the user data from a sqlite3_context structure and return a ** pointer to it. */

user 4 Extract the user data from a sqlite3_context structure

user 5 Extract the user data from a sqlite3_context structure

user 6 Extract the user data from a sqlite3_context structure and return a pointer

user 3 Extract the user data from a sqlite3_context structure

user 8 to it.


id 1696510

body /* ** Initialize the operating system interface. ** ** This routine registers all VFS implementations for unix-like operating ** systems. This routine, and the sqlite3_os_end() routine that follows, ** should be the only routines in this file that are visible from other ** files. ** ** This routine is called once during SQLite initialization and by a ** single thread. The memory allocation and mutex subsystems have not ** necessarily been initialized when this routine is called, and so they ** should not be used. */

user 4 Initialize the operating system interface.

user 3 Initialize the operating system interface.

user 5 Initialize the operating system interface.

user 6 Initialize the operating system interface.

user 8 Initialize the operating system interface.


id 3284079

body /** Return a copy of the existing list "p" ala strdup(). * * @param p a pointer to a VALUE_PAIR structure. * @return the copy of "p". * */

user 4 Return a copy of the existing list "p"

user 5 Return a copy of the existing list "p" ala strdup().

user 3 Return a copy of the existing list "p" ala strdup().

user 6 Return a copy of the existing list "p"

user 8 Return a copy of the existing list "p" ala strdup().


id 5632793

body /* readFile: * Read graph from file f. * Return 0 on failure */

user 4 Read graph from file f.

user 5 Read graph from file f.

user 3 Read graph from file f.

user 6 Read graph from file f.

user 8 Read graph from file f.


id 647201

body /* k9903 in loop in a9843 in k9830 in k9801 in simplify-named-call in k7355 in k6861 in k6858 in k6855 in k4131 in k3746 in k3743 in k3740 */

user 3

user 4

user 5

user 6

user 8


id 6117606

body /* * Initialize the file memory pool * * Returns: * void *: pointer to mempool * NULL : fail to initialize file mempool */

user 4 Initialize the file memory pool

user 3 Initialize the file memory pool

user 5 Initialize the file memory pool

user 6 Initialize the file memory pool

user 8 Initialize the file memory pool


id 5858444

body /* Perform machine dependent cif processing */

user 4

user 6 Perform machine dependent cif processing

user 5 Perform machine dependent cif processing

user 3 Perform machine dependent cif processing

user 8 Perform machine dependent cif processing


id 4166708

body /** Reads an MSA from a file. If `format' is UNKNOWN_MSA, the file format is determined from the first line(s) of the file. Uses `select_ifile', if non-NULL, to filter the sequence set. Uppercases or lowercases sequence characters according to `do_switch_case'. Indexes LPO symbols using `score_matrix'. */

user 4 Reads an MSA from a file.

user 5 Reads an MSA from a file.

user 3 Reads an MSA from a file.

user 6 Reads an MSA from a file.

user 8 Reads an MSA from a file.


id 3821806

body /* ** Print out information about all locking operations. ** ** This routine is used for troubleshooting locks on multithreaded ** platforms. Enable by compiling with the -DSQLITE_LOCK_TRACE ** command-line option on the compiler. This code is normally ** turned off. */

user 4 Print out information about all locking operations.

user 5 Print out information about all locking operations.

user 6 Print out information about all locking operations.

user 3 Print out information about all locking operations.

user 8 Print out information about all locking operations.


id 4959491

body /* * Return current position. */

user 4 Return current position.

user 5 Return current position.

user 3 Return current position.

user 6 Return current position.

user 8 Return current position.


id 2468055

body /** * Removes an entity from this container and updates the borders of * this entity-container if autoUpdateBorders is true. */

user 4 Removes an entity from this container and updates the borders of this

user 3 Removes an entity from this container and updates the borders

user 5 Removes an entity from this container and updates the borders

user 8 entity-container if autoUpdateBorders is true.

user 6 Removes an entity from this container and updates the borders


id 1490619

body /* Set the next event to wait for in rigol_ds_receive */

user 4 Set the next event to wait for in rigol_ds_receive

user 5 Set the next event to wait for in rigol_ds_receive

user 3 Set the next event to wait for in rigol_ds_receive

user 6 Set the next event to wait for in rigol_ds_receive

user 8 Set the next event to wait for in rigol_ds_receive


id 647822

body /* k3719 in k3716 in make-hash-table in k2735 in k2730 in k1726 */

user 4

user 5

user 3

user 6

user 8


id 3984378

body /** * ekg_child_add() * * Add a watcher for the child process. * * @param plugin - plugin which contains handler funcs or NULL if in core. * @param name_format - format string for watcher name. Can be NULL, or *	simple string if the name is guaranteed not to contain '%'. * @param pid - PID of the child process. * @param handler - the handler func called when the process exits. *	The handler func will be provided with the child PID, exit status * (filtered through WEXITSTATUS()) and private data. * @param data - the private data passed to the handler. * @param destr - destructor for the private data. It will be called *	even if the handler isn't (i.e. when the watch is removed before *	process exits). Can be NULL. * @param ... - arguments to name_format format string. * * @return An unique ekg_child_t. */

user 4 Add a watcher for the child process.

user 5 Add a watcher for the child process.

user 3 Add a watcher for the child process.

user 6 Add a watcher for the child process.

user 8 Add a watcher for the child process.


id 3608242

body /*@C CharacteristicInitializePackage - This function initializes everything in the Characteristic package. It is called from PetscDLLibraryRegister() when using dynamic libraries, and on the first call to CharacteristicCreate() when using static libraries. Level: developer .keywords: Characteristic, initialize, package .seealso: PetscInitialize() @*/

user 3 initializes everything in the Characteristic package.

user 4 initializes everything in the Characteristic package.

user 5 initializes everything in the Characteristic package.

user 6 This function initializes everything in the Characteristic package.

user 8 This function initializes everything in the Characteristic package.


id 6076531

body /* get_server_port: Returns the connection port for the given server index */

user 4 Returns the connection port for the given server index

user 6 Returns the connection port for the given server index

user 5 Returns the connection port for the given server index

user 3 Returns the connection port for the given server index

user 8 Returns the connection port for the given server index


id 4594262

body /* Tests for useful error message if a handshake fails where a client * cert was requested. */

user 4 Tests for useful error message if a handshake fails where a client

user 6 error message if a handshake fails

user 5

user 3 Tests for useful error message if a handshake fails

user 8 cert was requested.


id 3058023

body /*! * \brief * Returns the eccentricity squared. * * \param env - The JNI environment. * \param object - The Java object wrapping the PJ structure (not allowed to be NULL). * \return The eccentricity. */

user 4 Returns the eccentricity squared.

user 5 Returns the eccentricity squared.

user 3 Returns the eccentricity squared.

user 6

user 8 Returns the eccentricity squared.


id 4383795

body /* reference idct taken from "ieeetest.c" * Written by Tom Lane (tgl@cs.cmu.edu). * Released to public domain 11/22/93. */

user 4

user 5

user 3

user 6

user 8


id 4807905

body /* * Function: smc_shutdown * Purpose: closes down the SMC91xxx chip. * Method: *	1. zero the interrupt mask *	2. clear the enable receive flag * 3. clear the enable xmit flags * * TODO: * (1) maybe utilize power down mode. *	Why not yet? Because while the chip will go into power down mode, *	the manual says that it will wake up in response to any I/O requests *	in the register space. Empirical results do not show this working. */

user 4 closes down the SMC91xxx chip.

user 3 closes down the SMC91xxx chip.

user 5 closes down the SMC91xxx chip.

user 6 closes down the SMC91xxx chip.

user 8 closes down the SMC91xxx chip.


id 5184199

body /* Shaper counter */

user 4

user 3

user 5 Shaper counter

user 6

user 8 Shaper counter


id 5985612

body /* Sets the N flag to VAL, if it equals to 0 or 1. */

user 4 Sets the N flag to VAL,

user 7 Sets the N flag

user 5 Sets the N flag to VAL,

user 3 Sets the N flag to VAL,

user 6 Sets the N flag to VAL,

user 8 Sets the N flag to VAL,


id 2842099

body /* We try a read lock. The daemon should have a write lock. * Seen using flock: FreeBSD code */

user 2

user 4 try a read lock.

user 5 read lock.

user 3 We try a read lock.

user 6 try a read lock.

user 8 try a read lock. The daemon should have a write lock.


id 2066339

body /** * Send the rules to a player. * * @param op * player to send rules to. */

user 4 Send the rules to a player.

user 6 Send the rules to a player.

user 5 Send the rules to a player.

user 3 Send the rules to a player.

user 8 Send the rules to a player.


id 2478181

body /*! \see QAbstractItemModel::setData */

user 4

user 5

user 6

user 3

user 8


id 5405456

body /* * Called when langmap option is set; the language map can be * changed at any time! */

user 4

user 5

user 3

user 6

user 8 changed at any time!


id 1642827

body /** * @brief Adds light to the entity's lights list, sorted by distance * @note Since list is very small (8 elements), insertion sort is used - it beats qsort and other fancy algos in case of a small list * and allows a better integration with other parts of code. * @param[in] pos Origin of entity for which light is added * @param[in] ltng Lighting data for entity being updated * @param[in] light The light itself * @param[in] distSqr Squared distance from entity's origin to the light * @sa R_UpdateLightList */

user 4 Adds light to the entity's lights list, sorted by distance

user 5 Adds light to the entity's lights list, sorted by distance

user 3 Adds light to the entity's lights list, sorted by distance

user 6 Adds light to the entity's lights list, sorted by distance

user 8 Adds light to the entity's lights list, sorted by distance


id 1570207

body /* * Does the actual work of the CAPABILITY command (because we need to * output this stuff in other places as well) */

user 4 Does the actual work of the CAPABILITY command

user 5

user 6

user 3

user 8 Does the actual work of the CAPABILITY command


id 6575452

body /** * \brief Write a string in the file. * \param s The string to write. */

user 4 Write a string in the file.

user 5 Write a string in the file.

user 3 Write a string in the file.

user 6 Write a string in the file.

user 8 Write a string in the file.


id 3191692

body /* NOTE: assumes atomic mutex is locked */

user 4

user 3

user 5

user 6

user 8


id 6223417

body /* ------------------------------------------------------------------------------- Returns the result of subtracting the double-precision floating-point values `a' and `b'. The operation is performed according to the IEC/IEEE Standard for Binary Floating-Point Arithmetic. ------------------------------------------------------------------------------- */

user 4 Returns the result of subtracting the double-precision floating-point values `a' and `b'.

user 5 Returns the result of subtracting the double-precision floating-point values

user 3 Returns the result of subtracting the double-precision floating-point values `a' and `b'.

user 6 subtracting the double-precision floating-point values `a' and `b'.

user 8 Returns the result of subtracting the double-precision floating-point values `a' and `b'.


id 1639677

body /** * @brief Empty the mapcycle list * @sa SV_MapcycleAdd */

user 4 Empty the mapcycle list

user 5 Empty the mapcycle list

user 3 Empty the mapcycle list

user 8 Empty the mapcycle list

user 6 Empty the mapcycle list


id 447264

body /* Emit bytes to the instruction stream: */

user 4 Emit bytes to the instruction stream:

user 5 Emit bytes to the instruction stream:

user 3 Emit bytes to the instruction stream:

user 6 Emit bytes to the instruction stream:

user 8 Emit bytes to the instruction stream:


id 1773071

body /*\ Acquire mutex for "proc" * -must be executed in hrecv/AM handler thread * -application thread must use generic_lock routine \*/

user 4 Acquire mutex for "proc"

user 5 Acquire mutex for "proc"

user 3 Acquire mutex for "proc"

user 6 Acquire mutex for "proc"

user 8 Acquire mutex for "proc"


id 3938412

body /* * Increase the value of a variable. */

user 4 Increase the value of a variable.

user 5 Increase the value of a variable.

user 3 Increase the value of a variable.

user 8 Increase the value of a variable.

user 6 Increase the value of a variable.


id 2328314

body /* call-seq: db.closed? * * Returns +true+ if this database instance has been closed (see #close). */

user 4

user 5 Returns +true+ if this database instance has been closed

user 3 Returns +true+ if this database instance has been closed

user 6 Returns +true+ if this database instance has been closed

user 8 Returns +true+ if this database instance has been closed


id 1781582

body /* Known problems: the index [1][1][1], i.e. the central cell in the block, never occurs: neither in the central scheme nor in Youngs' method. Therefore an isolated droplet will have a normal with all components to zero. I took care of the division-by-zero issue, but not of this one. Ruben */

user 2

user 4

user 5

user 3

user 6

user 8


id 3981849

body /* * Have a usable connection? */

user 4 Have a usable connection?

user 3 Have a usable connection?

user 5 Have a usable connection?

user 6

user 8


id 2525477

body /* This function is also used by tests */

user 4

user 5

user 3

user 6

user 8


id 5107385

body /* * NAME:	data->fetchsl() * DESCRIPTION:	incrementally retrieve a signed long word of data */

user 4 incrementally retrieve a signed long word of data

user 5 incrementally retrieve a signed long word of data

user 3 incrementally retrieve a signed long word of data

user 8 incrementally retrieve a signed long word of data

user 6 incrementally retrieve a signed long word of data


id 82479

body /* * could be reach : * - when the call is accepted * - when a request is accepted (pause, resume) */

user 4

user 3

user 5 the call is accepted

user 6

user 8


id 5151847

body /* set start state to NF16noStart */

user 4 set start state to NF16noStart

user 5 set start state to NF16noStart

user 3 set start state to NF16noStart

user 6 set start state to NF16noStart

user 8 set start state to NF16noStart


id 663039

body /* map-loop5093 in mapwalk in k19807 in prepare-for-code-generation in k6316 in k6313 in k6310 */

user 4

user 3

user 5

user 6

user 8


id 1485075

body /* * Send quit to process on other side of pty. * If it is in raw mode, just write NULL; * otherwise, write quit char. */

user 4 Send quit to process on other side of pty.

user 3 Send quit to process on other side of pty.

user 5 Send quit to process on other side of pty.

user 6 Send quit to process on other side of pty.

user 8 Send quit to process on other side of pty.


id 179198

body /* generate paging message for given gsm time */

user 4 generate paging message for given gsm time

user 6 generate paging message for given gsm time

user 5 generate paging message for given gsm time

user 3 generate paging message for given gsm time

user 8 generate paging message for given gsm time


id 2937801

body /*! \relates XsArray \brief Reinitializes the XsArray with space for \a count items and copies them from \a src \details This function reinitializes the object reserving space for at least \a count items in the buffer. \a count may be 0. If \a src is not 0, \a count items will be copied from \a src. Previous data will be cleared automatically, but the reserved space will not be reduced. \param count the number of items in src \param src a pointer to an array of output configuration objects \sa XsArray_reserve */

user 4 Reinitializes the XsArray with space for \a count items and copies them

user 3 Reinitializes the XsArray

user 5 This function reinitializes the object reserving space for at least \a count

user 6 Reinitializes the XsArray with space for \a count items and copies them

user 8 from \a src \details


id 1637584

body /*! *\brief	Free a matcher structure * *\param	prop Pointer to matcher structure allocated with *	#matcherprop_new */

user 4 Free a matcher structure

user 3 Free a matcher structure

user 5 Free a matcher structure

user 6 Free a matcher structure

user 8 Free a matcher structure


id 5997512

body /* * Core decrypt routines, expecting word32 inputs read big-endian * from the byte-oriented input stream. */

user 2 Core decrypt routines,

user 4

user 5 Core decrypt routines, expecting word32 inputs read big-endian from the byte-oriented input

user 3

user 6

user 8 expecting word32 inputs read big-endian from the byte-oriented input stream.


id 4031141

body /* llvalue -> int */

user 4

user 5

user 3

user 6

user 8


id 6057324

body /*-<a href="qh-merge.htm#TOC" >-------------------------------</a><a name="comparemerge">-</a> qh_comparemerge( merge1, merge2 ) used by qsort() to order merges */

user 4

user 5

user 3 used by qsort() to order merges

user 8 used by qsort() to order merges

user 6


id 1352892

body /* Perform some basic tests of binary operations on isl_val objects. */

user 4 Perform some basic tests of binary operations on isl_val objects.

user 5 Perform some basic tests of binary operations on isl_val objects.

user 3 Perform some basic tests of binary operations on isl_val objects.

user 6 basic tests of binary operations on isl_val objects.

user 8 Perform some basic tests of binary operations on isl_val objects.


id 4502036

body /* Frees process status information * Returns 1 if successful or -1 on error */

user 4 Frees process status information

user 5 Frees process status information

user 3 Frees process status information

user 6 Frees process status information

user 8 Frees process status information


id 4155484

body /** * Opens a camera device. * * The function returns a handle that can be used for all functions that require * a device handle. * * @param device_name	Name of the device to open. * Two different naming schemes are accepted: Full device names * (e.g. '/dev/video0') and short names (e.g. 'video0') as * returned by c_enum_devices(). * @return * - a device handle greater than zero on success * - 0 if an error has occurred */

user 4 Opens a camera device.

user 5 Opens a camera device.

user 6 Opens a camera device.

user 3 Opens a camera device.

user 8 Opens a camera device.


id 5358134

body /* INTERNAL: constructs string returned by setlocale */

user 4 constructs string returned by setlocale

user 5 constructs string returned by setlocale

user 6 constructs string returned by setlocale

user 3 constructs string returned by setlocale

user 8 constructs string returned by setlocale


id 6152841

body /* | | The probability of having one lineage remaining after time t | in the birth-death process. | | param: t - speciation time | param: b - birth rate | param: d - death rate | param: f - sample frequency | return: log probability of one remaining lineage | */

user 4 The probability of having one lineage remaining after time t | in

user 3 The probability of having one lineage remaining after time t | in

user 5 probability of having one lineage remaining after time t

user 8 in the birth-death process.

user 6


id 1067275

body /* Returns the library version */

user 4 Returns the library version

user 5 Returns the library version

user 6 Returns the library version

user 3 Returns the library version

user 8 Returns the library version


id 3827472

body /* Report title */

user 4 Report title

user 3 Report title

user 5

user 8 Report title

user 6 Report title


id 2932215

body /** * Create an effect vehicle above a particular location. * @param x The x location on the map. * @param y The y location on the map. * @param z The offset from the ground. * @param type The type of effect vehicle. * @return The effect vehicle. */

user 4 Create an effect vehicle above a particular location.

user 3 Create an effect vehicle above a particular location.

user 5 Create an effect vehicle above a particular location.

user 6 Create an effect vehicle above a particular location.

user 8 Create an effect vehicle above a particular location.


id 3499117

body /* dispose connection state, sets it to NULL * checks for pointer to NULL */

user 4 dispose connection state,

user 5 dispose connection state, sets it to NULL

user 3 dispose connection state, sets it to NULL

user 6 dispose connection state,

user 8 dispose connection state,


id 4107717

body /* ** Return status data for a single loop within query pStmt. */

user 4 Return status data for a single loop within query pStmt.

user 6 Return status data for a single loop

user 5 Return status data for a single loop within query pStmt.

user 3 Return status data for a single loop within query pStmt.

user 8 Return status data for a single loop within query pStmt.


id 4467929

body /* Check properties of (inuse) mmapped chunks */

user 4 Check properties of (inuse) mmapped chunks

user 5 Check properties of (inuse) mmapped chunks

user 3 Check properties of (inuse) mmapped chunks

user 6 Check properties of (inuse) mmapped chunks

user 8 Check properties of (inuse) mmapped chunks


id 214707

body /** * nla_strcmp - Compare a string attribute against a string * @nla: netlink string attribute * @str: another string */

user 4 Compare a string attribute against a string

user 5 Compare a string attribute against a string

user 3 Compare a string attribute against a string

user 6 Compare a string attribute against a string

user 8 Compare a string attribute against a string


id 2165875

body /* Initialise an mtd structure. */

user 4 Initialise an mtd structure.

user 5 Initialise an mtd structure.

user 6 Initialise an mtd structure.

user 3 Initialise an mtd structure.

user 8


id 1838212

body /* * Insert character C at the curent cursor position. */

user 4 Insert character C at the curent cursor position.

user 3 Insert character C at the curent cursor position.

user 5

user 6 Insert character C at the curent cursor position.

user 8 Insert character C at the curent cursor position.


id 3993012

body /* Remove all (explicit) children from "tree". */

user 4 Remove all (explicit) children from "tree".

user 5 Remove all (explicit) children from "tree".

user 3 Remove all (explicit) children from "tree".

user 6 Remove all (explicit) children from "tree".

user 8 Remove all (explicit) children from "tree".


id 3914075

body /****f* OpenSM: Physical Port/osm_physp_get_dr_path_ptr * NAME *	osm_physp_get_dr_path_ptr * * DESCRIPTION *	Returns a pointer to the directed route path for this port. * * SYNOPSIS */

user 4 Returns a pointer to the directed route path for this port.

user 3 Returns a pointer to the directed route path for this port.

user 5 Returns a pointer to the directed route path for this port.

user 6 Returns a pointer to the directed route path for this port.

user 8 Returns a pointer to the directed route path for this port.


id 1436798

body /* ** This function is called to allocate an array of Fts3Index structures ** representing the indexes maintained by the current FTS table. FTS tables ** always maintain the main "terms" index, but may also maintain one or ** more "prefix" indexes, depending on the value of the "prefix=" parameter ** (if any) specified as part of the CREATE VIRTUAL TABLE statement. ** ** Argument zParam is passed the value of the "prefix=" option if one was ** specified, or NULL otherwise. ** ** If no error occurs, SQLITE_OK is returned and *apIndex set to point to ** the allocated array. *pnIndex is set to the number of elements in the ** array. If an error does occur, an SQLite error code is returned. ** ** Regardless of whether or not an error is returned, it is the responsibility ** of the caller to call sqlite3_free() on the output array to free it. */

user 4 allocate an array of Fts3Index structures representing the indexes maintained by the

user 6 This function is called to allocate an array of Fts3Index structures

user 5 allocate an array of Fts3Index structures representing the indexes

user 3 This function is called to allocate an array of Fts3Index structures representing

user 8 current FTS table.


id 659350

body /* k12881 in lambda-info->string in k12198 in k11938 in k11935 in k11932 in k11929 in k11925 in k11921 in k11260 in k11257 in k11254 in k11251 in k11248 in k11245 in k11242 in k11239 in k11236 in k11233 in k11230 in k11227 in k11224 in ... */

user 4

user 5

user 3

user 6

user 8


id 2979010

body /*@exposed@*/ ltoken

user 4

user 6

user 5

user 3

user 8


id 2965599

body /*! Sets this QXmlQuery to an XQuery read from the \a sourceCode device. The device must have been opened with at least QIODevice::ReadOnly. \a documentURI represents the query obtained from the \a sourceCode device. It is the base URI of the static context, as defined in the \l {http://www.w3.org/TR/xquery/}{XQuery language}. It is used internally to resolve relative URIs that appear in the query, and for message reporting. \a documentURI can be empty. If it is empty, the \l{QCoreApplication::applicationFilePath()} {application file path} is used. If it is not empty, it may be either relative or absolute. If it is relative, it is resolved itself against the \l {QCoreApplication::applicationFilePath()} {application file path} before it is used. If \a documentURI is neither a valid URI nor empty, the result is undefined. If the query contains a static error (e.g. syntax error), an error message is sent to the messageHandler(), and isValid() will return \e false. Variables must be bound before setQuery() is called. The encoding of the XQuery in \a sourceCode is detected internally using the rules for setting and detecting encoding of XQuery files, which are explained in the \l {http://www.w3.org/TR/xquery/} {XQuery language}. If \a sourceCode is \c null or not readable, or if \a documentURI is not a valid URI, behavior is undefined. \sa isValid() */

user 4 Sets this QXmlQuery to an XQuery read from the \a sourceCode device.

user 5 Sets this QXmlQuery to an XQuery

user 6 Sets this QXmlQuery to an XQuery read from the \a sourceCode device.

user 3 Sets this QXmlQuery to an XQuery read from the \a sourceCode device.

user 8 Sets this QXmlQuery to an XQuery read from the \a sourceCode device.


id 951747

body /* Convert the existing diagonal stem layout to glyph data, containing * information about points assigned to each stem. Then run on stem chunks * and associate with each point the line it should be aligned by. Note that * we have to do this on a relatively early stage, as it may be important * to know, if the given point is subject to the subsequent diagonale hinting, * before any actual processing of diagonal stems is started. */

user 4 Convert the existing diagonal stem layout to glyph data,

user 5 Convert the existing diagonal stem layout to glyph data,

user 3 Convert the existing diagonal stem layout to glyph data,

user 6 Convert the existing diagonal stem layout to glyph data,

user 8 containing information about points assigned to each stem.


id 1266534

body /** * \brief delete the specified queue * \param seq sequencer handle * \param q queue id to delete * \return 0 on success otherwise a negative error code * * \sa snd_seq_alloc_queue() */

user 4 delete the specified queue

user 5 delete the specified queue

user 3 delete the specified queue

user 8 delete the specified queue

user 6 delete the specified queue


id 2734276

body /* ** Rtree virtual table module xCreate method. */

user 4 Rtree virtual table module xCreate method.

user 5 Rtree virtual table module xCreate method.

user 3

user 8 Rtree virtual table module xCreate method.

user 6


id 533652

body /**************************************************************************** ** *F SaveString( <string> ) . . . . . . . . . . . . . . . . . . save a string ** */

user 4 save a string

user 5 save a string

user 3 save a string

user 6

user 8 save a string


id 4314477

body /* ** Read the meta-information out of a database file. */

user 4 Read the meta-information out of a database file.

user 3 Read the meta-information out of a database file.

user 5

user 6 Read the meta-information out of a database file.

user 8 Read the meta-information out of a database file.


id 5936252

body /***************************************************************************** * dvbpsi_rst_empty ***************************************************************************** * Clean a dvbpsi_rst_t structure. *****************************************************************************/

user 4 Clean a dvbpsi_rst_t structure.

user 5 Clean a dvbpsi_rst_t structure.

user 3 Clean a dvbpsi_rst_t structure.

user 8 Clean a dvbpsi_rst_t structure.

user 6 Clean a dvbpsi_rst_t structure.


id 5915072

body /* ================ R_BatchSurface Add the surface to the current batch, or just draw it immediately if we're not using VBOs. ================ */

user 4 Add the surface to the current batch, or just draw it immediately

user 5 Add the surface to the current batch,

user 3 Add the surface to the current batch,

user 6 Add the surface to the current batch, or just draw it immediately

user 8 if we're not using VBOs.


id 107743

body /* ** Flush the contents of memory to a real file on disk. */

user 4 Flush the contents of memory to a real file on disk.

user 3 Flush the contents of memory to a real file on disk.

user 5

user 8 Flush the contents of memory to a real file on disk.

user 6 Flush the contents of memory to a real file on disk.


id 1488779

body int	/* O - Character value or -1 on error */

user 4

user 5

user 3

user 6

user 8


id 5345808

body /* FIXME: is this already implemented somewhere else? */

user 4

user 3

user 5

user 6

user 8


id 69205

body /** Returns the key length used by a method */

user 4 Returns the key length used by a method

user 5 Returns the key length used by a method

user 3 Returns the key length used by a method

user 6 Returns the key length used by a method

user 8 Returns the key length used by a method


id 4405260

body /* ** Somewhere on pPage is a pointer to page iFrom. Modify this pointer so ** that it points to iTo. Parameter eType describes the type of pointer to ** be modified, as follows: ** ** PTRMAP_BTREE: pPage is a btree-page. The pointer points at a child ** page of pPage. ** ** PTRMAP_OVERFLOW1: pPage is a btree-page. The pointer points at an overflow ** page pointed to by one of the cells on pPage. ** ** PTRMAP_OVERFLOW2: pPage is an overflow-page. The pointer points at the next ** overflow page in the list. */

user 4 Somewhere on pPage is a pointer to page iFrom. Modify this pointer

user 3 Modify this pointer so that it points to iTo.

user 5 Modify this pointer so that it points to iTo.

user 6 Modify this pointer so that it points to iTo.

user 8 so that it points to iTo.


id 1163474

body /* start waiting for a new HTTP/RTSP request */

user 4 start waiting for a new HTTP/RTSP request

user 6 start waiting for a new HTTP/RTSP request

user 5 start waiting for a new HTTP/RTSP request

user 3 start waiting for a new HTTP/RTSP request

user 8 start waiting for a new HTTP/RTSP request


id 4701683

body /* ** Return a pointer to a TriggerPrg object containing the sub-program for ** trigger pTrigger with default ON CONFLICT algorithm orconf. If no such ** TriggerPrg object exists, a new object is allocated and populated before ** being returned. */

user 4 Return a pointer to a TriggerPrg object containing the sub-program for trigger

user 5 Return a pointer to a TriggerPrg object containing the sub-program for trigger

user 6 Return a pointer to a TriggerPrg object containing the sub-program for trigger

user 3 Return a pointer to a TriggerPrg object containing the sub-program for trigger

user 8 pTrigger with default ON CONFLICT algorithm orconf.


id 5216990

body /* recursively check for script nodes in groups using this text and update */

user 4 recursively check for script nodes in groups using this text and update

user 3 recursively check for script nodes in groups using this text and update

user 5 recursively check for script nodes in groups using this text and update

user 8 recursively check for script nodes in groups using this text and update

user 6 recursively check for script nodes in groups using this text and update


id 2960144

body /** * Print information of a generic datum (one whose type is unknown) * * @param level The level to print the message * @param vdatum The datum to print */

user 4 Print information of a generic datum

user 7

user 5 Print information of a generic datum

user 3 Print information of a generic datum

user 6 Print information of a generic datum

user 8 Print information of a generic datum (one whose type is unknown)


id 4755246

body /* * Category: Shaders * * Core in: * OpenGL : 2.0 */

user 4

user 5

user 3

user 8

user 6


id 2199758

body /** Suppresssion d'un locus */

user 4 Suppresssion d'un locus

user 3

user 5 Suppresssion d'un locus

user 6

user 8 Suppresssion d'un locus


id 6575586

body /** * \brief Tell if the angle applied to the mark is also applied to the * animation. * \param b Apply it or not. */

user 4 Tell if the angle applied to the mark is also applied to

user 5 angle applied to the mark is also applied to the animation.

user 6 Tell if the angle applied to the mark is also applied to

user 3 Tell if the angle applied to the mark is also applied to

user 8 the animation.


id 5967757

body /*! * \brief Send a FACILITY SubaddressTransfer. * * \param ctrl D channel controller. * \param call Q.931 call leg * * \retval 0 on success. * \retval -1 on error. */

user 4 Send a FACILITY SubaddressTransfer.

user 5 Send a FACILITY SubaddressTransfer.

user 3 Send a FACILITY SubaddressTransfer.

user 6 Send a FACILITY SubaddressTransfer.

user 8 Send a FACILITY SubaddressTransfer.


id 3636439

body /* * Compute the sum for an INC instruction */

user 4 Compute the sum for an INC instruction

user 3 Compute the sum for an INC instruction

user 5 Compute the sum for an INC instruction

user 6 Compute the sum for an INC instruction

user 8 Compute the sum for an INC instruction


id 5218501

body /* executes blocking render */

user 4 executes blocking render

user 6 executes blocking render

user 5 executes blocking render

user 3 executes blocking render

user 8 executes blocking render


id 743295

body /** Set the euid of this process to a non-root uid */

user 4 Set the euid of this process to a non-root uid

user 5 Set the euid of this process to a non-root uid

user 3 Set the euid of this process to a non-root uid

user 8 Set the euid of this process to a non-root uid

user 6 Set the euid of this process to a non-root uid


id 1718385

body /* 6280 ******************************************************** * CPX Compare index X ***************************************************************/

user 4 Compare index X

user 5 CPX Compare index X

user 3 Compare index X

user 8 Compare index X

user 6


id 5613326

body /* ** Loop through the program looking for P2 values that are negative ** on jump instructions. Each such value is a label. Resolve the ** label by setting the P2 value to its correct non-zero value. ** ** This routine is called once after all opcodes have been inserted. ** ** Variable *pMaxFuncArgs is set to the maximum value of any P2 argument ** to an OP_Function, OP_AggStep or OP_VFilter opcode. This is used by ** sqlite3VdbeMakeReady() to size the Vdbe.apArg[] array. ** ** The Op.opflags field is set on all opcodes. */

user 4 Loop through the program looking for P2 values that are negative on

user 5 Resolve the label by setting the P2 value to its correct non-zero

user 3 Loop through the program looking for P2 values that are negative on

user 6 Loop through the program looking for P2 values that are negative on

user 8 jump instructions.


id 1021192

body /* ** Return the bitmask for the given cursor number. Return 0 if ** iCursor is not in the set. */

user 4 Return the bitmask for the given cursor number.

user 6 Return the bitmask for the given cursor number.

user 5 Return the bitmask for the given cursor number.

user 3 Return the bitmask for the given cursor number.

user 8 Return the bitmask for the given cursor number.


id 5080193

body /** * Copies data into the VisBuffer from another VisBuffer starting at byteoffset. * The copy is atomic, everything or nothing is copied. * * @param dest Pointer to the destination VisBuffer. * @param src Pointer to the source VisBuffer. * @param byteoffset The offset in the destination VisBuffer. * * @return VISUAL_OK on succes, -VISUAL_ERROR_BUFFER_NULL or -VISUAL_ERROR_NULL on failure. */

user 4 Copies data into the VisBuffer from another VisBuffer starting at byteoffset.

user 5 Copies data into the VisBuffer from another VisBuffer starting at byteoffset.

user 3 Copies data into the VisBuffer from another VisBuffer starting at byteoffset.

user 6 Copies data into the VisBuffer from another VisBuffer starting at byteoffset.

user 8 Copies data into the VisBuffer from another VisBuffer starting at byteoffset.


id 403244

body /** * \internal Zwraca strukturę połączenia o danym identyfikatorze. * * \param sess Struktura sesji * \param id Identyfikator połączenia * \param uin Numer nadawcy lub odbiorcy * * \return Struktura połączenia lub \c NULL jeśli nie znaleziono */

user 4 Zwraca strukturę połączenia o danym identyfikatorze.

user 5

user 3

user 6

user 8 Zwraca strukturę połączenia o danym identyfikatorze.


id 4747569

body /* count embedded options */

user 4 count embedded options

user 5 count embedded options

user 3

user 6

user 8 count embedded options


id 3077984

body /** Most distant from item among others */

user 4 Most distant from item among others

user 3

user 5 Most distant from item among others

user 6

user 8 Most distant from item among others


id 4545881

body /****************************************************************************** * * * Function: str2uint64 * * * * Purpose: convert string to 64bit unsigned integer * * * * Parameters: str - string to convert * * value - a pointer to converted value * * * * Return value: SUCCEED - the string is unsigned integer * * FAIL - otherwise * * * * Author: Alexander Vladishev * * * * Comments: the function automatically processes suffixes K, M, G, T * * * ******************************************************************************/

user 4 convert string to 64bit unsigned integer

user 3 convert string to 64bit unsigned integer

user 5 convert string to 64bit unsigned integer

user 6 convert string to 64bit unsigned integer

user 8 convert string to 64bit unsigned integer


id 300710

body /* ** Walk the parse trees associated with all subqueries in the ** FROM clause of SELECT statement p. Do not invoke the select ** callback on p, but do invoke it on each FROM clause subquery ** and on any subqueries further down in the tree. Return ** WRC_Abort or WRC_Continue; */

user 4 Walk the parse trees associated with all subqueries in the FROM clause

user 5 Walk the parse trees associated with all subqueries in the FROM clause

user 6 Walk the parse trees associated with all subqueries in the FROM clause

user 3 Walk the parse trees associated with all subqueries in the FROM clause

user 8 of SELECT statement p.


id 3763748

body /* return next token without macro substitution */

user 4 return next token without macro substitution

user 3 return next token without macro substitution

user 5 return next token without macro substitution

user 6 return next token without macro substitution

user 8 return next token without macro substitution


id 5389947

body /*********************************************************************** * GetProcAddress32 (KERNEL.453) */

user 4

user 5

user 3

user 6

user 8


id 375534

body /* * write the help message to standard output and log file */

user 4 write the help message to standard output and log file

user 3 write the help message to standard output and log file

user 5 write the help message to standard output and log file

user 6 write the help message to standard output and log file

user 8 write the help message to standard output and log file


id 862747

body /*! Destroys the socket. This causes any backlogged connections (connections that have reached the host, but not yet been completely set up by calling Q3SocketDevice::accept()) to be severed. Existing connections continue to exist; this only affects the acceptance of new connections. */

user 4 Destroys the socket.

user 5 Destroys the socket.

user 3 Destroys the socket.

user 6 Destroys the socket.

user 8 Destroys the socket.


id 1291856

body /* Pass xSectorSize requests through to the original VFS unchanged. */

user 4 Pass xSectorSize requests through to the original VFS unchanged.

user 5 Pass xSectorSize requests through to the original VFS unchanged.

user 3 Pass xSectorSize requests through to the original VFS unchanged.

user 6 Pass xSectorSize requests through to the original VFS unchanged.

user 8 Pass xSectorSize requests through to the original VFS unchanged.


id 657848

body /* k502 in k499 in k496 in collect-info in k479 in k476 in k473 in k470 in k467 in k464 in k461 in k458 in k455 */

user 4

user 3

user 5

user 6

user 8


id 1400329

body /* Find unused slots with reaching-definitions bytecode data-flow analysis. */

user 4 Find unused slots with reaching-definitions bytecode data-flow analysis.

user 5 Find unused slots with reaching-definitions bytecode data-flow analysis.

user 3 Find unused slots with reaching-definitions bytecode data-flow analysis.

user 6 Find unused slots with reaching-definitions bytecode data-flow analysis.

user 8 Find unused slots with reaching-definitions bytecode data-flow analysis.


id 5148462

body /* Makes traverse though the whole tree and prints all nodes */

user 4 Makes traverse though the whole tree and prints all nodes

user 5 Makes traverse though the whole tree and prints all nodes

user 3 Makes traverse though the whole tree and prints all nodes

user 6 Makes traverse though the whole tree and prints all nodes

user 8 Makes traverse though the whole tree and prints all nodes


id 2895273

body /* * call-seq: * parser.parse(yaml) * * Parse the YAML document contained in +yaml+. Events will be called on * the handler set on the parser instance. * * See Psych::Parser and Psych::Parser#handler */

user 4 Parse the YAML document contained in +yaml+.

user 3 Parse the YAML document

user 5 Parse the YAML document contained in +yaml+.

user 6 Parse the YAML document

user 8 Parse the YAML document contained in +yaml+.


id 1154602

body /* called by the Freeze Button alarm */

user 4

user 5

user 6

user 3

user 8


id 4277113

body void /* PRIVATE */

user 4

user 3

user 5

user 8

user 6


id 1903999

body /* * read/writes from s->s2->mac_data using length for encrypt and decrypt. * It sets s->s2->padding and s->[rw]length if we are encrypting Returns 0 on * error and 1 on success */

user 4 read/writes from s->s2->mac_data using length for encrypt and decrypt.

user 3 read/writes from s->s2->mac_data using length for encrypt and decrypt.

user 5 read/writes from s->s2->mac_data using length for encrypt and decrypt.

user 6 read/writes from s->s2->mac_data using length for encrypt and decrypt.

user 8 read/writes from s->s2->mac_data using length for encrypt and decrypt.


id 4831402

body /* _will_run_test - determine when and where a pending job can start, removes *	jobs from node table at termination time and run _test_job() after * each one. Used by SLURM's sched/backfill plugin and Moab. */

user 4 determine when and where a pending job can start,

user 5 determine when and where a pending job can start,

user 3 determine when and where a pending job can start,

user 6 determine when and where a pending job can start,

user 8 node table at termination time and run _test_job() after each one.


id 5365831

body /* * FIXME: * Assumes that the resources are in .rsrc * and .rsrc is the last section in the file. * Not sure whether updating resources will other cases on Windows. * If the resources lie in a section containing other data, * resizing that section could possibly cause trouble. * If the section with the resources isn't last, the remaining * sections need to be moved down in the file, and the section header * would need to be adjusted. * If we needed to add a section, what would we name it? * If we needed to add a section and there wasn't space in the file * header, how would that work? * Seems that at least some of these cases can't be handled properly. */

user 4

user 5

user 6

user 3

user 8


id 4102367

body /* ** COMMAND: test-compress-2 ** ** Usage: %fossil test-compress-2 IN1 IN2 OUT ** ** Read files IN1 and IN2, concatenate the content, compress the ** content, then write results into OUT. ** ** This is used to test and debug the blob_compress2() routine. */

user 4 Read files IN1 and IN2, concatenate the content, compress the content, then

user 3 Read files IN1 and IN2, concatenate the content, compress the content, then

user 5 Read files IN1 and IN2, concatenate the content, compress the content,

user 8 write results into OUT.

user 6 Read files IN1 and IN2, concatenate the content, compress the content, then


id 6199359

body /* ---------------------------------------------------------------------------- ** Initialize DB server */

user 4

user 5 Initialize DB server

user 6 Initialize DB server

user 3 Initialize DB server

user 8 Initialize DB server


id 2997854

body /*-----------------------------------------------------------------* * void pCodeOptime2pCodes(pCode *pc1, pCode *pc2) * * ADHOC pattern checking * Now look for specific sequences that are easy to optimize. * Many of these sequences are characteristic of the compiler * (i.e. it'd probably be a waste of time to apply these adhoc * checks to hand written assembly.) * * *-----------------------------------------------------------------*/

user 4 look for specific sequences that are easy to optimize.

user 5 ADHOC pattern checking

user 3 look for specific sequences that are easy to optimize.

user 6

user 8 ADHOC pattern checking


id 1714542

body /* 64 2a: 0110 0100 0010 1010 xxxx xxxx */

user 4

user 5

user 3

user 8

user 6


id 4586165

body /* Minimal sandbox that sets zero nprocs and filesize rlimits */

user 4 sets zero nprocs and filesize rlimits

user 6 sets zero nprocs and filesize rlimits

user 5 Minimal sandbox that sets zero nprocs and filesize rlimits

user 3 Minimal sandbox that sets zero nprocs and filesize rlimits

user 8 Minimal sandbox that sets zero nprocs and filesize rlimits


id 2727118

body /* * this function prepares fast moving table for moveoldpoints * see xaos.info for details. It is not threaded since it is quite * fast. */

user 4 prepares fast moving table for moveoldpoints

user 5 prepares fast moving table for moveoldpoints

user 3 prepares fast moving table for moveoldpoints

user 6 this function prepares fast moving table for moveoldpoints

user 8 prepares fast moving table for moveoldpoints


id 5532461

body /* Finish reading a YAML sequence. * Return 0 on success and -1 on error. * * If the sequence started with a '[', then we expect a ']' to close * the sequence. * Otherwise, we double-check that the next token (if any) * is not a dash or that it has a smaller indentation than * that of the current sequence. */

user 4 Finish reading a YAML sequence.

user 3 Finish reading a YAML sequence.

user 5 Finish reading a YAML sequence.

user 6 Finish reading a YAML sequence.

user 8 Finish reading a YAML sequence.


id 1353445

body /* Add domains to domains->list for each individual value of the current * dimension, for that part of the schedule domain that lies in the * intersection of the option domain and the class domain. * Remove the corresponding sets from the class domain and * return the updated class domain. * * We first break up the unroll option domain into individual pieces * and then handle each of them separately. The unroll option domain * has been made disjoint in compute_domains_init_options, * * Note that we actively want to combine different pieces of the * schedule domain that have the same value at the current dimension. * We therefore need to break up the unroll option domain before * intersecting with class and schedule domain, hoping that the * unroll option domain specified by the user is relatively simple. */

user 4 Add domains to domains->list for each individual value of the current dimension,

user 5

user 3 Add domains to domains->list for each individual value of the current dimension,

user 6 Add domains to domains->list for each individual value of the current dimension,

user 8 of the option domain and the class domain.


id 1910379

body /* Try to load an engine in a shareable library */

user 4 Try to load an engine in a shareable library

user 5 Try to load an engine in a shareable library

user 6 Try to load an engine in a shareable library

user 3 Try to load an engine in a shareable library

user 8 Try to load an engine in a shareable library


id 1450540

body /** * It is not enough to use 'caret/Entered/ExitedRange' only as the cursor doesn't move when some * text has been selected. **/

user 4

user 5

user 3

user 6

user 8


id 2515934

body /* it's safe to call DSDeviceNameAndGUIDVector multiple times */

user 4

user 5

user 3

user 6

user 8


id 3844084

body /* Construct a parameter compression for "bset". * We basically just call isl_mat_parameter_compression with the right input * and then extend the resulting matrix to include the variables. * * The implementation assumes that "bset" does not have any equalities * that only involve the parameters and that isl_basic_set_gauss has * been applied to "bset". * * Let the equalities be given as * *	B(p) + A x = 0. * * We use isl_mat_parameter_compression_ext to compute the compression * *	p = T p'. */

user 4 Construct a parameter compression for "bset".

user 5 Construct a parameter compression for "bset".

user 6 Construct a parameter compression for "bset".

user 3 Construct a parameter compression for "bset".

user 8 Construct a parameter compression for "bset".


id 2259121

body /* When '^Z' is received from vty, move down to the enable mode. */

user 4

user 5 When '^Z' is received from vty, move down to the enable mode.

user 3 When '^Z' is received from vty, move down to the enable mode.

user 6 When '^Z' is received from vty, move down to the enable mode.

user 8 When '^Z' is received from vty, move down to the enable mode.


id 1510526

body /** * Run the dialog defined by the chat contest on top of the stack. * * This is the most important subfunction of the whole chat with friendly * droids and characters. After a chat context has been filled and pushed on * the stack, this function is invoked to handle the actual chat interaction * and the dialog flow. */

user 4 Run the dialog defined by the chat contest on top of the

user 5 Run the dialog defined by the chat contest

user 3 Run the dialog defined by the chat contest

user 6 handle the actual chat interaction and the dialog flow.

user 8 stack.


id 3135910

body /* * Terminate login as previous user, if any, resetting state; * used when USER command is given or login fails. */

user 4 Terminate login as previous user, if any, resetting state;

user 3 Terminate login as previous user, if any, resetting state;

user 5 Terminate login as previous user,

user 6 Terminate login as previous user,

user 8 Terminate login as previous user, if any, resetting state;


id 4238703

body /* * Either queue or send a packet, depending on whether queueing is * set. */

user 4 Either queue or send a packet, depending on whether queueing is set.

user 5 Either queue or send a packet,

user 3 Either queue or send a packet, depending on whether queueing is set.

user 6 Either queue or send a packet,

user 8 Either queue or send a packet, depending on whether queueing is set.


id 1021506

body /* This function (for internal use only) locates an element in an ** hash table that matches the given key. The hash for this key has ** already been computed and is passed as the 4th parameter. */

user 4 locates an element in an hash table that matches the given key.

user 5 locates an element in an hash table that matches the given key.

user 6 locates an element in an hash table that matches the given key.

user 3 This function (for internal use only) locates an element in an hash

user 8 locates an element in an hash table that matches the given key.


id 5968293

body /*! * \internal * \brief CC FSM PTMP agent CC_STATE_CALLBACK. * * \param ctrl D channel controller. * \param call Q.931 call leg. * \param cc_record Call completion record to process event. * \param event Event to process. * * \return Nothing */

user 4

user 5

user 3

user 6

user 8 CC FSM PTMP agent CC_STATE_CALLBACK.


id 4117985

body /* * A callback to handle the asynchronous disappearance of devices that are * possibly PCSC readers. */

user 4 handle the asynchronous disappearance of devices that are possibly PCSC readers.

user 5 handle the asynchronous disappearance of devices that are possibly PCSC readers.

user 3 handle the asynchronous disappearance of devices that are possibly PCSC readers.

user 6 handle the asynchronous disappearance of devices that are possibly PCSC readers.

user 8 handle the asynchronous disappearance of devices that are possibly PCSC readers.


id 3657550

body /* * Prepare data for a netlink message to originator of VSI. * Forward a notification from switch. */

user 4 Prepare data for a netlink message to originator of VSI. Forward a

user 5 Prepare data for a netlink message to originator of VSI.

user 3 Prepare data for a netlink message to originator of VSI.

user 6 Prepare data for a netlink message to originator of VSI.

user 8 Prepare data for a netlink message to originator of VSI.


id 4102195

body /* parse_table_cell -- parse a cell inside a table */

user 4 parse a cell inside a table

user 5 parse a cell inside a table

user 6 parse a cell inside a table

user 3 parse a cell inside a table

user 8 parse a cell inside a table


id 1440910

body /* ** Decrement the reference count on a page. If the page is clean and the ** reference count drops to 0, then it is made elible for recycling. */

user 4 Decrement the reference count on a page.

user 5 Decrement the reference count on a page.

user 3 Decrement the reference count on a page. If the page is clean

user 6 Decrement the reference count on a page.

user 8 Decrement the reference count on a page.


id 1629205

body /* quit : handler for a "-q" timeout (exit 0 instead of 1) */

user 4 handler for a "-q" timeout

user 3

user 6

user 5 handler for a "-q" timeout

user 8 handler for a "-q" timeout


id 1061441

body /* * Execute the "Term->xtra_hook" hook, if available (see above). */

user 4 Execute the "Term->xtra_hook" hook,

user 3 Execute the "Term->xtra_hook" hook, if available

user 5 Execute the "Term->xtra_hook" hook, if available

user 6 Execute the "Term->xtra_hook" hook, if available

user 8 Execute the "Term->xtra_hook" hook, if available (see above).


id 1867749

body /* @obsolete ajGraphGetTitle ** @rename ajGraphGetTitleS */

user 4

user 3

user 5

user 6

user 8


id 1436609

body /* ** Deallocate a WhereClause structure. The WhereClause structure ** itself is not freed. This routine is the inverse of whereClauseInit(). */

user 4 Deallocate a WhereClause structure.

user 5 Deallocate a WhereClause structure.

user 3 Deallocate a WhereClause structure.

user 6 Deallocate a WhereClause structure.

user 8 Deallocate a WhereClause structure.


id 4193503

body /* Searches for the end of the string or line. */

user 4 Searches for the end of the string or line.

user 3 Searches for the end of the string or line.

user 5

user 6 Searches for the end of the string or line.

user 8 Searches for the end of the string or line.


id 438046

body /* Allocates a region from rmesa->dma.current. If there isn't enough * space in current, grab a new buffer (and discard what was left of current) */

user 4 Allocates a region from rmesa->dma.current.

user 5 Allocates a region from rmesa->dma.current.

user 3 Allocates a region from rmesa->dma.current.

user 6 Allocates a region from rmesa->dma.current.

user 8 Allocates a region from rmesa->dma.current.


id 6145356

body /* Invoke all remaining finalizers that haven't yet been run. * This is needed for strict compliance with the Java standard, * which can make the runtime guarantee that all finalizers are run. * Unfortunately, the Java standard implies we have to keep running * finalizers until there are no more left, a potential infinite loop. * YUCK. * Note that this is even more dangerous than the usual Java * finalizers, in that objects reachable from static variables * may have been finalized when these finalizers are run. * Finalizers run at this point must be prepared to deal with a * mostly broken world. * This routine is externally callable, so is called without * the allocation lock. */

user 4 Invoke all remaining finalizers that haven't yet been run.

user 6 Invoke all remaining finalizers that haven't yet been run.

user 5 Invoke all remaining finalizers that haven't yet been run.

user 3 Invoke all remaining finalizers that haven't yet been run.

user 8 Invoke all remaining finalizers that haven't yet been run.


id 6211784

body /*------------------------------------------------------------------- Function: initFindVideoTimingStruct Date: Mar-2-98 Implementor(s): atai Library: init Description: find video timing structure Arguments: Return: none -------------------------------------------------------------------*/

user 4 find video timing structure

user 3 find video timing structure

user 5 find video timing structure

user 6 find video timing structure

user 8 find video timing structure


id 4337830

body /*LD E,RES 0,(IY+$)*/

user 4

user 5

user 3

user 6

user 8


id 5565580

body /** * \brief Windows main entry function * \param hInstance * \param hPrevInstance * \param lpszCmdLine command line * \param nCmdShow * \return error code */

user 4 Windows main entry function

user 5 Windows main entry function

user 3 Windows main entry function

user 6 Windows main entry function

user 8 Windows main entry function


id 1781824

body /** * gfs_free_surface_pressure: * @toplayer: a #GfsDomain. * @par: the multigrid paramaters. * @apar: the advection parameters. * */

user 4

user 6

user 5

user 3

user 8


id 5385191

body /* Returns TRUE if result.clip from GL_NV_vertex_program2 should be used and FALSE otherwise */

user 4 Returns TRUE if result.clip from GL_NV_vertex_program2 should be used and FALSE otherwise

user 5 Returns TRUE if result.clip from GL_NV_vertex_program2 should be used and FALSE otherwise

user 3 if result.clip from GL_NV_vertex_program2 should be used

user 6 Returns TRUE if result.clip from GL_NV_vertex_program2 should be used and FALSE otherwise

user 8


id 4100792

body /* ** Check to see if the remote client is SSH and return ** its IP or return default */

user 3 Check to see if the remote client is SSH and return its

user 4 see if the remote client is SSH and return its IP

user 5 Check to see if the remote client is SSH

user 6 if the remote client is SSH and return its IP

user 8 IP or return default


id 5586697

body /* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % G e t T h r e s h o l d M a p % % % % % % % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % GetThresholdMap() load and search one or more threshold map files for the % a map matching the given name or aliase. % % The format of the GetThresholdMap method is: % % ThresholdMap *GetThresholdMap(const char *map_id, % ExceptionInfo *exception) % % A description of each parameter follows. % % o map_id: ID of the map to look for. % % o exception: return any errors or warnings in this structure. % */

user 4 load and search one or more threshold map files for the % a

user 5 load and search one or more threshold map files

user 3 load and search one or more threshold map files for the % a

user 6 load and search one or more threshold map files

user 8 a map matching the given name or aliase.


id 3637428

body /* * Compute the difference of two absolute values into the given buffer */

user 4 Compute the difference of two absolute values into the given buffer

user 5 Compute the difference of two absolute values into the given buffer

user 3 Compute the difference of two absolute values into the given buffer

user 6 Compute the difference of two absolute values into the given buffer

user 8 Compute the difference of two absolute values into the given buffer


id 1782559

body /** * gfs_cell_message: * @cell: a #FttCell. * @format: a string format. * ...: arguments for format. * * Logs a message preceded by the pointer, position and level of @cell. */

user 4 Logs a message preceded by the pointer, position and level of @cell.

user 5 Logs a message preceded by the pointer, position and level of @cell.

user 6 Logs a message preceded by the pointer, position and level of @cell.

user 3 Logs a message preceded by the pointer, position and level of @cell.

user 8 Logs a message preceded by the pointer, position and level of @cell.


id 4500848

body /* playlist panel */

user 4

user 6

user 5 playlist

user 3

user 8


id 375356

body /* * find a db style command * algorithm is that any unique prefix is sufficient * also need algorithm that does not require full table search each time * * this needs alias mechanism ala gdb */

user 4 find a db style command

user 3 find a db style command

user 6 find a db style command

user 5 find a db style command

user 8 find a db style command


id 6551303

body /* we don't want error messages to stderr */

user 4

user 3

user 5

user 6

user 8


id 1020133

body /* ** Check that there are at least nSavepoint savepoints open. If there are ** currently less than nSavepoints open, then open one or more savepoints ** to make up the difference. If the number of savepoints is already ** equal to nSavepoint, then this function is a no-op. ** ** If a memory allocation fails, SQLITE_NOMEM is returned. If an error ** occurs while opening the sub-journal file, then an IO error code is ** returned. Otherwise, SQLITE_OK. */

user 4 Check that there are at least nSavepoint savepoints open.

user 5 Check that there are at least nSavepoint savepoints open.

user 3 Check that there are at least nSavepoint savepoints open. If there are

user 6 Check that there are at least nSavepoint savepoints open.

user 8 Check that there are at least nSavepoint savepoints open.


id 646487

body /* k22147 in k22144 in nfa-state->mst in k19096 in k9755 in k7759 in k7528 */

user 4

user 5

user 3

user 6

user 8


id 2068850

body /** * Processes a @ref page_type_42 "creator". * @param context The method context * @param op The teleporter to process * @retval METHOD_OK */

user 4 Processes a @ref page_type_42 "creator".

user 3

user 5 Processes a @ref page_type_42 "creator".

user 6

user 8


id 5037352

body /* * This checks for mutation-study type contigs where we expect to get all the * forward sequences in one orientation and all the reverse sequences in * another orientation. In this case there's a 50-50 chance of having the * wrong 'logical' orientation (reverses should be complemented). This * function will correct this. * * In order to not complement existing contigs we need a way of determining * which contigs are new. The number of contigs could shrink, but still * containing new contigs (if joins were made), so we define new contigs as * those consisting entirely of new readings. For this we need to know the * number of readings in the database prior to assembly. * * Arguments: *	io	GapIO *	prev_nreadings	Number of readings prior to assembly. */

user 4 This checks for mutation-study type contigs

user 6 checks for mutation-study type contigs

user 5 checks for mutation-study type contigs

user 3 This checks for mutation-study type contigs where we expect to get all

user 8 checks for mutation-study type contigs


id 3272208

body static int	/* O - 0 on success, -1 on error */

user 4

user 5

user 3

user 8

user 6


id 4110324

body /* Read the local header of the current zipfile Check the coherency of the local header and info in the end of central directory about this file store in *piSizeVar the size of extra info in local header (filename and size of extra field data) */

user 4 Check the coherency of the local header and info in the end

user 5 Read the local header of the current zipfile

user 6 Read the local header of the current zipfile

user 3 Check the coherency of the local header and info in the end

user 8 Read the local header of the current zipfile


id 5148320

body /* Returns maximal possible key may exist in item at @place. */

user 4 Returns maximal possible key may exist in item at @place.

user 3 Returns maximal possible key may exist in item at @place.

user 5 Returns maximal possible key may exist in item at @place.

user 6 Returns maximal possible key may exist in item at @place.

user 8 Returns maximal possible key may exist in item at @place.


id 5656893

body /* * delete an entry */

user 4 delete an entry

user 3 delete an entry

user 5 delete an entry

user 6 delete an entry

user 8 delete an entry


id 658891

body /* a8375 in string-ci<? in k6773 */

user 4

user 7

user 6

user 5

user 3

user 8


id 1266493

body /** * \brief Set the real-time mode of a port_subscribe container * \param info port_subscribe container * \param val non-zero to enable * * \sa snd_seq_subscribe_port(), snd_seq_port_subscribe_get_time_real() */

user 4 Set the real-time mode of a port_subscribe container

user 3 Set the real-time mode of a port_subscribe container

user 6 Set the real-time mode of a port_subscribe container

user 5 Set the real-time mode of a port_subscribe container

user 8 Set the real-time mode of a port_subscribe container


id 4833331

body /* * init() is called when the plugin is loaded, before any other functions * are called. Put global initialization here. */

user 4 global initialization

user 3 called when the plugin is loaded, before any other functions are called.

user 5 global initialization

user 8 global initialization here.

user 6


id 3801702

body /** buffer_add_sub : 'buffer -> s:string -> p:int -> l:int -> void <doc>Add [l] characters of the string [s] starting at position [p]. An error occurs if out of string bounds.</doc> **/

user 4

user 3 <doc>Add [l] characters of the string [s] starting at position [p].

user 5 <doc>Add [l] characters of the string [s] starting at position [p].

user 6 <doc>Add [l] characters of the string [s] starting at position [p].

user 8 <doc>Add [l] characters of the string [s] starting at position [p].


id 5265267

body /*! * Constructs a QxtWebServiceDirectory object with the specified session manager \a sm and \a parent. * * Often, the session manager will also be the parent, but this is not a requirement. */

user 4 Constructs a QxtWebServiceDirectory object

user 5 Constructs a QxtWebServiceDirectory object

user 3 Constructs a QxtWebServiceDirectory object with the specified session manager

user 6 Constructs a QxtWebServiceDirectory object with the specified session manager

user 8 Constructs a QxtWebServiceDirectory object with the specified session manager


id 335113

body /* function called by xmms to output data */

user 4 called by xmms to output data

user 5 output data

user 3 called by xmms to output data

user 6

user 8 output data


id 5364628

body /**************************************************************************** *	QueryPerformanceFrequency (KERNEL32.@) * * Get the resolution of the performance counter. * * PARAMS * frequency [O] Destination for the counter resolution * * RETURNS * Success. TRUE. Frequency contains the resolution of the counter. * Failure: FALSE. * * SEE ALSO * See QueryPerformanceCounter. */

user 4 Get the resolution of the performance counter.

user 5 Get the resolution of the performance counter.

user 3 Get the resolution of the performance counter.

user 6 Get the resolution of the performance counter.

user 8 Get the resolution of the performance counter.


id 3086270

body /** * list_del – deletes entry from list. * @entry: the element to delete from the list. * Note: list_empty on entry does not return true after this, the entry is in an undefined state. */

user 4 deletes entry from list.

user 5 deletes entry from list.

user 3 deletes entry from list.

user 6 deletes entry from list.

user 8 deletes entry from list.


id 3212294

body /*	print current shortcut configuration */

user 4 print current shortcut configuration

user 5 print current shortcut configuration

user 6 print current shortcut configuration

user 3 print current shortcut configuration

user 8 print current shortcut configuration


id 5321415

body /************************************************************************ * DataCache_IPersistStorage_Release (IUnknown) */

user 4

user 5

user 3

user 6

user 8


id 935909

body /* we use very lame preferences file format: ``property=value\n''. so - there must be no whitespaces on begin/end of line =) */

user 4

user 5

user 6

user 3

user 8


id 6541537

body static /*@ null @*/ gpointer

user 4

user 5

user 6

user 3

user 8


id 260421

body /* 1 button: Close (modal) */

user 4

user 5

user 3

user 8

user 6


id 5349683

body /********************************************************************* * LaunchSiteCertDialog (inetcpl.@) * * Launch a dialog to manage personal certificates * * PARAMS * parent [I] Handle for the parent window * * RETURNS * Failure: FALSE * Success: TRUE * * NOTES * rundll32 callable function: rundll32 inetcpl.cpl,LaunchSiteCertDialog * */

user 4 Launch a dialog to manage personal certificates

user 5 Launch a dialog to manage personal certificates

user 3 Launch a dialog to manage personal certificates

user 6 Launch a dialog to manage personal certificates

user 8 Launch a dialog to manage personal certificates


id 2847615

body /* Find paired reads mapped to different database sequences */

user 4 Find paired reads mapped to different database sequences

user 5 Find paired reads mapped to different database sequences

user 3 Find paired reads mapped to different database sequences

user 6 Find paired reads mapped to different database sequences

user 8 Find paired reads mapped to different database sequences


id 3749922

body /*! \brief Internal function called when a presence message is received */

user 4

user 3

user 5 Internal function called when a presence message is received

user 6

user 8 Internal function called when a presence message is received


id 5312963

body /****************************************************************************** * CryptHashSessionKey (ADVAPI32.@) * * Compute the cryptographic hash of a session key object. * * PARAMS * hHash [I] Handle to the hash object. * hKey [I] Handle to the key to be hashed. * dwFlags [I] Can be CRYPT_LITTLE_ENDIAN. * * RETURNS * Success: TRUE * Failure: FALSE */

user 4 Compute the cryptographic hash of a session key object.

user 6 Compute the cryptographic hash of a session key object.

user 5 Compute the cryptographic hash of a session key object.

user 3 Compute the cryptographic hash of a session key object.

user 8 Compute the cryptographic hash of a session key object.


id 4443492

body /* * At the end of a migration where postcopy_ram_incoming_init was called. */

user 4

user 3

user 5

user 6

user 8


id 815771

body /** * crystalhd_pci_cfg_rd - PCIe config read * @adp: Adapter instance * @off: PCI config space offset. * @len: Size -- Byte, Word & dword. * @val: Value read * * Return: *	Status. * * Get value from PCIe config space. */

user 4 Get value from PCIe config space.

user 5 Get value from PCIe config space.

user 3 Get value from PCIe config space.

user 6 PCIe config read

user 8 Get value from PCIe config space.


id 2952182

body /* Calculate true node limit for catalogFile */

user 4 Calculate true node limit for catalogFile

user 5 Calculate true node limit for catalogFile

user 3 Calculate true node limit for catalogFile

user 8 Calculate true node limit for catalogFile

user 6 Calculate true node limit for catalogFile


id 1048304

body /* * Record logout in wtmp file * and exit with supplied status. */

user 4 Record logout in wtmp file and exit with supplied status.

user 5 Record logout in wtmp file and exit with supplied status.

user 6 Record logout in wtmp file and exit with supplied status.

user 3 Record logout in wtmp file and exit with supplied status.

user 8 Record logout in wtmp file and exit with supplied status.


id 751848

body /* Function: al_set_display_icons */

user 4

user 6

user 5

user 3

user 8


id 6072200

body /* Given a two letter string, return a tile */

user 4 Given a two letter string, return a tile

user 5 Given a two letter string, return a tile

user 3 Given a two letter string, return a tile

user 6 Given a two letter string, return a tile

user 8 Given a two letter string, return a tile


id 6632508

body /* [inside top level 17678] */

user 4

user 3

user 5

user 6

user 8


id 5329910

body /* * Even if we have closed our server socket cleanly, * the OS may mark the address "in use" for some time - * this happens with native Linux apps, too. */

user 4

user 6 mark the address "in use" for some time

user 5

user 3

user 8


id 5322345

body /*************************************************************************** * * Internal Method * * Reserve a directory entry in the file and initialize it. */

user 4 Reserve a directory entry in the file and initialize it.

user 3 Reserve a directory entry in the file and initialize it.

user 5 Reserve a directory entry in the file and initialize it.

user 6 Reserve a directory entry in the file and initialize it.

user 8 Reserve a directory entry in the file and initialize it.


id 4829691

body /* Find a license_t record by license name (for use by list_find_first) */

user 4 Find a license_t record by license name

user 5 Find a license_t record by license name

user 3 Find a license_t record by license name

user 6 Find a license_t record by license name

user 8 Find a license_t record by license name


id 1424985

body /** * ticalcs_keys_89: * @code: an ASCII character * * Conversion of an ASCII code into a TI key. * * Return value: a TI key. **/

user 4 Conversion of an ASCII code into a TI key.

user 5 Conversion of an ASCII code into a TI key.

user 3 Conversion of an ASCII code into a TI key.

user 6 Conversion of an ASCII code into a TI key.

user 8 Conversion of an ASCII code into a TI key.


id 5967937

body /*! * \brief Encode the Q.SIG CcnrRequest invoke facility ie arguments. * * \param ctrl D channel controller for diagnostic messages or global options. * \param pos Starting position to encode ASN.1 component. * \param end End of ASN.1 encoding data buffer. * \param args Arguments to encode in the buffer. * * \retval Start of the next ASN.1 component to encode on success. * \retval NULL on error. */

user 4 Encode the Q.SIG CcnrRequest invoke facility ie arguments.

user 5 Encode the Q.SIG CcnrRequest invoke facility ie arguments.

user 3 Encode the Q.SIG CcnrRequest invoke facility ie arguments.

user 6 Encode the Q.SIG CcnrRequest invoke facility

user 8 Encode the Q.SIG CcnrRequest invoke facility ie arguments.


id 3490074

body /* Deal with an "oncoming" message. This means recognizing the user * has logged in, and displaying a message if they were not already * logged in. */

user 4 Deal with an "oncoming" message.

user 5 Deal with an "oncoming" message.

user 6 recognizing the user has logged in,

user 3 recognizing the user has logged in, and displaying a message

user 8 Deal with an "oncoming" message.


id 4604162

body /** Respond internally to a transaction. */

user 4 Respond internally to a transaction.

user 3 Respond internally to a transaction.

user 5 Respond internally to a transaction.

user 6

user 8 Respond internally to a transaction.


id 2397514

body /* This routine is called by bdg_mismatch_datapath() when it finishes * accumulating bytes for a segment, in order to fix some fields in the * segment headers (which still contain the same content as the header * of the original GSO packet). 'buf' points to the beginning (e.g. * the ethernet header) of the segment, and 'len' is its length. */

user 4 fix some fields in the segment headers

user 5 fix some fields in the segment headers

user 3 fix some fields in the segment headers

user 6 fix some fields in the segment headers

user 8 fix some fields in the segment headers


id 661133

body /* k2868 in k2438 in csi-eval in k2344 in k2043 in k1912 in k1909 in k1904 in k1891 in k1888 in k1885 in k1882 in k1879 */

user 4

user 3

user 5

user 6

user 8


id 1436146

body /* ** This function returns the space in bytes required to store the copy ** of the Expr structure and a copy of the Expr.u.zToken string (if that ** string is defined.) */

user 4 returns the space in bytes required to store the copy of

user 5 returns the space in bytes required to store

user 3 returns the space in bytes required to store the copy of

user 6 returns the space in bytes required to store the copy of

user 8 the Expr structure and a copy of the Expr.u.zToken string


id 65633

body /* * This is one of the dbus callbacks. * Caller requests creating a new @cgroup name of type @controller. * @name is taken to be relative to the caller's cgroup and may not * start with / or .. . */

user 4 creating a new @cgroup name of type @controller. @name

user 3

user 5

user 6

user 8


id 3618712

body /* ** Log an error that is an API call on a connection pointer that should ** not have been used. The "type" of connection pointer is given as the ** argument. The zType is a word like "NULL" or "closed" or "invalid". */

user 3 Log an error

user 4 Log an error that is an API call on a connection pointer

user 5 Log an error that is an API call on a connection pointer

user 6 Log an error that is an API call on a connection pointer

user 8 that should not have been used.


id 573765

body /* * Class: com_wombat_mama_MamaDictionary * Method: getSize * Signature: ()I */

user 4

user 3

user 5

user 8

user 6


id 6239619

body /* Tests the libscca_set_codepage function * Returns 1 if successful or 0 if not */

user 4 Tests the libscca_set_codepage function

user 5 Tests the libscca_set_codepage function

user 3 Tests the libscca_set_codepage function

user 6

user 8 Tests the libscca_set_codepage function


id 5445284

body /* This function parses the identifier string used by the alignment file * to identify a sequence to find the portion of the string that is actually * an ID, as opposed to organism information or definition line. */

user 4 parses the identifier string used by the alignment file to identify a

user 3 parses the identifier string

user 5 parses the identifier string used by the alignment file

user 6 This function parses the identifier string used by the alignment file to

user 8 ID, as opposed to organism information or definition line.


id 5239921

body /** * Increase initial bucket size to match a reserved amount. */

user 4 Increase initial bucket size to match a reserved amount.

user 5 Increase initial bucket size to match a reserved amount.

user 3 Increase initial bucket size to match a reserved amount.

user 6 Increase initial bucket size to match a reserved amount.

user 8 Increase initial bucket size to match a reserved amount.


id 2677933

body /* ** The zeroblob(N) function returns a zero-filled blob of size N bytes. */

user 4 returns a zero-filled blob of size N bytes.

user 5 returns a zero-filled blob of size N bytes.

user 3 returns a zero-filled blob of size N bytes.

user 6 returns a zero-filled blob of size N bytes.

user 8 returns a zero-filled blob of size N bytes.


id 2610497

body /* Given two polyhedra with as constraints h_{ij} x >= 0 in homegeneous space, * set up an LP for solving * *	\sum_j \alpha_{1j} h_{1j} = \sum_j \alpha_{2j} h_{2j} * * \alpha{i0} corresponds to the (implicit) positivity constraint 1 >= 0 * The next \alpha{ij} correspond to the equalities and come in pairs. * The final \alpha{ij} correspond to the inequalities. */

user 4 Given two polyhedra with as constraints h_{ij} x >= 0 in homegeneous

user 5 set up an LP

user 3 Given two polyhedra with as constraints h_{ij} x >= 0 in homegeneous

user 6

user 8 space, set up an LP for solving


id 983993

body /* return on failure or (with 0) if all fd events are removed */

user 3

user 4

user 5 return on failure or (with 0) if all fd events are removed

user 6 return on failure or (with 0) if all fd events are removed

user 8


id 5048870

body /* * get the sufix for filename in path (e.g. for file-3.png sufix is 3) * args: * path - string with file path * filename - string with file basename * * asserts: * none * * returns: none */

user 4 get the sufix for filename in path

user 3 get the sufix for filename in path

user 6 get the sufix for filename in path

user 5 get the sufix for filename in path

user 8 get the sufix for filename in path


id 1810638

body /* compute variance-covariance matrix of fitted parameters */

user 4 compute variance-covariance matrix of fitted parameters

user 3 compute variance-covariance matrix of fitted parameters

user 5 compute variance-covariance matrix of fitted parameters

user 6 compute variance-covariance matrix of fitted parameters

user 8 compute variance-covariance matrix of fitted parameters


id 5165493

body /* Whether this is a real CIE. Assumes CIE (length) sane. */

user 4

user 3 Whether this is a real CIE.

user 5

user 8 Whether this is a real CIE. Assumes CIE (length) sane.

user 6


id 5528709

body /** * Called when the SAX parser encounters an error from which it cannot recover * (typically, this means the file being parsed is not a well-formed XML * file). Stores the exception message as the error message and returns * false. * * @param exception The SAX parsing exception which occurred * @return False (always) */

user 4 Called when the SAX parser encounters an error from which it cannot

user 6 Stores the exception message as the error message and returns false.

user 5 Stores the exception message as the error message and returns false.

user 3 Stores the exception message as the error message and returns false.

user 8 Stores the exception message as the error message and returns false.


id 6303251

body /*! \internal This method is used by the QCPLegend destructor to report legend removal to the QCustomPlot so it may clear its QCustomPlot::legend member accordingly. */

user 4 report legend removal to the QCustomPlot

user 5 report legend removal to the QCustomPlot

user 3 report legend removal to the QCustomPlot so it may clear its QCustomPlot::legend

user 8 member accordingly.

user 6 report legend removal to the QCustomPlot


id 4321147

body /* set the pseudo-attribute of the original node to a document */

user 4 set the pseudo-attribute of the original node to a document

user 6 set the pseudo-attribute of the original node

user 5 set the pseudo-attribute of the original node to a document

user 3

user 8 set the pseudo-attribute of the original node to a document


id 4325492

body /* ** Deallocate a register, making available for reuse for some other ** purpose. ** ** If a register is currently being used by the column cache, then ** the deallocation is deferred until the column cache line that uses ** the register becomes stale. */

user 4 Deallocate a register,

user 5 Deallocate a register, making available for reuse for some other purpose.

user 6 Deallocate a register, making available for reuse for some other purpose.

user 3 Deallocate a register, making available for reuse for some other purpose.

user 8 Deallocate a register, making available for reuse for some other purpose.


id 4335831

body /* * call-seq: array_nl=(array_nl) * * This string is put at the end of a line that holds a JSON array. */

user 4

user 5 This string is put at the end of a line

user 3 This string is put at the end of a line that holds

user 6

user 8 a JSON array.


id 2466204

body /** * Shows a widget for options for the action: "draw polygon2" */

user 4 Shows a widget for options for the action: "draw polygon2"

user 3 Shows a widget for options for the action: "draw polygon2"

user 5 Shows a widget for options for the action: "draw polygon2"

user 6 Shows a widget for options for the action: "draw polygon2"

user 8


id 6071973

body /* find an option entry in the default table, searching by integer (if known) or name */

user 4 find an option entry in the default table, searching by integer (if

user 3 find an option entry in the default table,

user 5 find an option entry in the default table,

user 6 find an option entry in the default table,

user 8 or name


id 1602144

body /* Question: Could be a service routine for message level >= generic */

user 4

user 3

user 5

user 8

user 6


id 5766366

body /* `table' must be the address of a `flg_array' structure. */

user 4

user 5

user 3

user 6

user 8


id 5876772

body /* ** Close the read-only blob handle, if it is open. */

user 4 Close the read-only blob handle, if it is open.

user 3 Close the read-only blob handle,

user 5 Close the read-only blob handle, if it is open.

user 8 Close the read-only blob handle, if it is open.

user 6 Close the read-only blob handle, if it is open.


id 3841163

body /* Convert kernel quotablock format to utility one */

user 4 Convert kernel quotablock format to utility one

user 6 Convert kernel quotablock format to utility one

user 5 Convert kernel quotablock format to utility one

user 3 Convert kernel quotablock format to utility one

user 8 Convert kernel quotablock format to utility one


id 3446655

body /* Frees a handle * Returns 1 if successful or -1 on error */

user 4 Frees a handle

user 5 Frees a handle

user 6 Frees a handle

user 3 Frees a handle

user 8 Frees a handle


id 4310675

body /* MakeUpdate * create library handle for read/write access * * "wd" [ IN, NULL OKAY ] - optional working directory for * accessing the file system. mgr will attach its own reference. * * NB - not implemented in read-only library, * and the read-only library may not be mixed with read/write */

user 4 create library handle for read/write access

user 3 create library handle for read/write access

user 5 create library handle for read/write access

user 6 create library handle for read/write access

user 8 create library handle for read/write access


id 73104

body /* NOTE: fun_type loses a reference. */

user 4

user 5

user 3

user 8

user 6


id 4321697

body /* perform the merge command */

user 4 perform the merge command

user 5 perform the merge command

user 6 perform the merge command

user 3 perform the merge command

user 8 perform the merge command


id 1110176

body /*! \brief Create the snap size dialog * \par Function Description * This function creates the snap size dialog. */

user 4 Create the snap size dialog

user 5 Create the snap size dialog

user 3 Create the snap size dialog

user 8 Create the snap size dialog

user 6 creates the snap size dialog.


id 4816234

body /** * do_remoteproc_list() - print list of remote proc devices. * @cmdtp:	unused * @flag:	unused * @argc:	unused * @argv:	unused * * Return: 0 if no error, else returns appropriate error value. */

user 4 print list of remote proc devices.

user 5 print list of remote proc devices.

user 6 print list of remote proc devices.

user 3 print list of remote proc devices.

user 8 print list of remote proc devices.


id 935582

body /* Multicast groups are ordered lowest to highest preference. */

user 4

user 5 Multicast groups are ordered lowest to highest preference.

user 3

user 6

user 8 Multicast groups are ordered lowest to highest preference.


id 1699327

body /* ** Flush any data cached by the writer object to the database. Free any ** allocations associated with the writer. */

user 4 Flush any data cached by the writer object to the database.

user 3 Flush any data cached by the writer object to the database. Free

user 5 Flush any data cached by the writer object to the database.

user 6 Flush any data cached by the writer object to the database.

user 8 Free any allocations associated with the writer.


id 1062648

body /* * Attempt to "follow" a missing monster * * This routine is not called when the player is blind or hallucinating. * * Currently this function is a total hack, but handles the case of only * one possible location (taking it), two adjacent possible locations * (taking the diagonal one), and three adjacent locations with the * central one being a diagonal (taking the diagonal one). * * We should perhaps handle the case of three adjacent locations with * the central one being a non-diagonal (taking the non-diagonal one). * * We should perhaps attempt to take into account "last known direction", * which would allow us to "predict" motion up to walls, and we should * perhaps attempt to take into account the "standard" flee algorithm, * though that feels a little like cheating. */

user 4 Attempt to "follow" a missing monster

user 5 Attempt to "follow" a missing monster

user 3 Attempt to "follow" a missing monster

user 6 Currently this function is a total hack,

user 8


id 4034352

body /* ** Free an allocated buffer obtained from sqlite3PageMalloc(). */

user 4 Free an allocated buffer obtained from sqlite3PageMalloc().

user 5 Free an allocated buffer obtained from sqlite3PageMalloc().

user 3 Free an allocated buffer

user 8 Free an allocated buffer obtained from sqlite3PageMalloc().

user 6 Free an allocated buffer obtained from sqlite3PageMalloc().


id 3453009

body /*Fills in the chroma plane fragment maps for a macro block. This version is for use with chroma decimated in the X direction (4:2:2). _mb_map: The macro block map to fill. _fplanes: The descriptions of the fragment planes. _xfrag0: The X location of the upper-left hand fragment in the luma plane. _yfrag0: The Y location of the upper-left hand fragment in the luma plane.*/

user 4 Fills in the chroma plane fragment maps for a macro block.

user 5 chroma plane fragment maps for a macro block.

user 6

user 3

user 8 Fills in the chroma plane fragment maps for a macro block.


id 5048847

body /* * update controls from commit probe data * args: * none * * asserts: * none * * returns: none */

user 4 update controls from commit probe data

user 5 update controls from commit probe data

user 6 update controls from commit probe data

user 3 update controls from commit probe data

user 8 update controls from commit probe data


id 6656952

body /* * Verify a proof of knowledge of coordinates with first components being equal */

user 4 Verify a proof of knowledge of coordinates with first components being equal

user 5 Verify a proof of knowledge of coordinates with first components being equal

user 6 Verify a proof of knowledge of coordinates with first components being equal

user 3 Verify a proof of knowledge of coordinates with first components being equal

user 8 equal


id 6067258

body /*! Overridden function that apllies pending changes to the data model without closing the dialog. */

user 4 apllies pending changes to the data model without closing the dialog.

user 5 Overridden function that apllies pending changes to the data model

user 3 Overridden function that apllies pending changes to the data model

user 6 apllies pending changes to the data model without closing the dialog.

user 8 apllies pending changes to the data model without closing the dialog.


id 606734

body /* atom <-> strings The returned handle has to be freed by the caller (using (static) DDEFreeString). */

user 4

user 5

user 3

user 6

user 8 atom <-> strings


id 2326585

body /*-<a href="qh-io_r.htm#TOC" >-------------------------------</a><a name="printfacetheader">-</a> qh_printfacetheader(qh, fp, facet ) prints header fields of a facet to fp notes: for 'f' output and debugging Same as QhullFacet::printHeader() */

user 4 prints header fields of a facet to fp

user 5 prints header fields of a facet to fp

user 3 prints header fields of a facet to fp

user 8 prints header fields of a facet to fp

user 6 prints header fields of a facet to fp


id 1972743

body /* Paramter passing. s : gpr 3 l : slot 1 d : slot 2 */

user 4

user 6

user 5 Paramter passing.

user 3

user 8


id 71452

body /*! @decl int(0..1) enable_broadcast() *! *! Set the broadcast flag. *! If enabled then sockets receive packets sent to a broadcast *! address and they are allowed to send packets to a *! broadcast address. *! *! @returns *! Returns @expr{1@} on success, @expr{0@} (zero) otherwise. *! *! @note *! This is normally only avalable to root users. */

user 4 Set the broadcast flag.

user 5 Set the broadcast flag.

user 3 Set the broadcast flag.

user 6 Set the broadcast flag.

user 8 Set the broadcast flag.


id 1613342

body /** * Sets a slope so a near miss is at aproximately the height of the * intended target. */

user 4 Sets a slope so a near miss is at aproximately the height

user 7

user 3 Sets a slope so a near miss is at aproximately the height

user 5 Sets a slope

user 6 Sets a slope so a near miss is at aproximately the height

user 8 of the intended target.


id 1729548

body /* Handle the read binary forward command: read the next record on tape. */

user 4 read the next record on tape.

user 5 Handle the read binary forward command: read the next record on tape.

user 3 read the next record on tape.

user 6 Handle the read binary forward command:

user 8 Handle the read binary forward command: read the next record on tape.


id 3610200

body /*@ PCSORGetOmega - Gets the SOR relaxation coefficient, omega (where omega = 1.0 by default). Logically Collective on PC Input Parameter: . pc - the preconditioner context Output Parameter: . omega - relaxation coefficient (0 < omega < 2). Options Database Key: . -pc_sor_omega <omega> - Sets omega Level: intermediate .keywords: PC, SOR, SSOR, set, relaxation, omega .seealso: PCSORSetSymmetric(), PCSORSetIterations(), PCEisenstatSetOmega(), PCSORSetOmega() @*/

user 4 Gets the SOR relaxation coefficient, omega

user 5 Gets the SOR relaxation coefficient, omega

user 3 Gets the SOR relaxation coefficient, omega

user 6 Gets the SOR relaxation coefficient, omega

user 8 Gets the SOR relaxation coefficient, omega (where omega = 1.0 by default).


id 4729141

body /** * Create event queue * * @v hermon	Hermon device * @ret rc	Return status code */

user 4 Create event queue

user 5 Create event queue

user 3 Create event queue

user 6 Create event queue

user 8 Create event queue


id 6108097

body /* * ---------------------------------------------------------------------- * Flush synthesizer. This triggers the synthesizer and starts * the synthesis. * ---------------------------------------------------------------------- */

user 4 triggers the synthesizer and starts the synthesis.

user 3 This triggers the synthesizer and starts the synthesis.

user 5 This triggers the synthesizer and starts the synthesis.

user 6

user 8 This triggers the synthesizer and starts the synthesis.


id 789232

body /* * Write bytes to an I/O buffer */

user 4 Write bytes to an I/O buffer

user 5 Write bytes to an I/O buffer

user 3 Write bytes to an I/O buffer

user 6 Write bytes to an I/O buffer

user 8 Write bytes to an I/O buffer


id 3930886

body /* Removes an element from the range list * Returns 1 if successful, or -1 on error */

user 4 Removes an element from the range list

user 6 Removes an element from the range list

user 5 Removes an element from the range list

user 3 Removes an element from the range list

user 8 Removes an element from the range list


id 5721786

body /* Return a pointer to the resolution array */

user 4 Return a pointer to the resolution array

user 5 Return a pointer to the resolution array

user 3 Return a pointer to the resolution array

user 8 Return a pointer to the resolution array

user 6 Return a pointer to the resolution array


id 93386

body /** * Generates an RSA private key with the given exponent and number of bits * and writes it to the given file (if specified). */

user 4 Generates an RSA private key with the given exponent and number of

user 6 Generates an RSA private key

user 5 Generates an RSA private key

user 3 Generates an RSA private key with the given exponent and number of

user 8 bits and writes it to the given file (if specified).


id 3078258

body /** \brief Insert a copy of a BRECT_SPEC structure into a BR_INFO structure. (Insert a bounding rectangle.) \returns 0 on success, !0 on error. \param bri pointer to the BR_INFO structure \param element pointer to the BRECT_SPECS structure */

user 4 Insert a copy of a BRECT_SPEC structure into a BR_INFO structure.

user 5 Insert a copy of a BRECT_SPEC structure into a BR_INFO structure.

user 6 Insert a copy of a BRECT_SPEC structure into a BR_INFO structure.

user 3 Insert a copy of a BRECT_SPEC structure into a BR_INFO structure.

user 8 a bounding rectangle.)


id 1484434

body /* * suboption() * *	Look at the sub-option buffer, and try to be helpful to the other * side. * *	Currently we recognize: * *	Terminal type is * Linemode *	Window size *	Terminal speed */

user 3

user 4 Look at the sub-option buffer, and try to be helpful to the

user 5 Look at the sub-option buffer,

user 6

user 8 other side.


id 5340357

body /*********************************************************************** *	AVIFileGetStream	(AVIFIL32.@) */

user 4

user 3

user 5

user 6

user 8


id 2932224

body /* Low level sound player */

user 4 Low level sound player

user 5 Low level sound player

user 6

user 3

user 8 Low level sound player


id 3520781

body /* Helper: emit one map entry (as a submessage in the map field sequence). This * is invoked from end_membername(), at the end of the map entry's key string, * with the map key in the accumulate buffer. It parses the key from that * buffer, emits the handler calls to start the mapentry submessage (setting up * its subframe in the process), and sets up state in the subframe so that the * value parser (invoked next) will emit the mapentry's value field and then * end the mapentry message. */

user 4 emit one map entry (as a submessage in the map field sequence).

user 5 emit one map entry

user 3 emit one map entry

user 6 emit one map entry

user 8 emit one map entry (as a submessage in the map field sequence).


id 2917858

body /* Reads the manifest * Returns 1 if successful or -1 on error */

user 4 Reads the manifest

user 5 Reads the manifest

user 6 Reads the manifest

user 3 Reads the manifest

user 8 Reads the manifest


id 2736323

body /* ** Walk an expression tree. Return 1 if the expression is constant ** or a function call with constant arguments. Return and 0 if there ** are any variables. ** ** For the purposes of this function, a double-quoted string (ex: "abc") ** is considered a variable but a single-quoted string (ex: 'abc') is ** a constant. */

user 4 Walk an expression tree. Return 1 if the expression is constant or

user 5 Walk an expression tree.

user 3

user 6 Return 1 if the expression is constant or a function call with

user 8 a function call with constant arguments.


id 754886

body /* [gtk thread] */

user 4

user 5

user 6

user 3

user 8


id 5397114

body /** \brief Opens a file and checks the operation was successful. * * Opens a file, and checks the return value to ensure that the operation * was successful. * \param[in] filename the file to open. * \param[in] mode the cstdio fopen mode to use. * \return The file handle. */

user 4 Opens a file and checks the operation was successful.

user 5

user 3 Opens a file and checks the operation was successful.

user 6 Opens a file and checks the operation was successful.

user 8 Opens a file and checks the operation was successful.


id 1016045

body /** * Load the key/certificates in memory depending on compile-time and user * options. */

user 4 Load the key/certificates in memory depending on compile-time and user options.

user 3 Load the key/certificates in memory

user 5 Load the key/certificates in memory depending on compile-time and user options.

user 6 Load the key/certificates in memory

user 8 Load the key/certificates in memory depending on compile-time and user options.


id 656477

body /* ##sys#load-extension in k9102 in k8742 in k8733 in k8726 in k8721 in k8226 in k8137 in k8051 in k8037 in k3900 in k3506 in k3503 in k11692 in k3481 in k3478 */

user 4

user 5

user 3

user 6

user 8


id 30983

body /* call different fftw_execute_split_dft_xxx procedures according to type input * * Input : Plan_Type type * fftw_plan p * double *ri * double *ii * Output : double *ro * double *io */

user 4 call different fftw_execute_split_dft_xxx procedures according to type input

user 5 call different fftw_execute_split_dft_xxx procedures according to type input

user 6 call different fftw_execute_split_dft_xxx procedures according to type input

user 3 call different fftw_execute_split_dft_xxx procedures according to type input

user 8 call different fftw_execute_split_dft_xxx procedures according to type input


id 2593835

body /** * wpa_config_add_prio_network - Add a network to priority lists * @config: Configuration data from wpa_config_read() * @ssid: Pointer to the network configuration to be added to the list * Returns: 0 on success, -1 on failure * * This function is used to add a network block to the priority list of * networks. This must be called for each network when reading in the full * configuration. In addition, this can be used indirectly when updating * priorities by calling wpa_config_update_prio_list(). */

user 4 add a network block to the priority list of networks.

user 5 Add a network to priority lists

user 3 Add a network to priority lists

user 6 Add a network to priority lists

user 8 Add a network to priority lists


id 6024924

body /** * e1000_reset_init_script_82575 - Inits HW defaults after reset * @hw: pointer to the HW structure * * Inits recommended HW defaults after a reset when there is no EEPROM * detected. This is only for the 82575. **/

user 4 Inits HW defaults after reset

user 5 Inits HW defaults after reset

user 3 Inits HW defaults after reset

user 6 Inits HW defaults after reset

user 8 Inits HW defaults after reset


id 4405774

body /* ** This routine walks an expression tree and resolves references to ** table columns and result-set columns. At the same time, do error ** checking on function usage and set a flag if any aggregate functions ** are seen. ** ** To resolve table columns references we look for nodes (or subtrees) of the ** form X.Y.Z or Y.Z or just Z where ** ** X: The name of a database. Ex: "main" or "temp" or ** the symbolic name assigned to an ATTACH-ed database. ** ** Y: The name of a table in a FROM clause. Or in a trigger ** one of the special names "old" or "new". ** ** Z: The name of a column in table Y. ** ** The node at the root of the subtree is modified as follows: ** ** Expr.op Changed to TK_COLUMN ** Expr.pTab Points to the Table object for X.Y ** Expr.iColumn The column index in X.Y. -1 for the rowid. ** Expr.iTable The VDBE cursor number for X.Y ** ** ** To resolve result-set references, look for expression nodes of the ** form Z (with no X and Y prefix) where the Z matches the right-hand ** size of an AS clause in the result-set of a SELECT. The Z expression ** is replaced by a copy of the left-hand side of the result-set expression. ** Table-name and function resolution occurs on the substituted expression ** tree. For example, in: ** ** SELECT a+b AS x, c+d AS y FROM t1 ORDER BY x; ** ** The "x" term of the order by is replaced by "a+b" to render: ** ** SELECT a+b AS x, c+d AS y FROM t1 ORDER BY a+b; ** ** Function calls are checked to make sure that the function is ** defined and that the correct number of arguments are specified. ** If the function is an aggregate function, then the NC_HasAgg flag is ** set and the opcode is changed from TK_FUNCTION to TK_AGG_FUNCTION. ** If an expression contains aggregate functions then the EP_Agg ** property on the expression is set. ** ** An error message is left in pParse if anything is amiss. The number ** if errors is returned. */

user 4 walks an expression tree and resolves references to table columns and result-set

user 5 walks an expression tree and resolves references to table columns and result-set

user 6 resolves references to table columns and result-set columns.

user 3 This routine walks an expression tree and resolves references to table columns

user 8 columns.


id 6452479

body /***** Since ps is not long-lived, the memory leak can be ignored. ******/

user 4

user 5

user 6

user 3

user 8


id 3299054

body /** * Create a new dialog interface for this object. * @param parent the parent widget * @param name the name of the page * @return dialog object */

user 4 Create a new dialog interface for this object.

user 5 Create a new dialog interface for this object.

user 3 Create a new dialog interface for this object.

user 6 Create a new dialog interface for this object.

user 8 Create a new dialog interface for this object.


id 4590818

body /* str needs to have enough space for SLRL_DISPLAY_BUFFER_SIZE characters */

user 4

user 5

user 3

user 8

user 6


id 3140119

body /****************************************************************************** * Read settings from the session managed config file. * This function is automatically called whenever the app is being * restored. Read in whatever was saved in saveProperties(). */

user 3 Read settings from the session managed config file.

user 4 Read settings from the session managed config file.

user 5 Read settings from the session managed config file.

user 6 Read settings from the session managed config file.

user 8 Read settings from the session managed config file.


id 2365002

body /* * Enumerate the child dev array parsed from VBT to check whether * the LVDS is present. * If it is present, return 1. * If it is not present, return false. * If no child dev is parsed from VBT, it assumes that the LVDS is present. */

user 4 Enumerate the child dev array parsed from VBT

user 5 check whether the LVDS is present.

user 6 check whether the LVDS is present.

user 3 Enumerate the child dev array parsed from VBT to check whether the

user 8 LVDS is present.


id 87978

body /* used by multi-write */

user 4

user 5

user 3

user 6

user 8


id 3955987

body /** @param nameslist the new list of names for the currently edited element */

user 4

user 5

user 6

user 3

user 8


id 4244808

body /****** cull/multitype/lDelElemStr() ****************************************** * NAME * lDelElemStr() -- removes element specified by a string field nm * * SYNOPSIS * int lDelElemStr(lList** lpp, int nm, const char* str) * * FUNCTION * This function removes an element from the list referenced by * lpp, which is identified by the field nm and the string str * * INPUTS * lList** lpp - list reference * int nm - field id * const char* str - string * * RESULT * 1 if the element was found and removed * 0 in case of an error ******************************************************************************/

user 4 removes element specified by a string field nm

user 3 This function removes an element from the list

user 5 removes element specified by a string field nm

user 6 This function removes an element from the list referenced by lpp,

user 8 removes element specified by a string field nm


id 1274569

body /* needs to be able to be called by the config dialog when the alarm * command changes */

user 4

user 5

user 3

user 8 the alarm command changes

user 6


id 1563728

body /* ** WIDGET token list START END */

user 4

user 5

user 6

user 3

user 8 WIDGET token list START END


id 3280750

body /* ext_lex_init is special because it creates the scanner itself, so it is * the ONLY reentrant function that doesn't take the scanner as the last argument. * That's why we explicitly handle the declaration, instead of using our macros. */

user 4 creates the scanner itself,

user 6

user 5 it creates the scanner itself,

user 3

user 8 that doesn't take the scanner as the last argument.


id 6053910

body /* For internal use only. */

user 4

user 3

user 6

user 5

user 8


id 3434618

body /* * Construct and array of TAKETHIS commands and the command bodies. Any * articles on the queue that are missing will be removed and the Host will * be informed. */

user 4 Construct and array of TAKETHIS commands and the command bodies.

user 5 Construct and array of TAKETHIS commands and the command bodies.

user 3 Construct and array of TAKETHIS commands and the command bodies.

user 6 Construct and array of TAKETHIS commands and the command bodies.

user 8 Construct and array of TAKETHIS commands and the command bodies.


id 4308871

body /* BSTreeDoUntil * executes a function on each element * until the function returns 1 */

user 4 executes a function on each element until the function returns 1

user 5 executes a function on each element until the function returns 1

user 3 executes a function on each element

user 6 executes a function on each element until the function returns 1

user 8 executes a function on each element


id 5032622

body /* DANG_BEGIN_FUNCTION serial_init * * This is the master serial initialization function that is called * upon startup of DOSEMU to initialize ALL the emulated UARTs for * all configured serial ports. The UART is initialized via the * initialize_uart function, which opens the serial ports and defines * variables for the specific UART. * * If the port is a mouse, the port is only initialized when i * * DANG_END_FUNCTION */

user 4 master serial initialization function

user 3 initialize ALL the emulated UARTs for all configured serial ports.

user 5 initialize ALL the emulated UARTs for all configured serial ports.

user 6 initialize ALL the emulated UARTs for all configured serial ports.

user 8 initialize ALL the emulated UARTs for all configured serial ports.


id 6070099

body /** Define the bug categories for the ui combobox */

user 4 Define the bug categories for the ui combobox

user 3 Define the bug categories for the ui combobox

user 5 Define the bug categories for the ui combobox

user 8 Define the bug categories for the ui combobox

user 6 Define the bug categories for the ui combobox


id 42142

body /* * Get total number of ports connections currently set up in the bridge. */

user 4 Get total number of ports connections currently set up in the bridge.

user 3 Get total number of ports connections currently set up in the bridge.

user 5 Get total number of ports connections currently set up in the bridge.

user 6 Get total number of ports connections currently set up in the bridge.

user 8 Get total number of ports connections currently set up in the bridge.


id 462412

body /** * decode a macroblock */

user 4 decode a macroblock

user 3

user 5 decode a macroblock

user 6 decode a macroblock

user 8 decode a macroblock


id 2919141

body /* Check if the file range is open * Returns 1 if open, 0 if not or -1 on error */

user 3 Check if the file range is open

user 4 Check if the file range is open

user 5 Check if the file range is open

user 6 Check if the file range is open

user 8 Check if the file range is open


id 1569974

body /* * forget (Zap) the current room */

user 4 forget (Zap) the current room

user 5 forget (Zap) the current room

user 6 forget (Zap) the current room

user 3 forget (Zap) the current room

user 8 forget (Zap) the current room


id 4968259

body /* int * inet_pton(af, src, dst) * convert from presentation format (which usually means ASCII printable) * to network format (which is usually some kind of binary format). * return: * 1 if the address was valid for the specified address family * 0 if the address wasn't valid (`dst' is untouched in this case) * -1 if some other error occurred (`dst' is untouched in this case, too) * author: * Paul Vixie, 1996. */

user 4 convert from presentation format (which usually means ASCII printable) to network format

user 5 convert from presentation format (which usually means ASCII printable) to network format

user 6 convert from presentation format (which usually means ASCII printable) to network format

user 3 convert from presentation format (which usually means ASCII printable) to network format

user 8 to network format


id 5082973

body /*-------------------------------------------------------------------------- num_rmprog : Removes the specified program or all defined programs, if the null-pointer is given return int (o) : 0: Success, -1: error NumProg * (i) : pointer to the program that should be remoed, or null-pointer to remove all programs int * perrval (o) : output status --------------------------------------------------------------------------*/

user 4 Removes the specified program or all defined programs,

user 5 Removes the specified program or all defined programs,

user 3 Removes the specified program or all defined programs,

user 6 Removes the specified program or all defined programs,

user 8 given


id 5799612

body /** * Try to not page if everything the cell is not on. */

user 3

user 4 Try to not page if everything the cell is not on.

user 5

user 6

user 8 Try to not page if everything the cell is not on.


id 1840234

body /******************************************************************************* * function SC_TOP * *******************************************************************************/

user 4

user 3

user 5

user 6

user 8


id 6264336

body /** \brief Set frequency in simplex mode * \param ctrl Pointer to the GtkRigCtrl structure. * \param freq The new frequency. * \return TRUE if the operation was successful, FALSE if a connection error * occurred. * * \note freq is not strictly necessary for normal use since we could have * gotten the current frequency from the ctrl; however, the param * might become useful in the future. */

user 4 Set frequency in simplex mode

user 5 Set frequency in simplex mode

user 3 Set frequency in simplex mode

user 6

user 8 Set frequency in simplex mode


id 5875906

body /* ** Open an Fts3MultiSegReader to scan the doclist for term zTerm/nTerm. Or, ** if isPrefix is true, to scan the doclist for all terms for which ** zTerm/nTerm is a prefix. If successful, return SQLITE_OK and write ** a pointer to the new Fts3MultiSegReader to *ppSegcsr. Otherwise, return ** an SQLite error code. ** ** It is the responsibility of the caller to free this object by eventually ** passing it to fts3SegReaderCursorFree() ** ** SQLITE_OK is returned if no error occurs, otherwise an SQLite error code. ** Output parameter *ppSegcsr is set to 0 if an error occurs. */

user 4 Open an Fts3MultiSegReader to scan the doclist for term zTerm/nTerm.

user 3 scan the doclist for term

user 5 Open an Fts3MultiSegReader to scan the doclist for term zTerm/nTerm.

user 8 Open an Fts3MultiSegReader to scan the doclist for term zTerm/nTerm.

user 6 Open an Fts3MultiSegReader to scan the doclist for term zTerm/nTerm.


id 4727019

body /** Advance to next 802.11 information element * * @v ie	Current information element pointer * @v end	Pointer to first byte not in information element space * @ret next	Pointer to next information element, or NULL if no more * * When processing received IEs, @a end should be set to the I/O * buffer tail pointer; when marshalling IEs for sending, @a end * should be NULL. */

user 4 Advance to next 802.11 information element

user 5 Advance to next 802.11 information element

user 3 Advance to next 802.11 information element

user 6 Advance to next 802.11 information element

user 8 Advance to next 802.11 information element


id 5310241

body /* SynthPortImpl IDirectMusicPort interface follows: */

user 4

user 5

user 3

user 8

user 6


id 2938113

body /*! \brief Set the new absolute write position \details The write position is checked against the filesize first. \param pos The new write position \returns XRV_OK if the write position was updated successfully */

user 4 Set the new absolute write position

user 6 Set the new absolute write position

user 3 Set the new absolute write position

user 5 Set the new absolute write position

user 8 Set the new absolute write position


id 157692

body /** tests::cw_gen_new_internal() tests::cw_gen_delete_internal() */

user 4

user 6

user 5

user 3

user 8


id 4649425

body /* Reads manifest values * Returns 1 if successful or -1 on error */

user 4 Reads manifest values

user 5 Reads manifest values

user 3 Reads manifest values

user 6 Reads manifest values

user 8 Reads manifest values


id 3638159

body /* * Set the text color */

user 4 Set the text color

user 5 Set the text color

user 3 Set the text color

user 6 Set the text color

user 8 Set the text color


id 1677079

body /* ** Close the file. */

user 4 Close the file.

user 5 Close the file.

user 3 Close the file.

user 8 Close the file.

user 6 Close the file.


id 5274750

body /** Reads a buffer, in the specified word size, with current MMU settings. */

user 4 Reads a buffer, in the specified word size, with current MMU settings.

user 3 Reads a buffer, in the specified word size, with current MMU settings.

user 5 Reads a buffer, in the specified word size, with current MMU settings.

user 6 Reads a buffer, in the specified word size, with current MMU settings.

user 8 Reads a buffer, in the specified word size, with current MMU settings.


id 5914703

body /* =============== SCR_BeginLoadingPlaque ================ */

user 4

user 5

user 3

user 6

user 8


id 5276377

body /** * Note: Lengths and return value are in chars. */

user 4

user 3

user 5

user 8

user 6


id 3431258

body /* * This function replaces LF by CRLF in a string * * Parameters: * request_rec *r The current request * const char *str The string * * Returns: * Output string */

user 4 This function replaces LF by CRLF in a string

user 3 This function replaces LF by CRLF in a string

user 5 This function replaces LF by CRLF in a string

user 6 This function replaces LF by CRLF in a string

user 8 This function replaces LF by CRLF in a string


id 6158391

body /*@ MPI_File_read_shared - Read using shared file pointer Input Parameters: . fh - file handle (handle) . count - number of elements in buffer (nonnegative integer) . datatype - datatype of each buffer element (handle) Output Parameters: . buf - initial address of buffer (choice) . status - status object (Status) .N fortran @*/

user 4 Read using shared file pointer

user 5 Read using shared file pointer

user 3 Read using shared file pointer

user 6 Read using shared file pointer

user 8 Read using shared file pointer


id 992062

body #if 1 /* 15/VII-2006 */

user 4

user 5

user 3

user 6

user 8


id 2475856

body /** * Encode BFCP Attributes * * @param mb Mbuf to encode into * @param attrc Number of attributes * * @return 0 if success, otherwise errorcode */

user 4 Encode BFCP Attributes

user 5 Encode BFCP Attributes

user 6

user 3 Encode BFCP Attributes

user 8 Encode BFCP Attributes


id 3345092

body /* * Translates an experiment file to a Read structure. * The Exp_info structure is left unchanged. * * Returns: * A pointer to an allocated Read structure upon success. * NULLRead upon failure. */

user 4 Translates an experiment file to a Read structure.

user 5 Translates an experiment file to a Read structure.

user 3 Translates an experiment file to a Read structure.

user 8 Translates an experiment file to a Read structure.

user 6 Translates an experiment file to a Read structure.


id 1066509

body /* Retrieves a specific leaf value data range * Returns 1 if successful or -1 on error */

user 4 Retrieves a specific leaf value data range

user 5 Retrieves a specific leaf value data range

user 3 Retrieves a specific leaf value data range

user 8 Retrieves a specific leaf value data range

user 6 Retrieves a specific leaf value data range


id 108426

body /* For debugging use only: */

user 4

user 5

user 3

user 8

user 6


id 5080612

body /** * Add a VisParamEntry as a choice for a VisUIWidget that inherents from VisUIChoice. * * @param choice Pointer to the VisUIChoice widget to which the choice is added. * @param name The name of this choice. * @param value Pointer to the VisParamEntry that is associated with this choice. * * @return VISUAL_OK on succes, -VISUAL_ERROR_UI_CHOICE_NULL, -VISUAL_ERROR_NULL *	or -VISUAL_ERROR_PARAM_NULL on failure. */

user 4 Add a VisParamEntry as a choice for a VisUIWidget

user 5 Add a VisParamEntry as a choice for a VisUIWidget

user 3 Add a VisParamEntry as a choice for a VisUIWidget

user 8 VisUIChoice.

user 6 Add a VisParamEntry as a choice for a VisUIWidget


id 2468726

body /** * Writes the given Line( entity to the file. */

user 4 Writes the given Line( entity to the file.

user 3 Writes the given Line( entity to the file.

user 5 Writes the given Line( entity to the file.

user 6 Writes the given Line( entity to the file.

user 8 Writes the given Line( entity to the file.


id 5352434

body /* TODO: Check whether SHA-1 is the algorithm that's always used */

user 4

user 5

user 3

user 6

user 8


id 1154135

body /* Port C PC0 unused ? PC1 unused ? PC2 IRQ IN: !EOS <- T6721 (End of Speech) PC3 IRQ IN: <- FIFO CO (Data in Ready) PC4 unused ? PC5 OUT: !NMI -> Cartridge Port (automatically generated if /EOS or DIR occurs) PC6 OUT: (CA) CA ? <-> Gate Array (with pullup) (toggles rom on/off ?) PC7 OUT: (CB) !EXROM -> C64 Cartridge Port */

user 4

user 5

user 3

user 6

user 8


id 3005943

body /* * Alter an internal parameter of an operator. */

user 4

user 5 Alter an internal parameter of an operator.

user 3 Alter an internal parameter of an operator.

user 6

user 8 Alter an internal parameter of an operator.


id 4401471

body /** Create an empty group. */

user 4 Create an empty group.

user 3 Create an empty group.

user 5 Create an empty group.

user 6 Create an empty group.

user 8 Create an empty group.


id 805650

body /** * get if the sorting function is initial (by date or value_date) or not * * \param * * \return TRUE if the list is sorted by date or value_date, FALSE if not * */

user 4 get if the sorting function is initial (by date or value_date) or

user 5 get if the sorting function is initial (by date or value_date) or

user 3 sorting function is initial (by date or value_date) or not

user 6 get if the sorting function is initial

user 8 not


id 1353478

body /* Is any domain element of "umap" scheduled after any of * the corresponding image elements by the tree rooted at * the child of "node"? */

user 4 Is any domain element of "umap" scheduled after any of the corresponding

user 3 Is any domain element of "umap" scheduled after any of the corresponding

user 5

user 6

user 8 image elements by the tree rooted at the child of "node"?


id 3490007

body /* set the charater at 'index' to be 'char'. If index is out of * bounds don't do anything */

user 4 set the charater at 'index' to be 'char'.

user 5 set the charater at 'index' to be 'char'.

user 3 set the charater at 'index' to be 'char'.

user 6 set the charater at 'index' to be 'char'.

user 8 set the charater at 'index' to be 'char'.


id 4959363

body /* * Center a window in root window. */

user 4 Center a window in root window.

user 3 Center a window in root window.

user 5 Center a window in root window.

user 6 Center a window in root window.

user 8 Center a window in root window.


id 1184679

body /* NOTE: The activities system is now case insensitive when dealing with IDs */

user 4

user 5

user 6

user 3

user 8


id 4552835

body /** * Helper for print_talloc_hierarchy(). */

user 4

user 3

user 5

user 8 Helper for print_talloc_hierarchy().

user 6


id 4700796

body /* ** This function encodes a single frame header and writes it to a buffer ** supplied by the caller. A frame-header is made up of a series of ** 4-byte big-endian integers, as follows: ** ** 0: Page number. ** 4: For commit records, the size of the database image in pages ** after the commit. For all other records, zero. ** 8: Salt-1 (copied from the wal-header) ** 12: Salt-2 (copied from the wal-header) ** 16: Checksum-1. ** 20: Checksum-2. */

user 4 encodes a single frame header and writes it to a buffer supplied

user 5 encodes a single frame header and writes it to a buffer

user 6 encodes a single frame header and writes it to a buffer

user 3 encodes a single frame header and writes it to a buffer

user 8 encodes a single frame header and writes it to a buffer


id 4598274

body /*OK: Unspecified statements */

user 4

user 5

user 3

user 6

user 8


id 6575648

body /** * \brief Configure the program. */

user 4 Configure the program.

user 5 Configure the program.

user 3 Configure the program.

user 6

user 8 Configure the program.


id 401646

body /** called from mw_session_stateChange when the session's state is mwSession_STARTED. Any finalizing of start-up stuff should go here */

user 4

user 5 Any finalizing of start-up stuff should go here

user 3 called from mw_session_stateChange when the session's state is mwSession_STARTED.

user 6 finalizing of start-up stuff

user 8


id 2554380

body /* Make firestarter/iptables accept tap+ interfaces */

user 4 Make firestarter/iptables accept tap+ interfaces

user 5 Make firestarter/iptables accept tap+ interfaces

user 3 Make firestarter/iptables accept tap+ interfaces

user 6

user 8 Make firestarter/iptables accept tap+ interfaces


id 3771360

body /* * hash_fd() *	hash fd and pid */

user 4 hash fd and pid

user 3 hash fd and pid

user 5 hash fd and pid

user 6

user 8 hash fd and pid


id 6634838

body /* [inside STALIN 19396] */

user 4

user 5

user 3

user 6

user 8


id 2298804

body /** * ccs_find_domain - Find a domain by name and other attributes. * * @dp: Pointer to "const struct ccs_domain_policy". * @domainname0: Name of domain to find. * * Returns index number (>= 0) in the @dp array if found, EOF otherwise. */

user 4 Find a domain by name and other attributes.

user 3 Find a domain by name and other attributes.

user 5 Find a domain by name and other attributes.

user 8

user 6 Find a domain by name and other attributes.


id 5321223

body /****************************************************************************** *	OleCreateFromData [OLE32.@] */

user 4

user 5

user 6

user 3

user 8


id 6274950

body /***************************************************************************** * message printing *****************************************************************************/

user 4 message printing

user 6

user 5 message printing

user 3 message printing

user 8 message printing


id 3379781

body /****************************************************************************** * Edit the currently selected resource. */

user 3 Edit the currently selected resource.

user 4 Edit the currently selected resource.

user 6 Edit the currently selected resource.

user 5 Edit the currently selected resource.

user 8 Edit the currently selected resource.


id 798212

body /* Write out the long MHOD_ID_PLAYLIST mhod header. This seems to be an itunespref thing.. dunno know this but if we set everything to 0, itunes doesn't show any data even if you drag an mp3 to your ipod: nothing is shown, but itunes will copy the file! .. so we create a hardcoded-pref.. this will change in future Seems to be a Preferences mhod, every PL has such a thing FIXME !!! */

user 4 Write out the long MHOD_ID_PLAYLIST mhod header.

user 3 Write out the long MHOD_ID_PLAYLIST mhod header.

user 5 Write out the long MHOD_ID_PLAYLIST mhod header.

user 6 Write out the long MHOD_ID_PLAYLIST mhod header.

user 8 Write out the long MHOD_ID_PLAYLIST mhod header.


id 3079986

body /** * Set a style property to a new value (e.g. fill to #ffff00). */

user 4 Set a style property to a new value

user 3 Set a style property to a new value

user 5 Set a style property to a new value

user 6 Set a style property to a new value

user 8 Set a style property to a new value


id 4920972

body /** * Resets the shorted text member. */

user 4 Resets the shorted text member.

user 5 Resets the shorted text member.

user 6 Resets the shorted text member.

user 3 Resets the shorted text member.

user 8 Resets the shorted text member.


id 3994909

body /* Use a triple that satisfies 'sum = term1 + term2' to check the operations add * and sub. */

user 4 check the operations add and sub.

user 5 check the operations add and sub.

user 3 check the operations add and sub.

user 6 Use a triple that satisfies 'sum = term1 + term2' to check

user 8 the operations add and sub.


id 3140122

body /****************************************************************************** * Intercept events for the splitter widget. */

user 4 Intercept events for the splitter widget.

user 5 Intercept events for the splitter widget.

user 3 Intercept events for the splitter widget.

user 8 Intercept events for the splitter widget.

user 6 Intercept events for the splitter widget.


id 2677380

body /* ** Both *pMem1 and *pMem2 contain string values. Compare the two values ** using the collation sequence pColl. As usual, return a negative , zero ** or positive value if *pMem1 is less than, equal to or greater than ** *pMem2, respectively. Similar in spirit to "rc = (*pMem1) - (*pMem2);". */

user 4 Compare the two values using the collation sequence pColl.

user 5 Compare the two values using the collation sequence pColl.

user 6 Compare the two values

user 3 Compare the two values using the collation sequence pColl.

user 8 the collation sequence pColl.


id 5305692

body /* open() wrapper that returns a struct fd with no fd user set */

user 4 returns a struct fd with no fd user set

user 5 open() wrapper that returns a struct fd with no fd user set

user 3 open() wrapper that returns a struct fd with no fd user set

user 6 wrapper that returns a struct fd with no fd user set

user 8 open() wrapper that returns a struct fd with no fd user set


id 3957440

body /** Constructeur @param parent QWidget parent */

user 4 Constructeur

user 5

user 6

user 3

user 8 Constructeur @param parent QWidget parent


id 3283386

body /* **** CS Debug Dumps ******************************************** */

user 4

user 5 CS Debug Dumps

user 3 CS Debug Dumps

user 6 CS Debug Dumps

user 8 CS Debug Dumps


id 2031715

body /* Used to create a preferred mode from various places */

user 4 create a preferred mode

user 5 create a preferred mode from various places

user 3

user 8 create a preferred mode from various places

user 6 create a preferred mode from various places


id 707248

body /* * Match address by #IP bitmask (10.11.12.128/27) */

user 3 Match address

user 4 Match address by #IP bitmask

user 5 Match address by #IP bitmask

user 6 Match address by #IP bitmask

user 8 Match address by #IP bitmask


id 857440

body /*! Destroys the QAbstractFileEngine. */

user 4 Destroys the QAbstractFileEngine.

user 5 Destroys the QAbstractFileEngine.

user 3 Destroys the QAbstractFileEngine.

user 6 Destroys the QAbstractFileEngine.

user 8 Destroys the QAbstractFileEngine.


id 1960548

body void f116 (void) { ({ ({0;}); ({a:0;}); 0;}); ({ ({ goto a; 0;}); ({0;}); 0;}); 0; } /* { dg-error "jump into statement expression" } */

user 4

user 5

user 3

user 6

user 8


id 3638925

body /* * Add an item to the line starts table */

user 4 Add an item to the line starts table

user 5 Add an item to the line starts table

user 3 Add an item to the line starts table

user 6 Add an item to the line starts table

user 8 Add an item to the line starts table


id 1020081

body /* ** Change the maximum size of any memory mapping made of the database file. */

user 4 Change the maximum size of any memory mapping made of the database

user 3 Change the maximum size of any memory mapping made of the database

user 5 Change the maximum size of any memory mapping

user 6 Change the maximum size of any memory mapping

user 8 file.


id 5092344

body /* * When we get an AYT, if ^T is enabled, use that. Otherwise, * just send back "[Yes]". */

user 4

user 6 When we get an AYT, if ^T is enabled, use that. Otherwise,

user 5 When we get an AYT, if ^T is enabled, use that.

user 3 When we get an AYT, if ^T is enabled, use that. Otherwise,

user 8 just send back "[Yes]".


id 4374695

body /* ** Invoke the destructor function associated with FuncDef p, if any. Except, ** if this is not the last copy of the function, do not invoke it. Multiple ** copies of a single function are created when create_function() is called ** with SQLITE_ANY as the encoding. */

user 4 Invoke the destructor function associated with FuncDef p,

user 5 Invoke the destructor function associated with FuncDef p,

user 3 Invoke the destructor function associated with FuncDef p,

user 6 Invoke the destructor function associated with FuncDef p,

user 8 Invoke the destructor function associated with FuncDef p, if any.


id 3991290

body /* Create an OpenCL device, context, command queue and build the kernel. * input is the name of the input file provided to ppcg. */

user 4 Create an OpenCL device, context, command queue and build the kernel.

user 5 Create an OpenCL device, context, command queue and build the kernel.

user 3 Create an OpenCL device, context, command queue and build the kernel.

user 8 Create an OpenCL device, context, command queue and build the kernel.

user 6 Create an OpenCL device,


id 1457344

body /*! Reads all the icons from the given \a device, and returns them as a list of QImage objects. Each image has an alpha channel that represents the mask from the corresponding icon. \sa write() */

user 4 Reads all the icons from the given \a device, and returns them

user 5 Reads all the icons from the given \a device,

user 3 Reads all the icons from the given \a device,

user 6 Reads all the icons from the given \a device, and returns them

user 8 as a list of QImage objects.


id 5357659

body /********************************************************************* * _vfwprintf_l (MSVCRT.@) */

user 4

user 5

user 3

user 6

user 8


id 5718958

body /* Free all storage in the object */

user 4 Free all storage in the object

user 3 Free all storage

user 5 Free all storage in the object

user 6 Free all storage in the object

user 8 Free all storage in the object


id 6563086

body /* Add the given root structure to the index. */

user 4 Add the given root structure to the index.

user 6 Add the given root structure to the index.

user 5 Add the given root structure to the index.

user 3 Add the given root structure to the index.

user 8 Add the given root structure to the index.


id 5850861

body /* *	Called by SARSimApplyGCTL() to modify the given control position *	inputs by autopilot if autopilot is activated on the *	given object. * *	If autopilot is not on then no modifications will be made. * *	If autopilot is on then the game controller will be checked *	against the given control position values to see if the *	autopilot should be automatically turned off. If not then *	the given control positions (not those in the gctl structure) *	will be modified to simulate corrections made by the autopilot. */

user 4 modify the given control position inputs by autopilot if autopilot is activated

user 5 modify the given control position inputs by autopilot

user 3 modify the given control position inputs by autopilot

user 8 on the given object.

user 6 modify the given control position inputs by autopilot


id 897985

body /* * Get native library version */

user 4 Get native library version

user 5 Get native library version

user 3 Get native library version

user 6 Get native library version

user 8 Get native library version


id 2257125

body /* ** Append the current term and doclist pointed to by cursor pCsr to the ** appendable b-tree segment opened for writing by pWriter. ** ** Return SQLITE_OK if successful, or an SQLite error code otherwise. */

user 4 Append the current term and doclist pointed to by cursor pCsr to

user 5 Append the current term and doclist pointed to by cursor pCsr

user 3 Append the current term and doclist pointed to by cursor pCsr to

user 6 Append the current term and doclist pointed to by cursor pCsr to

user 8 the appendable b-tree segment opened for writing by pWriter.


id 1062284

body /* * Display a "small-scale" map of the dungeon in the active Term. * * Note that this function must "disable" the special lighting effects so * that the "priority" function will work. * * Note the use of a specialized "priority" function to allow this function * to work with any graphic attr/char mappings, and the attempts to optimize * this function where possible. * * If "cy" and "cx" are not NULL, then returns the screen location at which * the player was displayed, so the cursor can be moved to that location, * and restricts the horizontal map size to SCREEN_WID. Otherwise, nothing * is returned (obviously), and no restrictions are enforced. */

user 4 Display a "small-scale" map of the dungeon in the active Term.

user 5 Display a "small-scale" map of the dungeon in the active Term.

user 6 Display a "small-scale" map of the dungeon in the active Term.

user 3 Display a "small-scale" map of the dungeon in the active Term.

user 8 Display a "small-scale" map of the dungeon in the active Term.


id 3172255

body /*! Constructs a new near field target with \a parent. */

user 4 Constructs a new near field target with \a parent.

user 5 Constructs a new near field target with \a parent.

user 6 Constructs a new near field target with \a parent.

user 3 Constructs a new near field target with \a parent.

user 8 Constructs a new near field target with \a parent.


id 1772571

body /** Retunrn elapsed time in milliseconds */

user 4 Retunrn elapsed time in milliseconds

user 5 Retunrn elapsed time in milliseconds

user 3 Retunrn elapsed time in milliseconds

user 8 Retunrn elapsed time in milliseconds

user 6 Retunrn elapsed time in milliseconds


id 4108511

body /* ** We have so far matched pBuilder->pNew->u.btree.nEq terms of the ** index pIndex. Try to match one more. ** ** When this function is called, pBuilder->pNew->nOut contains the ** number of rows expected to be visited by filtering using the nEq ** terms only. If it is modified, this value is restored before this ** function returns. ** ** If pProbe->tnum==0, that means pIndex is a fake index used for the ** INTEGER PRIMARY KEY. */

user 4

user 5

user 3

user 8 Try to match one more.

user 6


id 568575

body /** * Query to get the starting physical address of this bank. Physical * banks are sometimes sub-divided into logical banks due to changes * in attributes. * * bank to tell what memory bank of the ibutton to use. * SNum the serial number for the part. * * @return physical starting address of this logical bank. */

user 4 Query to get the starting physical address of this bank.

user 5 Query to get the starting physical address of this bank.

user 6 Query to get the starting physical address of this bank.

user 3 get the starting physical address of this bank.

user 8 Query to get the starting physical address of this bank.


id 5523295

body /* Takes the address of the pointer to the static_leases linked list */

user 3

user 4 Takes the address of the pointer to the static_leases linked list

user 5 Takes the address of the pointer to the static_leases linked list

user 6 Takes the address of the pointer to the static_leases linked list

user 8 Takes the address of the pointer to the static_leases linked list


id 4102148

body /* ** Insert a tag into the database. ** ** Also translate zTag into a tagid and return the tagid. (In other words ** if zTag is "bgcolor" then return TAG_BGCOLOR.) */

user 4 Insert a tag into the database.

user 6 Insert a tag into the database.

user 5 Insert a tag into the database.

user 3 Insert a tag into the database.

user 8 Insert a tag into the database.


id 1291772

body /* ** This routine is used to check if the UTF-8 string zName is a legal ** unqualified name for a new schema object (table, index, view or ** trigger). All names are legal except those that begin with the string ** "sqlite_" (in upper, lower or mixed case). This portion of the namespace ** is reserved for internal use. */

user 4 check if the UTF-8 string zName is a legal unqualified name for

user 5 check if the UTF-8 string zName is a legal unqualified name

user 3 This routine is used to check if the UTF-8 string zName is

user 6 check if the UTF-8 string zName is a legal unqualified name

user 8 a new schema object


id 375067

body /* * check function call arguments after folding * mainly for checking the various special system function arguments * but also check actual and formal argument number */

user 4 check function call arguments after folding

user 5 checking the various special system function arguments

user 6 check function call arguments after folding

user 3 check function call arguments after folding

user 8 check function call arguments after folding


id 723620

body /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * * NAME: doNoRedoPage() * * FUNCTION: Processing for LOG_NOREDOPAGE rec type. * * This routine starts a NoRedoPage filter for the * specified xtree or dtree node (may be root). * * This routine updates the bmap when the freed node * is NOT the root node. * (ld->log.noredopage.pxd = old page extent) * * NOTE: This routine only updates the block map when the * extent being freed describes a dtree page. * Block map updates for a freed xtree page are handled * when the UPDATEMAP log record is seen. * */

user 4 starts a NoRedoPage filter for the specified xtree or dtree node

user 5 starts a NoRedoPage filter for the specified xtree or dtree node

user 3 starts a NoRedoPage filter for the specified xtree or dtree node

user 6 This routine starts a NoRedoPage filter for the specified xtree or dtree

user 8 be root).


id 3986817

body /* -- output the user defined postscript sequences -- */

user 4 output the user defined postscript sequences

user 3 output the user defined postscript sequences

user 5 output the user defined postscript sequences

user 6 output the user defined postscript sequences

user 8 output the user defined postscript sequences


id 4447140

body /* Set console attributes depending on the current escape codes. * NOTE: I know this code is not very efficient (checking every color for it * self) but it is more readable and better maintainable. */

user 3 Set console attributes depending on the current escape codes.

user 4 Set console attributes depending on the current escape codes.

user 5 Set console attributes depending on the current escape codes.

user 6 Set console attributes depending on the current escape codes.

user 8 Set console attributes depending on the current escape codes.


id 2869946

body /***************************************************************************** * FileWrite(buf, size, fp) *****************************************************************************/

user 4

user 6

user 5

user 3

user 8


id 248898

body /* used for timings */

user 4

user 5

user 3

user 6

user 8


id 6237099

body /******* free_body ************************************************************ PROTO	void free_body(tabstruct *tab) PURPOSE	Free FITS body data. INPUT	Tab structure. OUTPUT	-. NOTES	. AUTHOR	E. Bertin (IAP) VERSION	04/03/2000 ***/

user 4 Free FITS body data.

user 5 Free FITS body data.

user 3 Free FITS body data.

user 8

user 6 Free FITS body data.


id 6509709

body /* reverse scan of hash table elements, useful to close all files */

user 4 reverse scan of hash table elements,

user 3 reverse scan of hash table elements,

user 5 reverse scan of hash table elements,

user 6 reverse scan of hash table elements,

user 8 reverse scan of hash table elements, useful to close all files


id 3911432

body /** Check the folder part of a catalog record */

user 4 Check the folder part of a catalog record

user 3

user 5 Check the folder part of a catalog record

user 6 Check the folder part of a catalog record

user 8 Check the folder part of a catalog record


id 5229271

body /* set parent bone */

user 4 set parent bone

user 5 set parent bone

user 6 set parent bone

user 3 set parent bone

user 8 set parent bone


id 5036342

body /* * Remove all traces displayed for a particular DBinfo. The reason for this * is that the edc[i].seq numbers will change when one DBinfo is merged with * another due to joining contigs. It is possible to recalculate, but quite * fiddle to get the timing correct. */

user 4 Remove all traces displayed for a particular DBinfo.

user 5

user 3 Remove all traces displayed for a particular DBinfo.

user 8 Remove all traces displayed for a particular DBinfo.

user 6 Remove all traces displayed for a particular DBinfo.


id 3297160

body /** * Sets up the page "Contents" for the component. */

user 4 Sets up the page "Contents" for the component.

user 3 Sets up the page "Contents" for the component.

user 5 Sets up the page "Contents" for the component.

user 6 Sets up the page "Contents" for the component.

user 8 Sets up the page "Contents" for the component.


id 255442

body /* This is supposed to be called from application main(), before any threads are created. We don't mutex here. */

user 4

user 3

user 5

user 8

user 6


id 2268507

body /* * Simple function which encodes a version number, given as major, minor, micro, * and nano, as a 64-bit unsigned integer. This is defined in an inline function * rather than as a macro for convenience so it can be examined by the debugger. * Encoded version numbers can be compared directly in version checks. */

user 4 encodes a version number, given as major, minor, micro, and nano, as

user 5 encodes a version number, given as major, minor, micro, and nano,

user 3 encodes a version number,

user 6 encodes a version number,

user 8 a 64-bit unsigned integer.


id 1930235

body /* spu_xor * ======= */

user 4

user 5

user 3

user 6

user 8


id 3007515

body /** * Undo @see clientCreate(). */

user 4

user 5 Undo @see clientCreate().

user 3 Undo @see clientCreate().

user 8

user 6


id 5953469

body /* * ts570_get_split_vfo */

user 4

user 5

user 6

user 3

user 8


id 4330491

body /*! ZSTD_loadZstdDictionary() : * @return : 0, or an error code * assumptions : magic number supposed already checked * dictSize supposed > 8 */

user 4

user 3

user 5

user 6

user 8


id 4106703

body /* Attempt to locate an element of the hash table pH with a key ** that matches pKey. Return the data for this element if it is ** found, or NULL if there is no match. */

user 4 locate an element of the hash table pH with a key

user 5 locate an element of the hash table

user 3 Attempt to locate an element of the hash table

user 6 locate an element of the hash table pH with a key

user 8 key that matches pKey.


id 1490507

body /** * Standard driver dev_clear() helper. * * Clear driver, this means, close all instances. * * This function can be used to implement the dev_clear() driver API * callback. dev_close() is called before every sr_dev_inst is cleared. * * The only limitation is driver-specific device contexts (sdi->priv). * These are freed, but any dynamic allocation within structs stored * there cannot be freed. * * @param driver The driver which will have its instances released. * @param clear_private If not NULL, this points to a function called * with sdi->priv as argument. The function can then clear any device * instance-specific resources kept there. It must also clear the struct * pointed to by sdi->priv. * * @return SR_OK on success. */

user 4 Clear driver, this means, close all instances.

user 3 Clear driver,

user 5 Clear driver, this means, close all instances.

user 6 Clear driver, this means, close all instances.

user 8 Clear driver, this means, close all instances.


id 6577784

body /** * \brief Set a field of type \c <real>. * \param name The name of the field to set. * \param value The new value of the field. */

user 4 Set a field of type \c <real>.

user 3 Set a field

user 5 Set a field of type \c <real>.

user 6 Set a field of type \c <real>.

user 8 Set a field of type \c <real>.


id 999703

body /* request an expose for a button region*/

user 4 request an expose for a button region

user 5 request an expose for a button region

user 3 request an expose for a button region

user 6 request an expose for a button region

user 8 request an expose for a button region


id 2739317

body /*------------------------------------------------------------------------------ * IQ Calibration routines *----------------------------------------------------------------------------*/

user 4

user 3

user 5

user 6

user 8


id 3263017

body /** * idmef_criterion_clone: * @criterion: Pointer to a #idmef_criterion_t object to clone. * @dst: Address where to store the cloned #idmef_criterion_t object. * * Clones @criterion and stores the cloned criterion within @dst. * * Returns: 0 on success, a negative value if an error occured. */

user 4

user 5 Clones @criterion and stores the cloned criterion within @dst.

user 3 Clones @criterion and stores the cloned criterion within @dst.

user 8 Clones @criterion and stores the cloned criterion within @dst.

user 6 Clones @criterion and stores the cloned criterion within @dst.


id 1066795

body /* Opens a file * Returns a Python object if successful or NULL on error */

user 4 Opens a file

user 5 Opens a file Returns a Python object if successful

user 3 Opens a file

user 8 Returns a Python object if successful or NULL on error

user 6 Opens a file


id 5502619

body /* CheckEndian(): Checks whether the current machine is of little or big endian architecture. This is important for concatenating bitmaps. Function returns 0 if LittleEndian and 1 if BigEndian representation is used on the current hardware. */

user 4 Checks whether the current machine is of little or big endian architecture.

user 5 Checks whether the current machine is of little or big endian architecture.

user 3 Checks whether the current machine is of little or big endian architecture.

user 6 Checks whether the current machine is of little or big endian architecture.

user 8 Checks whether the current machine is of little or big endian architecture.


id 143192

body /* * Takes Data received (rcv_dataptr) and puts it in * todo date out transfer */

user 4 Takes Data received (rcv_dataptr) and puts it in todo date out transfer

user 3

user 5 Takes Data received (rcv_dataptr) and puts it in

user 6 Takes Data received (rcv_dataptr) and puts it in todo date

user 8 Takes Data received (rcv_dataptr) and puts it in todo date out transfer


id 2255715

body /* ** Swap all content between two VDBE structures. */

user 4 Swap all content between two VDBE structures.

user 5 Swap all content between two VDBE structures.

user 3 Swap all content between two VDBE structures.

user 8 Swap all content between two VDBE structures.

user 6 Swap all content between two VDBE structures.


id 2155298

body /* Since the common area can be accessed by any thread, this function should * be called before any access (read or write) to the common area. Otherwise * race conditions can occur. This function must also be used whenever we call * a function which is not reentrant (it is the case for some Fontconfig * entries). * __glcLock/__glcUnlock can be nested : they keep track of the number of * time they have been called and the mutex will be released as soon as * __glcUnlock() will be called as many time as __glcLock() was. */

user 3

user 4

user 5

user 8 as many time as __glcLock() was.

user 6


id 300378

body /* ** Cast the datatype of the value in pMem according to the affinity ** "aff". Casting is different from applying affinity in that a cast ** is forced. In other words, the value is converted into the desired ** affinity even if that results in loss of data. This routine is ** used (for example) to implement the SQL "cast()" operator. */

user 4 Cast the datatype of the value in pMem according to the affinity

user 3 Cast the datatype of the value in pMem

user 5 Cast the datatype of the value in pMem according to the affinity

user 6 Cast the datatype of the value in pMem according to the affinity

user 8 "aff".


id 6524602

body /* * One of our local procs wants us to close the specifed * stream(s), thus terminating any potential io to/from it. */

user 4 close the specifed stream(s),

user 3

user 5 terminating any potential io

user 6 close the specifed stream(s),

user 8 close the specifed stream(s), thus terminating any potential io to/from it.


id 4604322

body /**Log an @Allow header(s). * * The function sl_allow_log() logs the contents of @a allow header to * the log @a log with given @a level. The @a fmt specifies the output * format, where %s is replaced with header contents. If @a fmt is @c NULL, * only the header contents are logged. * * @param log output log * @param level logging level of output * @param fmt output format * @param allow @Allow header * */

user 4 logs the contents of @a allow header to the log @a log

user 3 logs the contents of @a allow header to the log @a log

user 5 logs the contents of @a allow header to the log @a log

user 6 logs the contents of @a allow header to the log @a log

user 8 with given @a level.


id 5312284

body /****************************************************************************** * SystemFunction003 [ADVAPI32.@] * * Hashes a key using DES and a fixed datablock * * PARAMS * key [I] key data (7 bytes) * output [O] hashed key (8 bytes) * * RETURNS * Success: STATUS_SUCCESS * Failure: STATUS_UNSUCCESSFUL * */

user 4 Hashes a key using DES and a fixed datablock

user 5 Hashes a key using DES and a fixed datablock

user 6 Hashes a key using DES and a fixed datablock

user 3 Hashes a key using DES and a fixed datablock

user 8 Hashes a key using DES and a fixed datablock


id 4172904

body /* ** Compute the number of pages of cache requested. p->szCache is the ** cache size requested by the "PRAGMA cache_size" statement. ** ** */

user 3 Compute the number of pages of cache requested.

user 4 Compute the number of pages of cache requested.

user 5 Compute the number of pages of cache requested.

user 6 Compute the number of pages of cache requested.

user 8 Compute the number of pages of cache requested.


id 5855780

body /* Dummy callback functions. They do nothing */

user 4 Dummy callback functions. They do nothing

user 6 Dummy callback functions.

user 5 Dummy callback functions.

user 3

user 8 Dummy callback functions. They do nothing


id 3600635

body /*@ VecCreateShared - Creates a parallel vector that uses shared memory. Input Parameters: . comm - the MPI communicator to use . n - local vector length (or PETSC_DECIDE to have calculated if N is given) . N - global vector length (or PETSC_DECIDE to have calculated if n is given) Output Parameter: . vv - the vector Collective on MPI_Comm Notes: Currently VecCreateShared() is available only on the SGI; otherwise, this routine is the same as VecCreateMPI(). Use VecDuplicate() or VecDuplicateVecs() to form additional vectors of the same type as an existing vector. Level: advanced Concepts: vectors^creating with shared memory .seealso: VecCreateSeq(), VecCreate(), VecCreateMPI(), VecDuplicate(), VecDuplicateVecs(), VecCreateGhost(), VecCreateMPIWithArray(), VecCreateGhostWithArray() @*/

user 4 Creates a parallel vector that uses shared memory.

user 5 Creates a parallel vector that uses shared memory.

user 3 Creates a parallel vector that uses shared memory.

user 8 Creates a parallel vector that uses shared memory.

user 6 Creates a parallel vector that uses shared memory.


id 1292670

body /* TODO(shess) Should plwDestroy() also terminate the doclist? But ** then plwDestroy() would no longer be just a destructor, it would ** also be doing work, which isn't consistent with the overall idiom. ** Another option would be for plwAdd() to always append any necessary ** terminator, so that the output is always correct. But that would ** add incremental work to the common case with the only benefit being ** API elegance. Punt for now. */

user 4

user 3

user 5

user 6

user 8


id 1517584

body /* Get line number for a bytecode position. */

user 4 Get line number for a bytecode position.

user 5 Get line number for a bytecode position.

user 3 Get line number for a bytecode position.

user 6 Get line number for a bytecode position.

user 8 Get line number for a bytecode position.


id 6588355

body /*! @decl int pid() *! Returns the process identifier of the process. */

user 4 Returns the process identifier of the process.

user 5 Returns the process identifier of the process.

user 6

user 3 Returns the process identifier of the process.

user 8 Returns the process identifier of the process.


id 3974052

body /** * Fragment comparator callback for qsort */

user 4 Fragment comparator callback for qsort

user 5 Fragment comparator callback for qsort

user 3 Fragment comparator callback for qsort

user 6

user 8


id 5199812

body /** ** Can build unit-type at this point. ** ** @param unit Worker that want to build the building or NULL. ** @param type Building unit-type. ** @param x X tile map position. ** @param y Y tile map position. ** @param real Really build, or just placement ** ** @return OnTop, parent unit, builder on true, NULL false. */

user 3

user 4 Can build unit-type at this point.

user 5 Can build unit-type at this point.

user 6 Can build unit-type at this point.

user 8 Can build unit-type at this point.


id 6214674

body /** * \brief Default constructor. */

user 4 Default constructor.

user 5 Default constructor.

user 6 Default constructor.

user 3 Default constructor.

user 8 Default constructor.


id 1067010

body /* Copies a Unicode character from a byte stream * Returns 1 if successful or -1 on error */

user 4 Copies a Unicode character from a byte stream

user 3 Copies a Unicode character from a byte stream

user 5 Copies a Unicode character from a byte stream

user 6 Copies a Unicode character from a byte stream

user 8 Copies a Unicode character from a byte stream


id 3456580

body /* * Move player trough wormhole. */

user 3 Move player trough wormhole.

user 4 Move player trough wormhole.

user 6 Move player trough wormhole.

user 5 Move player trough wormhole.

user 8 Move player trough wormhole.


id 5959213

body /* add contents of a file to the hash */

user 4 add contents of a file to the hash

user 5 add contents of a file to the hash

user 3 add contents of a file to the hash

user 6 add contents of a file to the hash

user 8


id 3936779

body /* Retrieves the UTF-16 formatted comments * Returns 1 if successful, 0 if not available or -1 on error */

user 4 Retrieves the UTF-16 formatted comments

user 3 Retrieves the UTF-16 formatted comments

user 5 Retrieves the UTF-16 formatted comments

user 8 Retrieves the UTF-16 formatted comments

user 6 Retrieves the UTF-16 formatted comments


id 805015

body /** * set the column_title_type * * \param report_number number of the report * \param column_title_type * * \return TRUE if ok * */

user 4 set the column_title_type

user 5

user 3 set the column_title_type

user 6 set the column_title_type

user 8 set the column_title_type


id 4707081

body /* * register us for the mod_log_config function registering phase * to establish %{...}c and to be able to expand %{...}x variables. */

user 4 register us for the mod_log_config function registering phase

user 3 register us for the mod_log_config function registering phase

user 5

user 6

user 8 register us for the mod_log_config function


id 446098

body /** *************************************************************************************************** * AddrElemLib::GetCompSwap * * @brief * Get components swapped for color surface * * @return * N/A * *************************************************************************************************** */

user 4 Get components swapped for color surface

user 5 Get components swapped for color surface

user 3 Get components swapped for color surface

user 8 Get components swapped for color surface

user 6 Get components swapped for color surface


id 1154383

body /* FIXME: implement snapshot support */

user 4

user 3

user 5

user 6

user 8


id 6305934

body /*! \brief Assign a brush The brush is used for the Box style. \param brush Brush \sa brush() */

user 4 Assign a brush

user 3 Assign a brush

user 5 Assign a brush The brush is used for the Box style.

user 6 Assign a brush

user 8 Assign a brush


id 5532925

body /* Update "graft" based on "sub_build" for the degenerate case. * * "build" is the build in which graft->node was created * "sub_build" contains information about the current level itself, * including the single value attained. * * We set the initialization part of the for loop to the single * value attained by the current dimension. * The increment and condition are not strictly needed as the are known * to be "1" and "iterator <= value" respectively. */

user 2 Update "graft" based on "sub_build" for the degenerate case.

user 3 Update "graft" based on "sub_build" for the degenerate case.

user 4 Update "graft" based on "sub_build" for the degenerate case.

user 5 Update "graft" based on "sub_build" for the degenerate case.

user 6 Update "graft" based on "sub_build" for the degenerate case.

user 8 Update "graft" based on "sub_build" for the degenerate case.


id 4988975

body /* Function: mdlOutputs ======================================================= * Abstract: * In this function, you compute the outputs of your S-function * block. Generally outputs are placed in the output vector, ssGetY(S). */

user 4 compute the outputs of your S-function block.

user 5 compute the outputs of your S-function block.

user 6 compute the outputs of your S-function block.

user 3 In this function, you compute the outputs of your S-function block.

user 8 compute the outputs of your S-function block.


id 5200194

body /** ** Set fog of war on/off. ** ** @param l Lua state. */

user 4 Set fog of war on/off.

user 5 Set fog of war on/off.

user 6 Set fog of war on/off.

user 3 Set fog of war on/off.

user 8 Set fog of war on/off.


id 5837821

body /* Clones (duplicates) the cache, not the cache values * Returns 1 if successful or -1 on error */

user 4 Clones (duplicates) the cache, not the cache values

user 3 Clones (duplicates) the cache, not the cache values

user 5 Clones (duplicates) the cache, not the cache values

user 6 Clones (duplicates) the cache,

user 8 Clones (duplicates) the cache, not the cache values


id 4502513

body /* Writes 'raw' data in EWF format the current offset * the necessary settings of the write values must have been made * size contains the size of the data within the buffer while * data size contains the size of the actual input data * Will initialize write if necessary * Returns the amount of input bytes written, 0 when no longer bytes can be written or -1 on error */

user 4 Writes 'raw' data in EWF format the current offset

user 5 Writes 'raw' data in EWF format the current offset

user 6 Writes 'raw' data in EWF format the current offset

user 3 Writes 'raw' data in EWF format the current offset

user 8 Writes 'raw' data in EWF format


id 5939525

body /* Strip trailing white space from string. */

user 4 Strip trailing white space from string.

user 5 Strip trailing white space from string.

user 6 Strip trailing white space from string.

user 3 Strip trailing white space from string.

user 8 Strip trailing white space from string.


id 1800920

body /** * ccp4_file_rewind: * @param cfile (CCP4File *) * * Seek to start of file. Clear error status. * * @return 0 on success, EOF on failure */

user 4 Seek to start of file. Clear error status.

user 5 Seek to start of file. Clear error status.

user 6 Seek to start of file.

user 3 Seek to start of file. Clear error status.

user 8 Seek to start of file. Clear error status.


id 258116

body /** * Calculate the digest used in the finished message. This function also * doubles up as a certificate verify function. */

user 4 Calculate the digest used in the finished message. This function also doubles

user 3 Calculate the digest used in the finished message.

user 5 Calculate the digest used in the finished message.

user 8 Calculate the digest used in the finished message.

user 6 Calculate the digest used in the finished message.


id 109123

body /* ** Return the sector-size in bytes for an rbuVfs-file. */

user 4 Return the sector-size in bytes for an rbuVfs-file.

user 3 Return the sector-size in bytes for an rbuVfs-file.

user 5 Return the sector-size in bytes for an rbuVfs-file.

user 6 Return the sector-size in bytes for an rbuVfs-file.

user 8 Return the sector-size in bytes for an rbuVfs-file.


id 1844122

body /* embelish the buildings with various ornamentation. */

user 4 embelish the buildings with various ornamentation.

user 6 embelish the buildings with various ornamentation.

user 5 embelish the buildings with various ornamentation.

user 3

user 8 embelish the buildings with various ornamentation.


id 913656

body /** Get the current token. * */

user 4 Get the current token.

user 5 Get the current token.

user 6 Get the current token.

user 3 Get the current token.

user 8 Get the current token.


id 5315124

body /*** * DESCRIPTION: * Processes double click messages (right mouse button). * * PARAMETER(S): * [I] infoPtr : valid pointer to the listview structure * [I] wKey : key flag * [I] x,y : mouse coordinate * * RETURN: * Zero */

user 4 Processes double click messages (right mouse button).

user 5 Processes double click messages

user 3 Processes double click messages (right mouse button).

user 6 Processes double click messages (right mouse button).

user 8 Processes double click messages (right mouse button).


id 3595707

body /* Retrieves the cache value for the specific index * Returns 1 if successful or -1 on error */

user 4 Retrieves the cache value for the specific index

user 5 Retrieves the cache value for the specific index

user 6 Retrieves the cache value for the specific index

user 3 Retrieves the cache value for the specific index

user 8 Retrieves the cache value for the specific index


id 4823261

body /** * fit_image_write_sig() - write the signature to a FIT * * This writes the signature and signer data to the FIT. * * @fit: pointer to the FIT format image header * @noffset: hash node offset * @value: signature value to be set * @value_len: signature value length * @comment: Text comment to write (NULL for none) * * returns * 0, on success * -FDT_ERR_..., on failure */

user 4 writes the signature and signer data to the FIT.

user 5 This writes the signature and signer data to the FIT.

user 3 This writes the signature and signer data to the FIT.

user 8 This writes the signature and signer data to the FIT.

user 6 writes the signature and signer data to the FIT.


id 4510314

body /* Returns 2-norm of a float n-vector over range. */

user 4 2-norm of a float n-vector over range.

user 5 Returns 2-norm of a float n-vector over range.

user 3 Returns 2-norm of a float n-vector over range.

user 6 Returns 2-norm of a float n-vector over range.

user 8 Returns 2-norm of a float n-vector over range.


id 5388337

body /*********************************************************************** * SetupInstallFromInfSectionW (SETUPAPI.@) */

user 4

user 5

user 6

user 3

user 8


id 2650493

body /* ================== idPort::GetPacket ================== */

user 4

user 3

user 5

user 6

user 8


id 3991896

body /* Construct the identifier "cluster_i". */

user 4 Construct the identifier "cluster_i".

user 5 Construct the identifier "cluster_i".

user 6 Construct the identifier "cluster_i".

user 3 Construct the identifier "cluster_i".

user 8 Construct the identifier "cluster_i".


id 3077713

body /** * Finds the descendant of w which has the data with the given key and returns the data, or NULL if there's none. */

user 4 Finds the descendant of w which has the data with the given

user 6 Finds the descendant of w which has the data with the given

user 5 Finds the descendant of w

user 3 Finds the descendant of w which has the data with the given

user 8 key and returns the data, or NULL if there's none.


id 1678164

body /* ** Create and populate a new TriggerPrg object with a sub-program ** implementing trigger pTrigger with ON CONFLICT policy orconf. */

user 4 Create and populate a new TriggerPrg object with a sub-program implementing

user 5 Create and populate a new TriggerPrg object with a sub-program

user 6 Create and populate a new TriggerPrg object

user 3 Create and populate a new TriggerPrg object with a sub-program implementing

user 8 trigger pTrigger with ON CONFLICT policy orconf.


id 2486121

body /**************************************************************************** ** *F PushUnaryOp( <type> ) . . . . . . . . . . . . . . . . push unary operator ** ** 'PushUnaryOp' pushes a unary operator expression onto the expression ** stack. <type> is the type of the operator (currently only 'T_NOT'). */

user 4 pushes a unary operator expression onto the expression stack.

user 5 pushes a unary operator expression onto the expression stack.

user 3 pushes a unary operator expression onto the expression stack.

user 6 pushes a unary operator expression onto the expression stack.

user 8 push unary operator


id 1459760

body /* This internal function deletes the font identified by inFont (if any) and * creates a new font based on the pattern 'inPattern'. The resulting font is * added to the list GLC_FONT_LIST. */

user 4 deletes the font identified by inFont (if any) and creates a new

user 5 function deletes the font identified by inFont

user 6 deletes the font identified by inFont (if any) and creates a new

user 3 This internal function deletes the font identified by inFont (if any) and

user 8 font based on the pattern 'inPattern'.


id 1053594

body /** * \function igraph_adjlist_clear * Removes all edges from an adjacency list. * * \param al The adjacency list. * Time complexity: depends on memory management, typically O(n), where n is * the total number of elements in the adjacency list. */

user 2 Removes all edges from an adjacency list.

user 4 Removes all edges from an adjacency list.

user 3 Removes all edges from an adjacency list.

user 5 Removes all edges from an adjacency list.

user 6 Removes all edges from an adjacency list.

user 8 Removes all edges from an adjacency list.


id 661823

body /* a6114 in a6097 in k6031 in k6028 in k6022 in k6016 in k6013 in find-module/import-library in k2962 in k2958 */

user 4

user 6

user 5

user 3

user 8


id 81798

body /** * Adds authentication information to the LinphoneCore. * * This information will be used during all SIP transacations that require authentication. **/

user 4 Adds authentication information to the LinphoneCore.

user 5 Adds authentication information to the LinphoneCore.

user 3 Adds authentication information to the LinphoneCore.

user 8 Adds authentication information to the LinphoneCore.

user 6 Adds authentication information to the LinphoneCore.


id 4789930

body void /* PRIVATE */

user 4

user 5

user 3

user 6

user 8


id 5405968

body /* * Load color file "name". * Return OK for success, FAIL for failure. */

user 4 Load color file "name".

user 6 Load color file "name".

user 5 Load color file "name".

user 3 Load color file "name".

user 8 Load color file "name".


id 43803

body /* Callback by STUN authentication when it needs to send 401 */

user 3

user 4 Callback by STUN authentication when it needs to send 401

user 5 Callback by STUN authentication when it needs to send 401

user 6

user 8 Callback by STUN authentication when it needs to send 401


id 3268525

body /* Checks if `path' is an executable regular file. */

user 4 Checks if `path' is an executable regular file.

user 5 Checks if `path' is an executable regular file.

user 3 Checks if `path' is an executable regular file.

user 6 Checks if `path' is an executable regular file.

user 8 Checks if `path' is an executable regular file.


id 1408100

body /* This function gets called every time Redis is entering the * main loop of the event driven library, that is, before to sleep * for ready file descriptors. */

user 3

user 4 called every time Redis is entering the main loop of the event

user 6

user 5

user 8


id 2214357

body /* _create_post_section: * Adds one POST section matching filename to the global array of pages * after creating a new POST page, which will be returned. */

user 3 Adds one POST section matching filename to the global array of pages

user 4 Adds one POST section matching filename to the global array of pages

user 5 Adds one POST section matching filename to the global array of pages

user 6 Adds one POST section matching filename to the global array of pages

user 8 Adds one POST section matching filename to the global array of pages


id 727596

body /* Coalesce BASE register for a side trace. */

user 4 Coalesce BASE register for a side trace.

user 5 Coalesce BASE register for a side trace.

user 3 Coalesce BASE register for a side trace.

user 6

user 8 Coalesce BASE register for a side trace.


id 839725

body /*! QUrlModel lets you have indexes from a QFileSystemModel to a list. When QFileSystemModel changes them QUrlModel will automatically update. Example usage: File dialog sidebar and combo box */

user 4

user 3 QUrlModel lets you have indexes from a QFileSystemModel to a list.

user 5 lets you have indexes from a QFileSystemModel to a list.

user 6 lets you have indexes from a QFileSystemModel to a list.

user 8 have indexes from a QFileSystemModel to a list.


id 5099299

body /* Sets the value to have the library open and close * the systems file descriptor or handle on demand * 0 disables open on demand any other value enables it * Returns 1 if successful or -1 on error */

user 4 Sets the value to have the library open and close the systems

user 5

user 6 Sets the value to have the library open and close the systems

user 3 Sets the value to have the library open and close the systems

user 8 file descriptor or handle on demand


id 751915

body /* Function: al_get_path_num_components */

user 4

user 5

user 6

user 3

user 8


id 5896455

body /* BVOrthogonalizeCGS1 - Compute |v'| (estimated), |v| and one step of CGS with only one global synchronization */

user 4 Compute |v'| (estimated), |v| and one step of CGS with only one

user 3 Compute |v'| (estimated), |v| and one step of CGS

user 5 Compute |v'| (estimated), |v| and one step of CGS

user 8 global synchronization

user 6 Compute |v'| (estimated), |v| and one step of CGS


id 1696807

body /* ** This function is called to rollback or release (commit) a savepoint. ** The savepoint to release or rollback need not be the most recently ** created savepoint. ** ** Parameter op is always either SAVEPOINT_ROLLBACK or SAVEPOINT_RELEASE. ** If it is SAVEPOINT_RELEASE, then release and destroy the savepoint with ** index iSavepoint. If it is SAVEPOINT_ROLLBACK, then rollback all changes ** that have occurred since the specified savepoint was created. ** ** The savepoint to rollback or release is identified by parameter ** iSavepoint. A value of 0 means to operate on the outermost savepoint ** (the first created). A value of (Pager.nSavepoint-1) means operate ** on the most recently created savepoint. If iSavepoint is greater than ** (Pager.nSavepoint-1), then this function is a no-op. ** ** If a negative value is passed to this function, then the current ** transaction is rolled back. This is different to calling ** sqlite3PagerRollback() because this function does not terminate ** the transaction or unlock the database, it just restores the ** contents of the database to its original state. ** ** In any case, all savepoints with an index greater than iSavepoint ** are destroyed. If this is a release operation (op==SAVEPOINT_RELEASE), ** then savepoint iSavepoint is also destroyed. ** ** This function may return SQLITE_NOMEM if a memory allocation fails, ** or an IO error code if an IO error occurs while rolling back a ** savepoint. If no errors occur, SQLITE_OK is returned. */

user 4 rollback or release (commit) a savepoint.

user 3 rollback or release (commit) a savepoint.

user 5 rollback or release (commit) a savepoint.

user 8 rollback or release (commit) a savepoint.

user 6 release and destroy the savepoint with index iSavepoint.


id 5163495

body /* draws a gui box */

user 4 draws a gui box

user 5 draws a gui box

user 3 draws a gui box

user 6 draws a gui box

user 8


id 2608965

body /* Extract the loop AST generation types for the members of "band" * from "options" and store them in band->loop_type. * Return -1 on error. */

user 4 Extract the loop AST generation types for the members of "band" from

user 3 Extract the loop AST generation types for the members of "band" from

user 5 Extract the loop AST generation types for the members of "band"

user 6 Extract the loop AST generation types for the members of "band" from

user 8 "options" and store them in band->loop_type.


id 3262543

body /** * idmef_data_to_string: * @data: Pointer to an #idmef_data_t object. * @out: Pointer to a #prelude_string_t to store the formated data into. * * Formats data contained within @data to be printable, * and stores the result in the provided @out buffer. * * Returns: 0 on success, a negative value if an error occured. */

user 4 Formats data contained within @data to be printable, and stores the result

user 3 Formats data contained within @data to be printable, and stores the result

user 5 Formats data contained within @data to be printable, and stores the result

user 6 Formats data contained within @data to be printable,

user 8 in the provided @out buffer.


id 37650

body /* Add an ALSA address to the asociative tables. Returns <0 if there * was no space left for the new address. Otherwhise, the address is * mapped to the first available device number, which is returned. * NOTE: In the worst case, the loops used to update the "available * page" and the "available device" pointers can have a length of * almost CSYSI_MAX_DEVS. This would happen in a system with most of * the available pages/devices used, where a page/device near the * begginig is freed, and then a new page/device is requested. * Hopefuly this can be asumed to be infrecuent enough, so we can * avoid using a more complicated mechanism to track free * pages/devices */

user 4 Add an ALSA address to the asociative tables.

user 3 Add an ALSA address to the asociative tables.

user 5 Add an ALSA address to the asociative tables.

user 6 Add an ALSA address to the asociative tables.

user 8 Add an ALSA address to the asociative tables.


id 1640850

body /** * @brief Terror attack mission is over and is a success: change interest values. * @note Terror attack mission */

user 4 change interest values.

user 5 Terror attack mission is over and is a success: change interest values.

user 3 Terror attack mission is over and is a success:

user 6

user 8 Terror attack mission is over and is a success: change interest values.


id 301690

body /* ** The %_segments table is declared as follows: ** ** CREATE TABLE %_segments(blockid INTEGER PRIMARY KEY, block BLOB) ** ** This function reads data from a single row of the %_segments table. The ** specific row is identified by the iBlockid parameter. If paBlob is not ** NULL, then a buffer is allocated using sqlite3_malloc() and populated ** with the contents of the blob stored in the "block" column of the ** identified table row is. Whether or not paBlob is NULL, *pnBlob is set ** to the size of the blob in bytes before returning. ** ** If an error occurs, or the table does not contain the specified row, ** an SQLite error code is returned. Otherwise, SQLITE_OK is returned. If ** paBlob is non-NULL, then it is the responsibility of the caller to ** eventually free the returned buffer. ** ** This function may leave an open sqlite3_blob* handle in the ** Fts3Table.pSegments variable. This handle is reused by subsequent calls ** to this function. The handle may be closed by calling the ** sqlite3Fts3SegmentsClose() function. Reusing a blob handle is a handy ** performance improvement, but the blob handle should always be closed ** before control is returned to the user (to prevent a lock being held ** on the database file for longer than necessary). Thus, any virtual table ** method (xFilter etc.) that may directly or indirectly call this function ** must call sqlite3Fts3SegmentsClose() before returning. */

user 4 reads data from a single row of the %_segments table.

user 5 reads data from a single row of the %_segments table.

user 6 This function reads data from a single row of the %_segments table.

user 3 This function reads data from a single row of the %_segments table.

user 8 column of the identified table row is.


id 663775

body /* k15495 in k15532 in k15545 in k15466 in k15463 in walk-call in perform-cps-conversion in k6316 in k6313 in k6310 */

user 4

user 3

user 5

user 6

user 8


id 5168445

body /* Magic: 0=charCodeAt, 1=codePointAt */

user 4

user 3

user 5

user 6

user 8


id 4315016

body /* ** The following pair of routine implement mutual exclusion for ** multi-threaded processes. Only a single thread is allowed to ** executed code that is surrounded by EnterMutex() and LeaveMutex(). ** ** SQLite uses only a single Mutex. There is not much critical ** code and what little there is executes quickly and without blocking. */

user 3 implement mutual exclusion for multi-threaded processes.

user 4 implement mutual exclusion for multi-threaded processes.

user 5 implement mutual exclusion for multi-threaded processes.

user 6 implement mutual exclusion for multi-threaded processes.

user 8 implement mutual exclusion for multi-threaded processes.


id 3299574

body /** * Will get a codeblockwithcomments from the document with given tag. If the codeblock * doesn't exist, then it will create it at the end of the document textBlock * list and pass back a reference. * @param tag tag to find the text block * @param comment comment * @param indentLevel indentation level * @return CodeBlockWithComments object */

user 4 get a codeblockwithcomments from the document with given tag.

user 5 get a codeblockwithcomments from the document with given tag.

user 3 Will get a codeblockwithcomments from the document with given tag.

user 6 get a codeblockwithcomments from the document with given tag.

user 8 Will get a codeblockwithcomments from the document with given tag.


id 576825

body /* Get the notification state of an item. */

user 4 Get the notification state of an item.

user 3 Get the notification state of an item.

user 5 Get the notification state of an item.

user 6 Get the notification state of an item.

user 8 Get the notification state of an item.


id 1697506

body /* ** Resolve names in the SELECT statement p and all of its descendants. */

user 4 Resolve names in the SELECT statement p and all of its descendants.

user 5 Resolve names in the SELECT statement p and all of its descendants.

user 3 Resolve names in the SELECT statement p and all of its descendants.

user 6 Resolve names in the SELECT statement p and all of its descendants.

user 8 Resolve names in the SELECT statement p and all of its descendants.


id 2875094

body /* Simple constraints */

user 4

user 5

user 3

user 8

user 6


id 2833144

body /* * return the minimum frame numbers from resampling between BT stack's rate * and audio flinger's. For output stream, 'output' shall be true, otherwise * false for input streams at audio flinger side. */

user 4 return the minimum frame numbers from resampling between BT stack's rate and

user 5 return the minimum frame numbers from resampling

user 6 return the minimum frame numbers from resampling between BT stack's rate and

user 3 return the minimum frame numbers from resampling between BT stack's rate and

user 8 audio flinger's.


id 1846737

body /** Test if the \c ibuf has reaced end of file. */

user 3 Test if the \c ibuf has reaced end of file.

user 4 Test if the \c ibuf has reaced end of file.

user 5 Test if the \c ibuf has reaced end of file.

user 6 Test if the \c ibuf has reaced end of file.

user 8 Test if the \c ibuf has reaced end of file.


id 1697761

body /* ** Append a new element to the given IdList. Create a new IdList if ** need be. ** ** A new IdList is returned, or NULL if malloc() fails. */

user 4 Append a new element to the given IdList. Create a new IdList

user 3 Append a new element to the given IdList.

user 5 Append a new element to the given IdList.

user 8 if need be.

user 6 Append a new element to the given IdList.


id 2650531

body /* ================ Sys_ConsoleInput Checks for a complete line of text typed in at the console. Return NULL if a complete line is not ready. ================ */

user 4 Checks for a complete line of text typed in at the console.

user 6 Checks for a complete line of text typed in at the console.

user 5 Checks for a complete line of text typed in at the console.

user 3 Checks for a complete line of text typed in at the console.

user 8 Checks for a complete line of text typed in at the console.


id 1631034

body /** * Copy member variables to specified object. Mutex lock object is * not copied. * \param ctlFrom Object to copy from. * \param ctlTo Destination object. */

user 4 Copy member variables to specified object.

user 3 Copy member variables to specified object.

user 5 Copy member variables to specified object.

user 6 Copy member variables to specified object.

user 8 Copy member variables to specified object. Mutex lock object is not copied.


id 1062187

body /* * Display equipment */

user 4 Display equipment

user 5 Display equipment

user 3 Display equipment

user 6 Display equipment

user 8 Display equipment


id 1496820

body /* static */ void

user 4

user 5

user 3

user 6

user 8


id 2533165

body /* Centre all the lines in the lyrics. */

user 4 Centre all the lines in the lyrics.

user 5 Centre all the lines in the lyrics.

user 6 Centre all the lines in the lyrics.

user 3 Centre all the lines in the lyrics.

user 8 Centre all the lines in the lyrics.


id 370881

body /* * scamper_do_sting_alloctask * */

user 4

user 5

user 3

user 6

user 8


id 5615252

body /* Get the command name of a command ID number. */

user 4 Get the command name of a command ID number.

user 5

user 3 Get the command name of a command ID number.

user 6 Get the command name of a command ID number.

user 8 Get the command name of a command ID number.


id 2592205

body /** * wpas_dbus_signal_interface_added - Send a interface created signal * @wpa_s: %wpa_supplicant network interface data * * Notify listeners about creating new interface */

user 4 Notify listeners about creating new interface

user 3 Send a interface created signal

user 5 Send a interface created signal

user 6 Notify listeners about creating new interface

user 8 Send a interface created signal


id 6304782

body /* * bmstrcasestr() -- case-insensitive substring search * * This uses the Boyer-Moore search algorithm and is therefore quite fast. * The code is roughly based on the strstr() replacement from 'tin' written * by Urs Jannsen. */

user 4 case-insensitive substring search This uses the Boyer-Moore search algorithm

user 5 case-insensitive substring search

user 3 case-insensitive substring search

user 6 case-insensitive substring search

user 8 case-insensitive substring search


id 2743718

body /* Tail linkers and crawler for the LRU crawler. */

user 4 Tail linkers and crawler for the LRU crawler.

user 5 Tail linkers and crawler for the LRU crawler.

user 6

user 3

user 8 Tail linkers and crawler for the LRU crawler.


id 2160142

body /** Removes the given sample from the "active_samples" linked list * \param previous either NULL (if \c to_remove is the first item in the * list) or the item occurring just before \c to_remove in * the list * \param to_remove the item to actually remove from the list */

user 4 Removes the given sample from the "active_samples" linked list

user 6 Removes the given sample from the "active_samples" linked list

user 5 Removes the given sample from the "active_samples" linked list

user 3 Removes the given sample from the "active_samples" linked list

user 8 or the item occurring just before \c to_remove in the list


id 4402344

body /** * nfct_filter_detach - detach an existing filter * \param fd socket descriptor * * This function returns -1 on error and set errno appropriately. */

user 4 detach an existing filter

user 3 detach an existing filter

user 5 This function returns -1 on error and set errno appropriately.

user 6 detach an existing filter

user 8 detach an existing filter


id 2576903

body /** * Copy memory area * * @v dest	Destination address * @v src	Source address * @v len	Length * @ret dest	Destination address */

user 4 Copy memory area

user 5 Copy memory area

user 3 Copy memory area

user 6 Copy memory area

user 8 Copy memory area


id 4127180

body /*** * Callback for "full screen"/"windowed" check button * **/

user 2

user 4 Callback for "full screen"/"windowed" check button

user 3

user 5 Callback for "full screen"/"windowed" check button

user 6

user 8 Callback for "full screen"/"windowed" check button


id 5847593

body /* Insert a single faulty address in the pattern array. * Return 1 only if the array was changed. */

user 4 Insert a single faulty address in the pattern array.

user 5 Insert a single faulty address in the pattern array.

user 6 Insert a single faulty address in the pattern array.

user 3 Insert a single faulty address in the pattern array.

user 8 Insert a single faulty address in the pattern array.


id 4606528

body /** Enable/disable automatic IQ balance. */

user 4 Enable/disable automatic IQ balance.

user 5 Enable/disable automatic IQ balance.

user 3 Enable/disable automatic IQ balance.

user 6 Enable/disable automatic IQ balance.

user 8 Enable/disable automatic IQ balance.


id 3502162

body /**************************************************************************** REMARKS: Handles any pending asychronous interrupts. ****************************************************************************/

user 4 Handles any pending asychronous interrupts.

user 5 Handles any pending asychronous interrupts.

user 3 Handles any pending asychronous interrupts.

user 6 Handles any pending asychronous interrupts.

user 8 Handles any pending asychronous interrupts.


id 5081621

body /* LATER use hammer replacements */

user 4

user 5

user 3

user 8

user 6


id 1813695

body /* Initialize state for writing a gzip file. Mark initialization by setting state->size to non-zero. Return -1 on failure or 0 on success. */

user 4 Initialize state for writing a gzip file.

user 5 Initialize state for writing a gzip file.

user 6 Initialize state for writing a gzip file.

user 3 Initialize state for writing a gzip file.

user 8 Initialize state for writing a gzip file.


id 1677945

body /* ** Return the index in pList of the identifier named zId. Return -1 ** if not found. */

user 4 Return the index in pList of the identifier named zId.

user 5 Return the index in pList of the identifier named zId.

user 3 Return the index in pList of the identifier named zId.

user 6 Return the index in pList of the identifier named zId.

user 8 Return the index in pList of the identifier named zId.


id 2287395

body /** * An equality function which only considers parameters. * * This function compares: * * * {@link AbstractFieldDetails.parameters} * * And does not compare: * * * {@link AbstractFieldDetails.value}s * * {@link AbstractFieldDetails.id}s * * @param that another {@link AbstractFieldDetails} * * @return whether the elements' {@link AbstractFieldDetails.value}s are * equal. * * @see AbstractFieldDetails.equal * @see AbstractFieldDetails.values_equal * @since 0.6.5 */

user 4 This function compares: {@link AbstractFieldDetails.parameters}

user 5

user 3 An equality function which only considers parameters.

user 6 This function compares: {@link AbstractFieldDetails.parameters}

user 8 An equality function which only considers parameters.


id 3220936

body /* Remove stream from processing queue */

user 4

user 5 Remove stream from processing queue

user 3 Remove stream from processing queue

user 6 Remove stream from processing queue

user 8 Remove stream from processing queue


id 4169750

body /* * Figure out the rc file's path name. * Caller must free the allocated filename. */

user 4 Figure out the rc file's path name.

user 6 Figure out the rc file's path name.

user 5 Figure out the rc file's path name.

user 3 Figure out the rc file's path name.

user 8 Figure out the rc file's path name.


id 1136775

body /* Match the "system" value against each possibility and convert to a string pointer. (Where possible, return the same string as would be used in the FITS WCS representation of the coordinate system). A CmpFrame only allows a single System value, "Compound". */

user 4 Match the "system" value against each possibility and convert to a string

user 5 Match the "system" value against each possibility and convert to a string

user 3 Match the "system" value against each possibility and convert to a string

user 6 Match the "system" value against each possibility and convert to a string

user 8 pointer.


id 1062063

body /* * Regenerate mana points */

user 4 Regenerate mana points

user 5 Regenerate mana points

user 3 Regenerate mana points

user 6

user 8 Regenerate mana points


id 1000808

body /** * Execute an external program * * @param self IN command object * @param worker IN thread data object * @param data IN external program call with arguments * * @return an apr status */

user 4 Execute an external program

user 5 Execute an external program

user 6 Execute an external program

user 3 Execute an external program

user 8 Execute an external program


id 1972467

body /* This should generate a single rl[w]imi. */

user 4

user 5 generate a single rl[w]imi.

user 3

user 8 This should generate a single rl[w]imi.

user 6 This should generate a single rl[w]imi.


id 5049499

body /* * check for new devices * args: * vd - pointer to v4l2 device handler * * asserts: * my_device_list.udev is not null * my_device_list.udev_fd is valid (> 0) * my_device_list.udev_mon is not null * * returns: true(1) if device list was updated, false(0) otherwise */

user 4 check for new devices

user 3 check for new devices

user 5 check for new devices

user 6 check for new devices

user 8 check for new devices


id 2752878

body /* Launch all workers on the mic */

user 4 Launch all workers on the mic

user 5 Launch all workers on the mic

user 3 Launch all workers on the mic

user 6 Launch all workers on the mic

user 8


id 6507316

body /** * net32_put(net, val) - store to a network-order 32-bit field. * * @param net pointer to a net32_t, network-order 32-bit data. * @param val host-order value to be stored at net. */

user 4 store to a network-order 32-bit field.

user 5 store to a network-order 32-bit field.

user 3 store to a network-order 32-bit field.

user 6 store to a network-order 32-bit field.

user 8 store to a network-order 32-bit field.


id 843464

body /* result = s + d * sia dest = (s + d * sia) * ca + d * cia = s * ca + d * (sia * ca + cia) = s * ca + d * (1 - sa*ca) */

user 4

user 5

user 6

user 3

user 8


id 301793

body /* ** Advance the snippet iterator to the next candidate snippet. */

user 4 Advance the snippet iterator to the next candidate snippet.

user 3 Advance the snippet iterator to the next candidate snippet.

user 5 Advance the snippet iterator to the next candidate snippet.

user 6 Advance the snippet iterator to the next candidate snippet.

user 8 Advance the snippet iterator to the next candidate snippet.


id 847979

body /*! Clears the current selection by setting the anchor to the cursor position. Note that it does \bold{not} delete the text of the selection. \sa removeSelectedText() hasSelection() */

user 4 Clears the current selection by setting the anchor to the cursor position.

user 5 Clears the current selection by setting the anchor to the cursor position.

user 3 Clears the current selection by setting the anchor to the cursor position.

user 8 Clears the current selection by setting the anchor to the cursor position.

user 6 Clears the current selection


id 375218

body /* * get int32 property values for word32 of array */

user 4 get int32 property values for word32 of array

user 5 get int32 property values for word32 of array

user 6 get int32 property values for word32 of array

user 3 get int32 property values for word32 of array

user 8 get int32 property values for word32 of array


id 6208781

body /** \ingroup libusb_dev * Detach a kernel driver from an interface. If successful, you will then be * able to claim the interface and perform I/O. * * This functionality is not available on Darwin or Windows. * * Note that libusb itself also talks to the device through a special kernel * driver, if this driver is already attached to the device, this call will * not detach it and return LIBUSB_ERROR_NOT_FOUND. * * \param dev_handle a device handle * \param interface_number the interface to detach the driver from * \returns 0 on success * \returns LIBUSB_ERROR_NOT_FOUND if no kernel driver was active * \returns LIBUSB_ERROR_INVALID_PARAM if the interface does not exist * \returns LIBUSB_ERROR_NO_DEVICE if the device has been disconnected * \returns LIBUSB_ERROR_NOT_SUPPORTED on platforms where the functionality * is not available * \returns another LIBUSB_ERROR code on other failure * \see libusb_kernel_driver_active() */

user 4 Detach a kernel driver from an interface.

user 5 Detach a kernel driver from an interface.

user 3 Detach a kernel driver from an interface.

user 8 Detach a kernel driver from an interface.

user 6 Detach a kernel driver from an interface.


id 3697863

body /* Decodes using a decodestream. Decodes as far as it can with the input * buffers, or until a stopper is reached. */

user 4 Decodes using a decodestream.

user 3 Decodes using a decodestream.

user 5 Decodes using a decodestream.

user 6 Decodes as far as it can with the input buffers,

user 8 Decodes using a decodestream.


id 1182418

body /* * Returns: * 1 if the body part should be filtered by a mailcap entry prior to viewing inline. * * 0 otherwise */

user 4

user 5 if the body part should be filtered by a mailcap entry

user 3

user 6 Returns: 1 if the body part should be filtered by a mailcap

user 8


id 4259732

body /*! \qmlmethod void QtQuick.Controls::ScrollBar::increase() Increases the position by \l stepSize or \c 0.1 if stepSize is \c 0.0. \sa stepSize */

user 3 Increases the position by \l stepSize or \c 0.1 if stepSize is

user 4 Increases the position by \l stepSize or \c 0.1 if stepSize is

user 5 Increases the position by \l stepSize

user 6 Increases the position by \l stepSize

user 8 \c 0.0.


id 648425

body /* ##compiler#collect! in k6115 in k6112 in k4861 in k4827 in k4824 in k4821 */

user 4

user 5

user 3

user 6

user 8


id 2155437

body /** \ingroup context * This command returns the value of the string constant identified by * \e inAttrib. String constants must be chosen in the table below : * <center> * <table> * <caption>String constants</caption> * <tr> * <td>Name</td> <td>Enumerant</td> * </tr> * <tr> * <td><b>GLC_EXTENSIONS</b></td> <td>0x00B0</td> * </tr> * <tr> * <td><b>GLC_RELEASE</b></td> <td>0x00B1</td> * </tr> * <tr> * <td><b>GLC_VENDOR</b></td> <td>0x00B2</td> * </tr> * </table> * </center> * \param inAttrib The attribute that identifies the string constant * \return The string constant. * \sa glcGetf() * \sa glcGeti() * \sa glcGetfv() * \sa glcGetPointer() */

user 3 returns the value of the string constant

user 4 returns the value of the string constant identified by \e inAttrib.

user 5 returns the value of the string constant identified by \e inAttrib.

user 6 returns the value of the string constant identified by \e inAttrib.

user 8 returns the value of the string constant identified by \e inAttrib.


id 1490522

body /** * Add an event source for a file descriptor. * * @param pollfd The GPollFD. * @param[in] timeout Max time to wait before the callback is called, * ignored if 0. * @param cb Callback function to add. Must not be NULL. * @param cb_data Data for the callback function. Can be NULL. * @param poll_object TODO. * * @retval SR_OK Success. * @retval SR_ERR_ARG Invalid argument. * @retval SR_ERR_MALLOC Memory allocation error. */

user 4 Add an event source for a file descriptor.

user 5 Add an event source for a file descriptor.

user 3 Add an event source for a file descriptor.

user 6 Add an event source for a file descriptor.

user 8 Add an event source for a file descriptor.


id 4844382

body /** * Function close_st * is a local method of qualifying if either the start of end point of a segment is closest to a point. * * @param aReference is the reference point * @param aFirst is the first point * @param aSecond is the second point * @return bool - true if the the first point is closest to the reference, otherwise false. */

user 4 qualifying if either the start of end point of a segment is

user 3 segment is closest to a point.

user 5 true if the the first point is closest to the reference,

user 6 method of qualifying if either the start of end point of a

user 8 closest to a point.


id 2609159

body /* Read an isl_schedule from "input". */

user 4 Read an isl_schedule from "input".

user 5 Read an isl_schedule from "input".

user 6 Read an isl_schedule from "input".

user 3 Read an isl_schedule from "input".

user 8 Read an isl_schedule from "input".


id 3986815

body /* -- output the tune heading -- */

user 4 output the tune heading

user 5 output the tune heading

user 3 output the tune heading

user 6 output the tune heading

user 8 output the tune heading


id 4674434

body /* -------------------------------------------------- NAME argv_to_host_num FUNCTION conver the argument(name or number) to host number INPUT arg ... argument OUTPUT host number -------------------------------------------------- */

user 4 conver the argument(name or number) to host number

user 3 conver the argument(name or number) to host number

user 5 conver the argument(name or number) to host number

user 6 conver the argument(name or number) to host number

user 8 conver the argument(name or number) to host number


id 6056640

body /* Get an array of double values */

user 4 Get an array of double values

user 3 Get an array of double values

user 5 Get an array of double values

user 6 Get an array of double values

user 8 Get an array of double values


id 6478850

body /** * If a deoptimization happens, this function returns the point of next bytecode to continue execution. */

user 3 returns the point of next bytecode

user 4 returns the point of next bytecode to continue execution.

user 5 returns the point of next bytecode to continue execution.

user 8 returns the point of next bytecode to continue execution.

user 6 this function returns the point of next bytecode to continue execution.


id 1021011

body /* ** This routine generates code that will initialize all of the ** register used by the autoincrement tracker. */

user 3 generates code that will initialize all of the register used by the

user 4 initialize all of the register used by the autoincrement tracker.

user 5 initialize all of the register used by the autoincrement tracker.

user 6 generates code that will initialize all of the register used by the

user 8 by the autoincrement tracker.


id 3824647

body /* ** Load the next leaf page into the segment iterator. */

user 4 Load the next leaf page into the segment iterator.

user 5 Load the next leaf page into the segment iterator.

user 3 Load the next leaf page into the segment iterator.

user 6 Load the next leaf page into the segment iterator.

user 8 Load the next leaf page into the segment iterator.


id 43325

body /* This module callback is called when module is being unloaded by * endpoint. */

user 4 callback is called when module is being unloaded by endpoint.

user 5

user 6

user 3 This module callback is called when module is being unloaded by endpoint.

user 8 called when module is being unloaded by endpoint.


id 3029858

body /* ================ Sys_DoubleTime ================ */

user 4

user 5

user 6

user 3

user 8


id 3843310

body /* Adjust all the integer divisions in "qp" such that they are at least * one over the given orthant (identified by "signs"). This ensures * that they will still be non-negative even after subtracting (m-1)/m. * * In particular, f is replaced by f' + v, changing f = [a/m] * to f' = [(a - m v)/m]. * If the constant term k in a is smaller than m, * the constant term of v is set to floor(k/m) - 1. * For any other term, if the coefficient c and the variable x have * the same sign, then no changes are needed. * Otherwise, if the variable is positive (and c is negative), * then the coefficient of x in v is set to floor(c/m). * If the variable is negative (and c is positive), * then the coefficient of x in v is set to ceil(c/m). */

user 4 Adjust all the integer divisions in "qp"

user 3 Adjust all the integer divisions in "qp" such that they are at

user 5 Adjust all the integer divisions in "qp"

user 6 Adjust all the integer divisions in "qp"

user 8 least one over the given orthant (identified by "signs").


id 6599523

body /** * \brief Init html response body parser * * \param msr ModSecurity transaction resource * * \retval 1 on success * \retval -1 on fail */

user 4 Init html response body parser

user 3 Init html response body parser

user 5 Init html response body parser

user 6 Init html response body parser

user 8 Init html response body parser


id 2249411

body /* solution for the primary matrix (a) */

user 4 solution for the primary matrix (a)

user 3

user 5 solution for the primary matrix

user 8 solution for the primary matrix (a)

user 6


id 1291499

body /* ** Run a checkpoint on database iDb. This is a no-op if database iDb is ** not currently open in WAL mode. ** ** If a transaction is open on the database being checkpointed, this ** function returns SQLITE_LOCKED and a checkpoint is not attempted. If ** an error occurs while running the checkpoint, an SQLite error code is ** returned (i.e. SQLITE_IOERR). Otherwise, SQLITE_OK. ** ** The mutex on database handle db should be held by the caller. The mutex ** associated with the specific b-tree being checkpointed is taken by ** this function while the checkpoint is running. ** ** If iDb is passed SQLITE_MAX_ATTACHED, then all attached databases are ** checkpointed. If an error is encountered it is returned immediately - ** no attempt is made to checkpoint any remaining databases. ** ** Parameter eMode is one of SQLITE_CHECKPOINT_PASSIVE, FULL or RESTART. */

user 4 Run a checkpoint on database iDb.

user 3 Run a checkpoint on database iDb.

user 5 Run a checkpoint on database iDb.

user 6 Run a checkpoint on database iDb.

user 8 iDb is not currently open in WAL mode.


id 5938410

body /* Count lines that start with some hard tabs then a soft tab. */

user 4 Count lines that start with some hard tabs then a soft tab.

user 3 Count lines that start with some hard tabs then a soft tab.

user 5 Count lines that start with some hard tabs then a soft tab.

user 6 Count lines that start with some hard tabs then a soft tab.

user 8 Count lines that start with some hard tabs then a soft tab.


id 3881020

body /* ** Write a nice string representation of the contents of cell pMem ** into buffer zBuf, length nBuf. */

user 4 Write a nice string representation of the contents of cell pMem into

user 5 Write a nice string representation of the contents of cell pMem

user 6 Write a nice string representation of the contents of cell pMem into

user 3 Write a nice string representation of the contents of cell pMem

user 8 buffer zBuf, length nBuf.


id 2203948

body /********************************************************************** * AVCE00ParseSuperSectionEnd() * * Check if pszLine marks the end of a supersection, and if it is the * case, then reset the supersection flag in the ParseInfo. * * Supersections always end with the line "JABBERWOCKY", except for * the IFO section. **********************************************************************/

user 4 Check if pszLine marks the end of a supersection,

user 5 Check if pszLine marks the end of a supersection,

user 3 Check if pszLine marks the end of a supersection, and if it

user 6 Check if pszLine marks the end of a supersection,

user 8 Check if pszLine marks the end of a supersection,


id 3696425

body /* Stores an bigint in a bigint result body, either as a 32-bit smallint if it * is in range, or a big integer if not. Clears and frees the passed bigint if * it is not being used. */

user 4 Stores an bigint in a bigint result body, either as a 32-bit

user 6 Stores an bigint in a bigint result body,

user 5 Stores an bigint in a bigint result body,

user 3 Stores an bigint in a bigint result body,

user 8 smallint if it is in range, or a big integer if not.


id 4880527

body /* Powerup or reset button */

user 4 Powerup or reset button

user 6

user 5

user 3

user 8 Powerup or reset button


id 807257

body /** * Add menu items to the "Recent files" submenu. */

user 4 Add menu items to the "Recent files" submenu.

user 5 Add menu items to the "Recent files" submenu.

user 3 Add menu items to the "Recent files" submenu.

user 6 Add menu items to the "Recent files" submenu.

user 8 Add menu items to the "Recent files" submenu.


id 5325530

body /*********************************************************************** *	Ctl3dUnAutoSubclass (CTL3DV2.24) */

user 4

user 7 Ctl3dUnAutoSubclass

user 5

user 3

user 8

user 6


id 5857554

body /* As suggested in the header file, this function (for pipecmd_new_argstr() * and pipecmd_argstr()) is really a wart. If we didn't have to worry about * old configuration files then it wouldn't be necessary. Worse, the * definition for tr in man_db.conf currently contains single-quoting, and * people probably took that as a licence to do similar things, so we're * obliged to worry about quoting as well! * * However, we can mitigate this; shell quoting alone is safe though * sometimes confusing, but it's other shell constructs that tend to cause * real security holes. Therefore, rather than punting to 'sh -c' or * whatever, we parse a safe subset manually. Environment variables are not * currently handled because of tricky word splitting issues, but in * principle they could be if there's demand for it. * * TODO: Support setting environment variables. */

user 4

user 5

user 3

user 6

user 8


id 5751445

body /* * Compute a SID to use for labeling a new object in the * class `tclass' based on a SID pair. */

user 4 Compute a SID to use for labeling a new object in the

user 6 Compute a SID

user 3 Compute a SID to use for labeling a new object

user 5 Compute a SID to use for labeling a new object

user 8 class `tclass' based on a SID pair.


id 6053778

body /* Append GSSAPI error(s) for STATUS of type TYPE to BUF; prepending * ": " to each error if *FLAG is non-zero, setting *FLAG after an * error has been appended. */

user 4 Append GSSAPI error(s) for STATUS of type TYPE to BUF;

user 3 Append GSSAPI error(s) for STATUS of type TYPE to BUF;

user 5

user 6 Append GSSAPI error(s) for STATUS of type TYPE to BUF;

user 8 error has been appended.


id 2260190

body /*! \brief Enable or disable printing of the filename while logging * \param[in] target Log target to be affected * \param[in] print_filename Enable (1) or disable (0) filenames */

user 4 Enable or disable printing of the filename while logging

user 3 Enable or disable printing of the filename while logging

user 5 Enable or disable printing of the filename while logging

user 6 Enable or disable printing of the filename while logging

user 8 Enable or disable printing of the filename while logging


id 5216605

body /* Makes a copy of the current pose for restoration purposes - doesn't do constraints currently */

user 4 Makes a copy of the current pose for restoration purposes

user 5 Makes a copy of the current pose for restoration purposes

user 3 Makes a copy of the current pose for restoration purposes

user 8 Makes a copy of the current pose for restoration purposes

user 6 Makes a copy of the current pose for restoration purposes


id 5271898

body /* here we shuffle N bits out/in */

user 4 shuffle N bits out/in

user 5 shuffle N bits out/in

user 3 here we shuffle N bits out/in

user 6 shuffle N bits out/in

user 8 shuffle N bits out/in


id 1696203

body /* ** Free a dynamic mutex. */

user 4 Free a dynamic mutex.

user 5 Free a dynamic mutex.

user 3 Free a dynamic mutex.

user 6 Free a dynamic mutex.

user 8 Free a dynamic mutex.


id 1430803

body /* =========================================================================== * Cleanup then free the given cc_gzm_stream. Return a zlib error code. Try freeing in the reverse order of allocations. */

user 4 Cleanup

user 5 Cleanup then free the given cc_gzm_stream.

user 3 Cleanup then free the given cc_gzm_stream.

user 6 Cleanup then free the given cc_gzm_stream.

user 8 Cleanup then free the given cc_gzm_stream.


id 4407595

body /* ** Open a new Fts5Index handle. If the bCreate argument is true, create ** and initialize the underlying tables ** ** If successful, set *pp to point to the new object and return SQLITE_OK. ** Otherwise, set *pp to NULL and return an SQLite error code. */

user 4 Open a new Fts5Index handle.

user 5 Open a new Fts5Index handle.

user 3 Open a new Fts5Index handle.

user 6 Open a new Fts5Index handle.

user 8 Open a new Fts5Index handle.


id 5564883

body /** * Convert the kanji data to a bit stream. * @param entry * @param mqr * @retval 0 success * @retval -1 an error occurred and errno is set to indeicate the error. * See Execptions for the details. * @throw ENOMEM unable to allocate memory. * @throw EINVAL invalid version. */

user 4 Convert the kanji data to a bit stream.

user 5 Convert the kanji data to a bit stream.

user 3 Convert the kanji data to a bit stream.

user 6 Convert the kanji data to a bit stream.

user 8 Convert the kanji data to a bit stream.


id 3734848

body /* ffiLongLongResultLow: Return the low 32bit from the 64bit result of a call to an external function */

user 4 Return the low 32bit from the 64bit result of a call

user 5 Return the low 32bit from the 64bit result

user 6 Return the low 32bit from the 64bit result

user 3 Return the low 32bit from the 64bit result

user 8 an external function


id 5663624

body /* Solve for Bragg omega for the given k and other parameters, using omega_guess as a starting guess. We can't do anything clever like Newton's method or even an ordinary bisection search because there are regions of omega in which analytic_bragg_k is not defined (i.e. in the band gap). */

user 4 Solve for Bragg omega

user 3 Solve for Bragg omega for the given k and other parameters,

user 5 Solve for Bragg omega for the given k and other parameters,

user 8 omega_guess as a starting guess.

user 6 Solve for Bragg omega for the given k and other parameters,


id 5675417

body /** * Test a DataSource implementation against the expectations of the interface * * It is run as part of the test suite but can be used to check arbitrary * media engines as well: * * rygel-media-engine-test /path/to/my/first/custom-rygel-engine.so \ * /path/to/my/second/custom-rygel-engine.so ... */

user 4 Test a DataSource implementation against the expectations of the interface

user 3 Test a DataSource implementation against the expectations of the interface

user 5

user 6 Test a DataSource implementation against the expectations of the interface

user 8 Test a DataSource implementation against the expectations of the interface


id 5935928

body /** * Perform basic validation on the contents of the target-status file * (typically /var/run/cmstatus). * * @return zero if the file is known to be damaged. */

user 4 Perform basic validation on the contents of the target-status file

user 5 Perform basic validation on the contents of the target-status file

user 3 Perform basic validation on the contents of the target-status file

user 6 basic validation on the contents of the target-status file

user 8 Perform basic validation on the contents of the target-status file


id 3580134

body /* * Load an image from the named file. Return an OpenGL texture object. */

user 4 Load an image from the named file.

user 3 Load an image from the named file.

user 5 Load an image from the named file. Return an OpenGL texture object.

user 6 Load an image from the named file.

user 8 Load an image from the named file.


id 6547806

body /******************************************************* * csv_import_trans_auto_cb * * call back for auto create account / Skip Errors *******************************************************/

user 4 call back for auto create account

user 5

user 6

user 3

user 8 call back for auto create account / Skip Errors


id 2769562

body /* callback generally attached to the entry_notify_event */

user 4

user 5

user 3

user 6

user 8 callback generally attached to the entry_notify_event


id 4638927

body /* ** Add a page of the database file to the freelist. Either pgno or ** pPage but not both may be 0. ** ** sqlitepager_unref() is NOT called for pPage. */

user 4 Add a page of the database file to the freelist.

user 3 Add a page of the database file to the freelist.

user 5 Add a page of the database file to the freelist.

user 6 Add a page of the database file to the freelist.

user 8 Add a page of the database file to the freelist.


id 1591206

body /** * Removes any outputs with devices that do not exist in the given * SoundManager. */

user 3 Removes any outputs with devices that do not exist

user 4 Removes any outputs with devices that do not exist in the given

user 5 Removes any outputs with devices that do not exist in the given

user 6 Removes any outputs with devices that do not exist in the given

user 8 SoundManager.


id 5569628

body /* add a line of source code to the linked list */

user 4 add a line of source code to the linked list

user 5 add a line of source code to the linked list

user 3 add a line of source code to the linked list

user 6 add a line of source code to the linked list

user 8 add a line of source code to the linked list


id 5311511

body /************************************************************************** * mmioRename [MMSYSTEM.1226] */

user 4

user 3

user 5

user 6

user 8


id 4302099

body /* * fmtname = <fqn> */

user 4

user 3

user 5

user 6

user 8


id 4791606

body /***************************************************************************** * TDL_UseSecDiff_Prim() -- * * Arthur Taylor / MDL * * PURPOSE * Checks if the average range of 2nd order differences < average range of * 0 order differences, to determine if we should use second order * differences. This deals with the case when we have primary missing values. * * ARGUMENTS * Data = The data. (Input) * numData = The number of elements in data. (Input) * SecDiff = The secondary differences of the data. (Input) * li_primMiss = Scaled primary missing value. (Input) * minGroup = The minimum group size. (Input) * * FILES/DATABASES: None * * RETURNS: int * 0 = Don't use 2nd order differences. * 1 = Use 2nd order differences. * * HISTORY * 12/2004 Arthur Taylor (MDL): Updated from "group.c" in "C" tdlpack code. * * NOTES ***************************************************************************** */

user 4 Checks if the average range of 2nd order differences < average range

user 5 average range of 2nd order differences < average range of 0 order

user 3 Checks if the average range of 2nd order differences < average range

user 6 Checks if the average range of 2nd order differences < average range

user 8 differences.


id 5219953

body /* get shot from frontbuffer */

user 3 get shot from frontbuffer

user 4 get shot from frontbuffer

user 7

user 5 get shot from frontbuffer

user 8 get shot from frontbuffer

user 6 get shot from frontbuffer


id 362341

body /* Write MD5 of 'len' bytes of 'str' to 'digest' */

user 4 Write MD5 of 'len' bytes of 'str' to 'digest'

user 6 Write MD5 of 'len' bytes of 'str' to 'digest'

user 5 Write MD5 of 'len' bytes of 'str' to 'digest'

user 3 Write MD5 of 'len' bytes of 'str' to 'digest'

user 8 Write MD5 of 'len' bytes of 'str' to 'digest'


id 6579051

body /* caller must free result, if not NULL */

user 4

user 6

user 5

user 3

user 8 caller must free result, if not NULL


id 1153307

body /* NOTE: even when _DIRENT_HAVE_D_TYPE is defined, d_type may still be returned as DT_UNKNOWN - in that case we must fall back to using stat instead. */

user 4

user 5

user 6

user 3

user 8


id 5810887

body /* This routine will be called by the PortAudio engine when audio is needed. ** It may called at interrupt level on some machines so don't do anything ** that could mess up the system like calling malloc() or free(). */

user 4

user 3

user 5

user 6

user 8 called by the PortAudio engine when audio is needed.


id 754239

body /* * Updates the supplied non-streaming voice. * buf - Returns a pointer to the buffer containing sample data. * bytes - The requested size of the sample data buffer. Returns the actual * size of returned the buffer. * Updates 'stop', 'pos' and 'reversed' fields of the supplied voice to the * future position. */

user 4 Updates the supplied non-streaming voice.

user 5

user 3 Updates the supplied non-streaming voice.

user 6 Returns a pointer to the buffer containing sample data.

user 8 Updates the supplied non-streaming voice.


id 6214766

body /** * \brief Initialize the use of the socket library. * \return true if the initialization is successful. */

user 4 Initialize the use of the socket library.

user 3 Initialize the use of the socket library.

user 5 Initialize the use of the socket library.

user 8 Initialize the use of the socket library.

user 6 Initialize the use of the socket library.


id 3595569

body /* Retrieves the binary data value * Returns 1 if successful or -1 on error */

user 4 Retrieves the binary data value

user 3 Retrieves the binary data value

user 5 Retrieves the binary data value

user 6 Retrieves the binary data value

user 8 Retrieves the binary data value


id 6031023

body /** * e1000_host_interface_command - Writes buffer to host interface * @hw: pointer to the HW structure * @buffer: contains a command to write * @length: the byte length of the buffer, must be multiple of 4 bytes * * Writes a buffer to the Host Interface. Upon success, returns E1000_SUCCESS * else returns E1000_ERR_HOST_INTERFACE_COMMAND. **/

user 3 Writes a buffer to the Host Interface.

user 4 Writes buffer to host interface

user 5 Writes buffer to host interface

user 6 Writes a buffer to the Host Interface.

user 8 Writes buffer to host interface


id 3765988

body /* Stat this item and add, update or remove it. * Returns the new/updated item, if any. * (leafname may be from the current DirItem item) * Ensure diritem_recent_time is reasonably up-to-date before calling this. */

user 4 Stat this item and add, update or remove it.

user 3 Stat this item and add, update or remove it.

user 5 Stat this item and add, update or remove it.

user 6 Stat this item and add, update or remove it.

user 8 Stat this item and add, update or remove it.


id 1449105

body /* Converts a floatingtime into date time values * Returns 1 if successful or -1 on error */

user 4 Converts a floatingtime into date time values

user 5 Converts a floatingtime into date time values

user 3 Converts a floatingtime into date time values

user 6 Converts a floatingtime into date time values

user 8 Converts a floatingtime into date time values


id 3342888

body /* * Ensure the direction of an argument is an input. */

user 4 Ensure the direction of an argument is an input.

user 7

user 5 Ensure the direction of an argument is an input.

user 6

user 3 Ensure the direction of an argument is an input.

user 8 Ensure the direction of an argument is an input.


id 1851246

body /****** write_xmlconfigparam ************************************************** PROTO	int write_xmlconfigparam(FILE *file, char *name, char *unit, char *ucd, char *format) PURPOSE	Write to a VO-table the configuration parameters. INPUT	Output stream (file) pointer, Name of the parameter keyword, unit, UCD string, printf() format to use in "value". OUTPUT	RETURN_OK if the keyword exists, RETURN_ERROR otherwise. NOTES	-. AUTHOR	E. Bertin (IAP) VERSION	27/04/2010 ***/

user 3 Write to a VO-table the configuration parameters.

user 4 Write to a VO-table the configuration parameters.

user 6 Write to a VO-table the configuration parameters.

user 5 Write to a VO-table the configuration parameters.

user 8 Write to a VO-table the configuration parameters.


id 3228663

body /* ** traverse one gray object, turning it to black (except for threads, ** which are always gray). */

user 4 traverse one gray object, turning it to black

user 5 traverse one gray object, turning it to black

user 6 traverse one gray object, turning it to black

user 3 traverse one gray object, turning it to black

user 8 traverse one gray object, turning it to black


id 6057735

body /*-<a href="qh-geom_r.htm#TOC" >-------------------------------</a><a name="voronoi_center">-</a> qh_voronoi_center(qh, dim, points ) return Voronoi center for a set of points dim is the orginal dimension of the points gh.gm_matrix/qh.gm_row are scratch buffers returns: center as a temporary point (qh_memalloc) if non-simplicial, returns center for max simplex of points notes: only called by qh_facetcenter from Bowyer & Woodwark, A Programmer's Geometry, 1983, p. 65 design: if non-simplicial determine max simplex for points translate point0 of simplex to origin compute sum of squares of diagonal compute determinate compute Voronoi center (see Bowyer & Woodwark) */

user 4 return Voronoi center for a set of points

user 5 compute Voronoi center

user 3 return Voronoi center for a set of points

user 8 dimension of the points

user 6 returns: center as a temporary point


id 1507638

body /* * sigwinch_handler() * * obs�uguje zmian� rozmiaru okna. */

user 4

user 5

user 3

user 6

user 8


id 1211193

body /*! * Sends a mouse wheel event to the QWaylandInputDevice's pointer device with the given \a orientation and \a delta. */

user 4 Sends a mouse wheel event to the QWaylandInputDevice's pointer device with the

user 3 Sends a mouse wheel event

user 6 Sends a mouse wheel event to the QWaylandInputDevice's pointer device

user 5 Sends a mouse wheel event to the QWaylandInputDevice's pointer device

user 8 Sends a mouse wheel event to the QWaylandInputDevice's pointer device


id 4100698

body /* ** Check the given SQL to see if is a valid query that does not ** attempt to do anything dangerous. Return 0 on success and a ** pointer to an error message string (obtained from malloc) if ** there is a problem. */

user 4 Check the given SQL

user 5 Check the given SQL to see if is a valid query

user 3 Check the given SQL to see if is a valid query

user 6 Check the given SQL to see if is a valid query

user 8 does not attempt to do anything dangerous.


id 3809865

body /* this one reads (length) characters strating at (char *from), converts them to int and inserts them into field (*entry) as integer. f.e: 0x56 == (int)86 => writes into (*entry) 86 note that max size for length is 10!!! when calling this routine */

user 4 this one reads (length) characters strating at (char from), converts them to

user 5 reads (length) characters strating at (char from), converts them to int

user 3 reads (length) characters strating at (char from),

user 6 reads (length) characters strating at (char from), converts them to int and

user 8 inserts them into field (entry) as integer.


id 39907

body /* * Resolver calback during send_response. */

user 4 Resolver calback during send_response.

user 5 Resolver calback during send_response.

user 3

user 6

user 8 Resolver calback during send_response.


id 4149915

body /* * Locate a device name from a token (NAME=value string), or (name, value) * pair. In the case of a token, value is ignored. If the "token" is not * of the form "NAME=value" and there is no value given, then it is assumed * to be the actual devname and a copy is returned. */

user 4 Locate a device name from a token (NAME=value string), or (name, value)

user 5 Locate a device name from a token

user 3 Locate a device name from a token

user 6 Locate a device name from a token (NAME=value string), or (name, value)

user 8 pair.


id 4501760

body /* Frees a table * Returns 1 if successful or -1 on error */

user 4 Frees a table

user 5 Frees a table

user 3 Frees a table

user 6 Frees a table

user 8 Frees a table


id 6205855

body /* * Reads an existing binary book from f. The header must * already be skipped, when you call this function. The * variable digest_bits must be set to the correct value * before calling this function. If any book was allocated * before, it will be lost. */

user 4 Reads an existing binary book from f. The header must already be

user 5 Reads an existing binary book

user 3 Reads an existing binary book from f.

user 6 Reads an existing binary book from f.

user 8 Reads an existing binary book from f.


id 1697888

body /* ** This routine generates code that will initialize all of the ** register used by the autoincrement tracker. */

user 4 initialize all of the register used by the autoincrement tracker.

user 6 initialize all of the register used by the autoincrement tracker.

user 5 initialize all of the register used by the autoincrement tracker.

user 3 This routine generates code that will initialize all of the register used

user 8 autoincrement tracker.


id 2185098

body /* {{{ php_ssh2_scp_xfer * Make a stream from a session */

user 4 Make a stream from a session

user 6 Make a stream from a session

user 5 Make a stream from a session

user 3 Make a stream from a session

user 8 Make a stream from a session


id 4818102

body /* set environment device to boot device when booting from SD */

user 4 set environment device to boot device when booting from SD

user 5 set environment device to boot device when booting from SD

user 6 set environment device to boot device when booting from SD

user 3 set environment device to boot device when booting from SD

user 8


id 4104699

body /* ** Fill the InitData structure with an error message that indicates ** that the database is corrupt. */

user 3 Fill the InitData structure with an error message that indicates that the

user 4 Fill the InitData structure with an error message that indicates that the

user 5 Fill the InitData structure with an error message

user 8 database is corrupt.

user 6 Fill the InitData structure with an error message


id 2999110

body /* Release all defmaps referenced from map. */

user 4 Release all defmaps referenced from map.

user 5 Release all defmaps referenced from map.

user 6 Release all defmaps referenced from map.

user 3 Release all defmaps referenced from map.

user 8 Release all defmaps referenced from map.


id 5019432

body /* Read-in a filter * Filter file format: * file name: "F" Nmult "T" Nhc ".filter" * 1st line: the string "ScaleFactor" followed by its value. * 2nd line: the string "Length" followed by Nwing's value. * 3rd line: the string "Coeffs:" on separate line. * Nwing number of 16-bit impulse response values in the right * wing of the impulse response. (Length=Npc*(Nmult+1)/2+1, * where originally Npc=2^9, and Nmult=13.) Each on separate line. * The string "Differences:" on separate line. * Nwing number of 16-bit impulse-response successive differences: * ImpDiff[i] = Imp[i+1] - Imp[i]. * * ERROR return codes: * 0 - no error * 1 - file not found * 2 - invalid ScaleFactor in file * 3 - invalid Length in file * 4 - invalid Nmult in file */

user 4 Read-in a filter

user 3 Read-in a filter

user 5 Read-in a filter

user 6 Read-in a filter

user 8 Read-in a filter


id 4701135

body /* ** The following routine destroys a virtual machine that is created by ** the sqlite3_compile() routine. The integer returned is an SQLITE_ ** success/failure code that describes the result of executing the virtual ** machine. ** ** This routine sets the error code and string returned by ** sqlite3_errcode(), sqlite3_errmsg() and sqlite3_errmsg16(). */

user 4 destroys a virtual machine that is created by the sqlite3_compile() routine.

user 5 destroys a virtual machine that is created by the sqlite3_compile() routine.

user 6 destroys a virtual machine that is created by the sqlite3_compile() routine.

user 3 The following routine destroys a virtual machine

user 8 destroys a virtual machine that is created by the sqlite3_compile() routine.


id 4599285

body /* returns the logarithm of a Poisson distribution (calculations based on Stirling's formula) */

user 4 returns the logarithm of a Poisson distribution (calculations based on Stirling's

user 3 returns the logarithm of a Poisson distribution

user 5 returns the logarithm of a Poisson distribution

user 8 returns the logarithm of a Poisson distribution

user 6 returns the logarithm of a Poisson distribution


id 3139712

body /****************************************************************************** * Edit the currently selected resource. */

user 4 Edit the currently selected resource.

user 5 Edit the currently selected resource.

user 3 Edit the currently selected resource.

user 6 Edit the currently selected resource.

user 8 Edit the currently selected resource.


id 5354964

body /************************************************************************ * VarR8FromUI4 (OLEAUT32.219) * * Convert a VT_UI4 to a VT_R8. * * PARAMS * ulIn [I] Source * pDblOut [O] Destination * * RETURNS * Success: S_OK. * Failure: E_INVALIDARG, if the source value is invalid * DISP_E_OVERFLOW, if the value will not fit in the destination * DISP_E_TYPEMISMATCH, if the type cannot be converted */

user 4 Convert a VT_UI4 to a VT_R8.

user 3 Convert a VT_UI4 to a VT_R8.

user 5 Convert a VT_UI4 to a VT_R8.

user 6 Convert a VT_UI4 to a VT_R8.

user 8 Convert a VT_UI4 to a VT_R8.


id 1773786

body #endif /*barrier enabled only for lapi*/

user 4

user 3

user 5 /barrier enabled only for lapi

user 6

user 8 endif /barrier enabled only for lapi


id 175889

body /** * Unrolled kernel that computes * 12 rows of Q simultaneously, a * matrix vector product with two householder * vectors + a rank 1 update is performed */

user 4 computes 12 rows of Q simultaneously, a matrix vector product with two

user 3 computes 12 rows of Q simultaneously,

user 5 Unrolled kernel that computes 12 rows of Q

user 6 computes 12 rows of Q simultaneously,

user 8 a matrix vector product with two householder vectors + a rank 1


id 5303460

body /* load resource string */

user 4 load resource string

user 5 load resource string

user 3 load resource string

user 6 load resource string

user 8 load resource string


id 817896

body /* Get the next key of the iterator. */

user 4 Get the next key of the iterator.

user 5 Get the next key of the iterator.

user 3 Get the next key of the iterator.

user 6 Get the next key of the iterator.

user 8 Get the next key of the iterator.


id 2932473

body /** Multi-OS mkdirectory function */

user 4 Multi-OS mkdirectory function

user 3

user 5

user 6 Multi-OS mkdirectory function

user 8 Multi-OS mkdirectory function


id 1631282

body /* * account_find_from_address: * @address: Email address string. * * Find a mail (not news if newsgroups_ok is FALSE) account with the specified email address. * * Return value: The found account, or NULL if not found. */

user 4 Find a mail (not news if newsgroups_ok is FALSE) account with the

user 5 Find a mail (not news if newsgroups_ok is FALSE) account

user 6 Find a mail (not news if newsgroups_ok is FALSE) account with the

user 3 Find a mail (not news if newsgroups_ok is FALSE) account with the

user 8 account with the specified email address.


id 3110649

body /* * setup the main application thread to handle the possible preemption of the initial task */

user 4 setup the main application thread to handle the possible preemption of the

user 5 setup the main application thread

user 6 setup the main application thread to handle the possible preemption of the

user 3 setup the main application thread

user 8 the initial task


id 1642512

body /** * @note SDL_GL_GetProcAddress returns a void*, which is not on all * supported platforms the same size as a function pointer. * This wrapper is a workaround until SDL is fixed. * It is known to produce the "warning: assignment from incompatible pointer type" */

user 4

user 5 produce the "warning: assignment from incompatible pointer type"

user 3

user 8

user 6


id 2470872

body /** * This routine determines which bucket x falls into in the * discrete normal distribution defined by kNormalMean * and kNormalStdDev. x values which exceed the range of * the discrete distribution are clipped. * @param ParamDesc	used to identify circular dimensions * @param x	value to be normalized * @param Mean	mean of normal distribution * @param StdDev	standard deviation of normal distribution * @return Bucket number into which x falls * @note Exceptions: None * @note History: 6/5/89, DSJ, Created. */

user 4 determines which bucket x falls into in the discrete normal distribution defined

user 5 determines which bucket x falls into in the discrete normal distribution

user 3 determines which bucket x falls into in the discrete normal distribution

user 6 determines which bucket x falls into in the discrete normal distribution

user 8 by kNormalMean and kNormalStdDev.


id 4329035

body /** parseCompressionParameters() : * reads compression parameters from *stringPtr (e.g. "--zstd=wlog=23,clog=23,hlog=22,slog=6,slen=3,tlen=48,strat=6") into *params * @return 1 means that compression parameters were correct * @return 0 in case of malformed parameters */

user 2 reads compression parameters from stringPtr

user 4 reads compression parameters from stringPtr (e.g. "--zstd=wlog=23,clog=23,hlog=22,slog=6,slen=3,tlen=48,strat=6") into params

user 3 reads compression parameters from stringPtr

user 5 reads compression parameters from stringPtr

user 8 reads compression parameters from stringPtr

user 6 reads compression parameters from stringPtr


id 1449321

body /* Determines the size of an UTF-7 stream from an UTF-32 string * Returns 1 if successful or -1 on error */

user 4 Determines the size of an UTF-7 stream from an UTF-32 string

user 3 Determines the size of an UTF-7 stream from an UTF-32 string

user 5 Determines the size of an UTF-7 stream from an UTF-32 string

user 8 Determines the size of an UTF-7 stream from an UTF-32 string

user 6 Determines the size of an UTF-7 stream from an UTF-32 string


id 344508

body /* yy_get_previous_state - get the state just before the EOB char was reached */

user 4 get the state just before the EOB char was reached

user 5 get the state just before the EOB char was reached

user 3 get the state just before the EOB char was reached

user 8 get the state just before the EOB char was reached

user 6 get the state just before the EOB char was reached


id 4104724

body /* ** This function is used to add terms implied by JOIN syntax to the ** WHERE clause expression of a SELECT statement. The new term, which ** is ANDed with the existing WHERE clause, is of the form: ** ** (tab1.col1 = tab2.col2) ** ** where tab1 is the iSrc'th table in SrcList pSrc and tab2 is the ** (iSrc+1)'th. Column col1 is column iColLeft of tab1, and col2 is ** column iColRight of tab2. */

user 4 add terms implied by JOIN syntax to the WHERE clause expression of

user 5 add terms implied by JOIN syntax to the WHERE clause expression

user 3 This function is used to add terms implied by JOIN syntax to

user 6 add terms implied by JOIN syntax to the WHERE clause expression of

user 8 a SELECT statement.


id 3774541

body /* adjust the end of the overlapped cue in the previous sample */

user 4 adjust the end of the overlapped cue in the previous sample

user 5 adjust the end of the overlapped cue in the previous sample

user 3 adjust the end of the overlapped cue in the previous sample

user 6 adjust the end of the overlapped cue in the previous sample

user 8 adjust the end of the overlapped cue in the previous sample


id 2186587

body /*! \fn int SetThetaData(DSDP dsdp, SDPCone sdpcone, int nodes, int edges, EdgeMat Edge[]); \param dsdp the solver \param sdpcone the semidefinite cone \param nodes number of nodes in graph \param edges number of edges in graph \param Edge edges in graph \brief Given a graph, formulate Lovasz problem and set data. \ingroup Examples \sa LovaszTheta */

user 4 Given a graph, formulate Lovasz problem and set data.

user 5 Given a graph, formulate Lovasz problem and set data.

user 3 Given a graph, formulate Lovasz problem and set data.

user 6

user 8 Given a graph, formulate Lovasz problem and set data.


id 5737371

body static int __pyx_f_6rabbyt_6_anims_9ChainAnim___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/

user 4

user 5

user 3

user 6

user 8


id 1046765

body /* For a FITS sequence, adding 1 is recommended because for users a sequence * should start at 1 instead of 0. * With SER, all images must be in a contiguous sequence, so we use the out_index. * With FITS sequences, to keep track of image accross processings, we keep the * input index all along. */

user 4

user 5

user 6

user 3

user 8


id 1812560

body /** * @brief USBD_SetConfig * Handle Set device configuration request * @param pdev: device instance * @param req: usb request * @retval status */

user 4 Set device configuration request

user 3 Handle Set device configuration request

user 5 Handle Set device configuration request

user 6 Set device configuration request

user 8 Handle Set device configuration request


id 1183903

body /* imap_auth_sasl: Default authenticator if available. */

user 4 Default authenticator

user 3

user 5 Default authenticator if available.

user 6

user 8 Default authenticator if available.


id 5270683

body /* Retrieves the string * Returns 1 if successful or -1 on error */

user 4 Retrieves the string

user 6

user 3 Retrieves the string

user 5 Retrieves the string

user 8 Retrieves the string


id 4940635

body /************************* the one_best algorithm **********************************/

user 4 one_best algorithm

user 5

user 3

user 6

user 8


id 1791159

body /* ** Compile the UTF-8 encoded SQL statement zSql into a statement handle. */

user 4 Compile the UTF-8 encoded SQL statement zSql into a statement handle.

user 5 Compile the UTF-8 encoded SQL statement zSql into a statement handle.

user 6 Compile the UTF-8 encoded SQL statement zSql into a statement handle.

user 3 Compile the UTF-8 encoded SQL statement zSql into a statement handle.

user 8 Compile the UTF-8 encoded SQL statement zSql into a statement handle.


id 5504191

body /* * compute the mins and maxes of a vector x */

user 4 compute the mins and maxes of a vector x

user 3

user 6 compute the mins and maxes of a vector x

user 5 compute the mins and maxes of a vector x

user 8 compute the mins and maxes of a vector x


id 1500357

body /** * Ensure that each field is within its valid range by calling {@link * #validateField(int)} on each field that has been set. This method * should only be called if this calendar is not lenient. * @see #isLenient * @see #validateField(int) */

user 4 Ensure that each field is within its valid range by calling {@link

user 5 Ensure that each field is within its valid range

user 6 Ensure that each field is within its valid range

user 3 Ensure that each field is within its valid range

user 8 on each field that has been set.


id 3971445

body /* exported interface documented in gtk/scaffolding.h */

user 4

user 5

user 3

user 6

user 8 exported interface documented in gtk/scaffolding.h


id 3825847

body /** * osinfo_db_get_datamap: * @db: the database * @id: the unique operating system identifier * * Returns: (transfer none): the install datamap, or NULL if none is found */

user 4

user 5

user 6

user 3

user 8


id 3520634

body /* upb_pbdecodermethodopts ****************************************************/

user 4

user 5

user 3

user 6

user 8


id 2583780

body /** * Free PXE base code * * @v refcnt	Reference count */

user 4 Free PXE base code

user 3 Free PXE base code

user 6 Free PXE base code

user 5 Free PXE base code

user 8 Free PXE base code


id 6638859

body /*! \qmlproperty geoshape QtLocation::Map::visibleRegion This property holds the region which occupies the viewport of the map. The camera is positioned in the center of the shape, and at the largest integral zoom level possible which allows the whole shape to be visible on the screen. This implies that reading this property back shortly after having been set the returned area is equal or larger than the set area. Setting this property implicitly changes the \l center and \l zoomLevel of the map. Any previously set value to those properties will be overridden. This property does not provide any change notifications. \since 5.6 */

user 4

user 5

user 6

user 3

user 8 geoshape QtLocation::Map::visibleRegion


id 6632899

body /* ZERO-OR-MORE-ARGUMENTS-COMPATIBLE?[16265] */

user 4

user 5

user 6

user 3

user 8


id 2487604

body /**************************************************************************** ** *F FuncCycleLengthPermInt( <self>, <perm>, <point> ) . . . . . . . . . . . . *F . . . . . . . . . . . . . . . . . . length of a cycle under a permutation ** ** 'FuncCycleLengthInt' implements the internal function ** 'CycleLengthPermInt' ** ** 'CycleLengthPermInt( <perm>, <point> )' ** ** 'CycleLengthPermInt' returns the length of the cycle of <point>, which ** must be a positive integer, under the permutation <perm>. ** ** Note that the order of the arguments to this function has been reversed. */

user 4 returns the length of the cycle of <point>,

user 5 length of a cycle under a permutation

user 6 returns the length of the cycle of <point>,

user 3 returns the length of the cycle of <point>,

user 8 length of a cycle under a permutation


id 2476265

body /** * Convert a 16-bit value from little endian to host order * * @param v 16-bit little endian value * * @return 16-bit value in host order */

user 4 Convert a 16-bit value from little endian to host order

user 5 Convert a 16-bit value from little endian to host order

user 6 Convert a 16-bit value from little endian to host order

user 3 Convert a 16-bit value from little endian to host order

user 8 Convert a 16-bit value from little endian to host order


id 798264

body /** * itdb_cp_track_to_ipod: * @track: the #Itdb_Track to copy (containing @filename metadata) * @filename: the source file * @error: return location for a #GError or NULL * * Copy one track to the iPod. The PC filename is @filename * and is taken literally. * * The mountpoint of the iPod (in local encoding) must have been set * with itdb_set_mountpoint() (done automatically when reading an * iTunesDB). * * If @track->transferred is set to TRUE, nothing is done. Upon * successful transfer @track->transferred is set to TRUE. * * For storage, the directories "F00 ... Fnn" will be used randomly. * * The filename is constructed as "libgpod@random_number" and copied * to @track->ipod_path. If this file already exists, @random_number * is adjusted until an unused filename is found. * * If @track->ipod_path is already set, this one will be used * instead. If a file with this name already exists, it will be * overwritten. * * @track->filetype_marker is set according to the filename extension * * Returns: TRUE on success, FALSE on error, in which case @error is * set accordingly. */

user 4 Copy one track to the iPod.

user 3 Copy one track to the iPod.

user 5 Copy one track to the iPod.

user 6 Copy one track to the iPod.

user 8 is taken literally.


id 1353248

body /* Create an expression representing the sum of "expr1" and "expr2". */

user 4 Create an expression representing the sum of "expr1" and "expr2".

user 3 Create an expression representing the sum of "expr1" and "expr2".

user 5 Create an expression representing the sum of "expr1" and "expr2".

user 6 Create an expression representing the sum of "expr1" and "expr2".

user 8 Create an expression representing the sum of "expr1" and "expr2".


id 2378950

body /* * LE interrupt handler. */

user 4 interrupt handler.

user 5 LE interrupt handler.

user 3

user 6

user 8 LE interrupt handler.


id 4576680

body /* * BN_mod_lshift1 variant that may be used if a is non-negative and less than * m */

user 4

user 3 BN_mod_lshift1 variant

user 5

user 6

user 8


id 1294872

body /* ** Return the number of bytes required to store a JournalFile that uses vfs ** pVfs to create the underlying on-disk files. */

user 4 Return the number of bytes required to store a JournalFile that uses

user 5 Return the number of bytes required to store a JournalFile

user 6 Return the number of bytes required to store a JournalFile

user 3 Return the number of bytes required to store a JournalFile

user 8 Return the number of bytes required to store a JournalFile


id 826218

body /* ** Round up a request size to the next valid allocation size. If ** the allocation is too large to be handled by this allocation system, ** return 0. ** ** All allocations must be a power of two and must be expressed by a ** 32-bit signed integer. Hence the largest allocation is 0x40000000 ** or 1073741824 bytes. */

user 4 Round up a request size to the next valid allocation size. If

user 6 Round up a request size to the next valid allocation size.

user 5 Round up a request size to the next valid allocation size.

user 3 Round up a request size to the next valid allocation size.

user 8 Round up a request size to the next valid allocation size.


id 5240617

body /** Divide an integer and round upwards @return Returns a divided by b */

user 4 Divide an integer and round upwards

user 5 Divide an integer and round upwards

user 6 Divide an integer and round upwards

user 3 Divide an integer and round upwards

user 8 Divide an integer and round upwards


id 3890422

body /** * snmp_bc_map2oem: * @event: Pointer to handler's data. * @sel_entry: Error Log's "Source" field string. * @reason: Location to store HPI mapping data for resource. * * Any event not explicitly recognized is mapped into an HPI * OEM event. This routine performs the mapping. * * NOTE: * A reason code is passed, if in the future we record in some temp file, * non-mapped events. Reason records why the event wasn't mapped. * * Return values: * SA_OK - Normal case. * SA_ERR_HPI_INVALID_PARAMS - Pointer parameter(s) are NULL. **/

user 4 Any event not explicitly recognized is mapped into an HPI OEM

user 5 event not explicitly recognized is mapped into an HPI OEM event.

user 3 Any event not explicitly recognized is mapped into an HPI OEM

user 6 This routine performs the mapping.

user 8 Any event not explicitly recognized is mapped into an HPI OEM


id 4601419

body /** Duplicate one msg_content_type_t object */

user 4 Duplicate one msg_content_type_t object

user 5 Duplicate one msg_content_type_t object

user 6 Duplicate one msg_content_type_t object

user 3 Duplicate one msg_content_type_t object

user 8 Duplicate one msg_content_type_t object


id 5530965

body /* Compute the power of an isl_int to an unsigned long. * Always let IMath do it; the result is unlikely to be small except in some * special cases. * Note: 0^0 == 1 */

user 4 Compute the power of an isl_int to an unsigned long.

user 3 Compute the power of an isl_int to an unsigned long.

user 5 Compute the power of an isl_int to an unsigned long.

user 6 Compute the power of an isl_int to an unsigned long.

user 8 Compute the power of an isl_int to an unsigned long.


id 331837

body /* Release distribution lock */

user 4 Release distribution lock

user 5 Release distribution lock

user 3 Release distribution lock

user 8 distribution

user 6


id 1100852

body /* *************************** * name generator sample * ***************************/

user 2 name generator sample

user 4

user 5

user 3

user 6

user 8 name generator sample


id 854945

body /*! This function is called when the engine has discarded the script identified by the given \a id. You can reimplement this function to clean up any resources you have associated with the script. The default implementation does nothing. \sa scriptLoad() */

user 3 clean up any resources you have associated with the script.

user 4 This function is called when the engine has discarded the script

user 5 default implementation does nothing.

user 6 The default implementation does nothing.

user 8 The default implementation does nothing.


id 2216437

body /** * @brief Sets period for polling loop in listener thread. * @return 1 on success, 0 on error; errno is set. */

user 4 Sets period for polling loop in listener thread.

user 5 Sets period for polling loop in listener thread.

user 3 Sets period for polling loop in listener thread.

user 8 Sets period for polling loop in listener thread.

user 6 Sets period for polling loop in listener thread.


id 5411025

body /* * call-seq: * context.subset_external? -> (true|false) * * Determine whether this context is a subset of an * external context. */

user 4 Determine whether this context is a subset of an external context.

user 5 Determine whether this context is a subset of an external context.

user 6 Determine whether this context is a subset of an external context.

user 3 Determine whether this context is a subset of an external context.

user 8 Determine whether this context is a subset of an external context.


id 216576

body /* Setup for XAA screen-to-screen copy. Tests: xtest CH06/fllrctngl (also tests transparency). */

user 4 Setup for XAA screen-to-screen copy.

user 3 Setup for XAA screen-to-screen copy.

user 5 Setup for XAA screen-to-screen copy.

user 6

user 8 Setup for XAA screen-to-screen copy.


id 558318

body /* ------------------------------------------------------------------------ @NAME : bt_entry_set_key () @INPUT : entry new_key @OUTPUT : entry->down->text @RETURNS : @DESCRIPTION: Changes the key of a regular entry to 'new_key'. If 'entry' is not a regular entry, or if it doesn't already have a child node holding an entry key, bombs via 'usage_error()'. Otherwise a duplicate of 'new_key' is copied into the entry AST (so the caller can free that string without worry). @CALLS : bt_set_text () @CREATED : 1999/11/25, GPW (from St�phane Genaud) @MODIFIED : -------------------------------------------------------------------------- */

user 4 Changes the key of a regular entry to 'new_key'.

user 3 Changes the key of a regular entry to 'new_key'.

user 5 Changes the key of a regular entry to 'new_key'.

user 6 Changes the key of a regular entry to 'new_key'.

user 8 Changes the key of a regular entry to 'new_key'.


id 5838045

body /* Sets the value in the list element * Returns 1 if successful or -1 on error */

user 4 Sets the value in the list element

user 3 Sets the value in the list element

user 5 Sets the value in the list element

user 6 Sets the value in the list element

user 8 Sets the value in the list element


id 3004994

body /** * Multiply two scalar arrays and add to output (with strides) * * optr = optr + iptr1 * iptr2 */

user 4 Multiply two scalar arrays and add to output (with strides)

user 5 Multiply two scalar arrays and add to output (with strides)

user 6 Multiply two scalar arrays

user 3 Multiply two scalar arrays and add to output

user 8 Multiply two scalar arrays and add to output (with strides)


id 3091763

body /* * Set the JTAG clock. The actual frequency is quite a bit of * guesswork, based on the values claimed by AVR Studio. Inside the * JTAG ICE, the value is the delay count of a delay loop between the * JTAG clock edges. A count of 0 bypasses the delay loop. * * As the STK500 expresses it as a period length (and we actualy do * program a period length as well), we rather call it by that name. */

user 4 Set the JTAG clock.

user 5 Set the JTAG clock.

user 6 Set the JTAG clock.

user 3 Set the JTAG clock.

user 8 Set the JTAG clock.


id 370756

body /* * command_outfile_list * * outfile list */

user 4

user 6

user 5

user 3

user 8 outfile list


id 826665

body /* ** Return a pointer to a human readable string in a static buffer ** containing the state of the Pager object passed as an argument. This ** is intended to be used within debuggers. For example, as an alternative ** to "print *pPager" in gdb: ** ** (gdb) printf "%s", print_pager_state(pPager) */

user 4 Return a pointer to a human readable string in a static buffer

user 5 Return a pointer to a human readable string in a static buffer

user 3 Return a pointer to a human readable string in a static buffer

user 6 Return a pointer to a human readable string in a static buffer

user 8 containing the state of the Pager object passed as an argument.


id 5200079

body /** ** Server user has finally hit the start game button */

user 3

user 4

user 5 Server user has finally hit the start game button

user 6

user 8 Server user has finally hit the start game button


id 1697674

body /* ** Load the content from either the sqlite_stat4 or sqlite_stat3 table ** into the relevant Index.aSample[] arrays. ** ** Arguments zSql1 and zSql2 must point to SQL statements that return ** data equivalent to the following (statements are different for stat3, ** see the caller of this function for details): ** ** zSql1: SELECT idx,count(*) FROM %Q.sqlite_stat4 GROUP BY idx ** zSql2: SELECT idx,neq,nlt,ndlt,sample FROM %Q.sqlite_stat4 ** ** where %Q is replaced with the database name before the SQL is executed. */

user 4 Load the content from either the sqlite_stat4 or sqlite_stat3 table into

user 3 Load the content from either the sqlite_stat4 or sqlite_stat3 table

user 5 Load the content from either the sqlite_stat4 or sqlite_stat3 table

user 6 Load the content from either the sqlite_stat4 or sqlite_stat3 table

user 8 the relevant Index.aSample[] arrays.


id 5364238

body /************************************************************************** * BuildCommDCBW	(KERNEL32.@) * * Updates a device control block structure with values from an * unicode device control string. The device control string has two forms * normal and extended, it must be exclusively in one or the other form. * * RETURNS * * True on success, false on a malformed control string. */

user 4 Updates a device control block structure with values from an unicode device

user 5 Updates a device control block structure

user 6 Updates a device control block structure

user 3 Updates a device control block structure with values from an unicode device

user 8 control string.


id 2041235

body /* Read the requested buffer completely, accounting for interruptions. */

user 4 Read the requested buffer completely, accounting for interruptions.

user 5 Read the requested buffer completely, accounting for interruptions.

user 3 Read the requested buffer completely, accounting for interruptions.

user 6 Read the requested buffer completely,

user 8 Read the requested buffer completely, accounting for interruptions.


id 5364208

body /*********************************************************************** * GetCommandLineA (KERNEL32.@) * * WARNING: there's a Windows incompatibility lurking here ! * Win32s always includes the full path of the program file, * whereas Windows NT only returns the full file path plus arguments * in case the program has been started with a full path. * Win9x seems to have inherited NT behaviour. * * Note that both Start Menu Execute and Explorer start programs with * fully specified quoted app file paths, which is why probably the only case * where you'll see single file names is in case of direct launch * via CreateProcess or WinExec. * * Perhaps we should take care of Win3.1 programs here (Win32s "feature"). * * References: MS KB article q102762.txt (special Win32s handling) */

user 4

user 5

user 3

user 6

user 8


id 6266486

body /* * Return the amount of 16-bit elements in UTF-16LE needed * (without the terminating null) to store given UTF-8 string. * * Return -1 with errno set if it's longer than PATH_MAX or string is invalid. * * Note: This does not check whether the input sequence is a valid utf8 string, *	and should be used only in context where such check is made! */

user 4 Return the amount of 16-bit elements in UTF-16LE needed (without the

user 3 Return the amount of 16-bit elements in UTF-16LE needed (without the

user 5 Return the amount of 16-bit elements in UTF-16LE

user 6 Return the amount of 16-bit elements in UTF-16LE needed (without the

user 8 to store given UTF-8 string.


id 4722145

body /** * pam_sm_chauthtok - * @pamh:	PAM handle * @flags:	PAM flags * @argc:	number of elements in @argv * @argv:	NULL-terminated argument vector * * This is a placeholder function so PAM does not get mad. */

user 4

user 6

user 5

user 3

user 8


id 4166746

body /* FOR TIES, USE ITERATIVE MERGE ORDER (1-2, then 1-3, then 1-4, etc.) */

user 4

user 3

user 5

user 6

user 8


id 6114843

body /********************************************************************* * Function: * * Purpose: * * Arguments: * * Returns: * *********************************************************************/

user 4

user 3

user 6

user 5

user 8


id 3941744

body void /* PRIVATE */

user 4

user 6

user 5

user 3

user 8


id 5531993

body /* Attach "tree2" at each of the leaves of "tree1". * * If "tree1" does not have any explicit children, then make "tree2" * its single child. Otherwise, attach "tree2" to the leaves of * each of the children of "tree1". */

user 4 Attach "tree2" at each of the leaves of "tree1".

user 5

user 3 Attach "tree2" at each of the leaves of "tree1".

user 6 Attach "tree2" at each of the leaves of "tree1".

user 8 Attach "tree2" at each of the leaves of "tree1".


id 1326344

body /** * Clicked Eject */

user 4

user 5 Clicked Eject

user 3

user 8 Clicked Eject

user 6


id 73412

body /* reg += reg2 */

user 4

user 3

user 5

user 6

user 8


id 3936850

body /* Retrieves the number of items * Returns 1 if successful or -1 on error */

user 4

user 5 Retrieves the number of items

user 3 Retrieves the number of items

user 8 Retrieves the number of items

user 6 Retrieves the number of items


id 1067262

body /* Retrieves the UTF-16 encoded string of the template name * The size should include the end of string character * Returns 1 if successful or -1 on error */

user 4 Retrieves the UTF-16 encoded string of the template name

user 5 Retrieves the UTF-16 encoded string of the template name

user 3 Retrieves the UTF-16 encoded string of the template name

user 6 Retrieves the UTF-16 encoded string of the template name

user 8 Retrieves the UTF-16 encoded string of the template name


id 6577627

body /** * \brief Constructor. */

user 4 Constructor.

user 3

user 5

user 6

user 8 Constructor.


id 6119029

body /* * Function: TemplateInit(u_char *) * * Purpose: Calls the argument parsing function, performs final setup on data * structs, links the preproc function into the function list. * * Arguments: args => ptr to argument string * * Returns: void function * */

user 4 Calls the argument parsing function, performs final setup on data structs, links

user 5 Calls the argument parsing function, performs final setup on data structs,

user 3 Calls the argument parsing function, performs final setup on data structs, links

user 8 links the preproc function into the function list.

user 6 performs final setup on data structs,


id 6521799

body /** * Send an FIN to the peer. If we fail to send this ack (no more available * fragments or the send failed) this function automatically add the FIN * to the list of pending FIN, Which guarantee that the FIN will be sent * later. */

user 4 Send an FIN to the peer.

user 5 Send an FIN to the peer.

user 3 Send an FIN to the peer.

user 8 Send an FIN to the peer.

user 6 add the FIN to the list of pending FIN,


id 3195155

body /*! \brief * Read and setup tabulated umbrella potential */

user 4 Read and setup tabulated umbrella potential

user 5 Read and setup tabulated umbrella potential

user 3 Read and setup tabulated umbrella potential

user 6 Read and setup tabulated umbrella potential

user 8 Read and setup tabulated umbrella potential


id 2176501

body /****************************************************************************** purpose : determine height and width of file w & h are the size in pixels xres is the number of pixels per meter ******************************************************************************/

user 3 determine height and width of file

user 4 determine height and width of file

user 6 determine height and width of file

user 5 determine height and width of file

user 8 determine height and width of file


id 5875103

body /* ** Attach subtrees pLeft and pRight to the Expr node pRoot. ** ** If pRoot==NULL that means that a memory allocation error has occurred. ** In that case, delete the subtrees pLeft and pRight. */

user 4 Attach subtrees pLeft and pRight to the Expr node pRoot.

user 5 Attach subtrees pLeft and pRight to the Expr node pRoot.

user 3 Attach subtrees pLeft and pRight to the Expr node pRoot.

user 6 Attach subtrees pLeft and pRight to the Expr node pRoot.

user 8 Attach subtrees pLeft and pRight to the Expr node pRoot.


id 3264078

body /** * idmef_alert_new_additional_data: * @ptr: pointer to a #idmef_alert_t object. * @ret: pointer to an address where to store the created #idmef_additional_data_t object. * @pos: position in the list. * * Create a new #idmef_additional_data_t children of @ptr, and add it to position @pos of * @ptr list of #idmef_additional_data_t object. The created #idmef_additional_data_t object is * stored in @ret. * * If @pos is #IDMEF_LIST_APPEND, @object will be inserted at the tail of the list. * If @pos is #IDMEF_LIST_PREPEND, @object will be inserted at the head of the list. * * Returns: 0 on success, or a negative value if an error occured. */

user 4 Create a new #idmef_additional_data_t children of @ptr, and add it to position

user 5 Create a new #idmef_additional_data_t children of @ptr, and add it to position

user 3 Create a new #idmef_additional_data_t children of @ptr, and add it to position

user 6 Create a new #idmef_additional_data_t children of @ptr,

user 8 @pos of @ptr list of #idmef_additional_data_t object.


id 1707924

body /* * TIACK* provides the Timer vector in an iack cycle */

user 4 provides the Timer vector in an iack cycle

user 5

user 3 provides the Timer vector in an iack cycle

user 6

user 8 TIACK provides the Timer vector in an iack cycle


id 6108427

body /* * debug interface information message */

user 4 debug interface information message

user 5 debug interface information message

user 6 debug interface information message

user 3 debug interface information message

user 8 debug interface information message


id 4648245

body /* undead are not hostile unless disturbed.... */

user 4

user 5

user 3

user 6

user 8 undead are not hostile unless disturbed....


id 2938067

body /*! \relates XsDataPacket \brief Returns a struct with XsRawGpsDop data */

user 4 Returns a struct with XsRawGpsDop data

user 3 Returns a struct with XsRawGpsDop data

user 5 Returns a struct with XsRawGpsDop data

user 6

user 8 Returns a struct with XsRawGpsDop data


id 5301546

body /* initialize a list */

user 4 initialize a list

user 5 initialize a list

user 3 initialize a list

user 6 initialize a list

user 8 initialize a list


id 5730935

body /***************************************************************************** * msg_Raw: only used for usage() *****************************************************************************/

user 4

user 3

user 5

user 6

user 8


id 5407999

body /* * Check whether in "p" there is an "if", "for" or "while" before "*poffset". * Return 0 if there is none. * Otherwise return !0 and update "*poffset" to point to the place where the * string was found. */

user 4 Check whether in "p" there is an "if", "for" or "while" before

user 5 Check whether in "p" there is an "if", "for" or "while"

user 6 Check whether in "p" there is an "if", "for" or "while" before

user 3 Check whether in "p" there is an "if", "for" or "while" before

user 8


id 1036735

body /* use this to send a link */

user 4 send a link

user 5 send a link

user 3 use this to send a link

user 8

user 6 send a link


id 4826962

body /* Frees a file * Returns 1 if successful or -1 on error */

user 4 Frees a file

user 3 Frees a file

user 5 Frees a file

user 6 Frees a file

user 8 Frees a file


id 5340199

body /************************************************************************* *	SQLNumParams [ODBC32.063] */

user 4

user 5

user 6

user 3

user 8


id 3992124

body /* Does "bmap" contain any rational points? * * If "bmap" has an equality for each dimension, equating the dimension * to an integer constant, then it has no rational points, even if it * is marked as rational. */

user 2 Does "bmap" contain any rational points?

user 4 Does "bmap" contain any rational points?

user 3 Does "bmap" contain any rational points?

user 5 "bmap" contain any rational points?

user 6 Does "bmap" contain any rational points?

user 8


id 2298408

body /** * make_exception_policy - Make /etc/tomoyo/policy/current/exception_policy.conf . * * Returns nothing. */

user 4 Make /etc/tomoyo/policy/current/exception_policy.conf .

user 6

user 5

user 3 Make /etc/tomoyo/policy/current/exception_policy.conf

user 8 Make /etc/tomoyo/policy/current/exception_policy.conf


id 1929106

body /* vec_sl (vector shift left) * ====== */

user 4

user 3

user 5

user 6

user 8


id 4101718

body /* ** Create symlink to file on Unix, or plain-text file with ** symlink target if "allow-symlinks" is off or we're on Windows. ** ** Arguments: target file (symlink will point to it), link file **/

user 4 Create symlink to file

user 5 Create symlink to file on Unix,

user 3 Create symlink to file on Unix,

user 6 Create symlink to file on Unix, or plain-text file with symlink target

user 8 if "allow-symlinks" is off or we're on Windows.


id 1696401

body /* ** Simplify a filename into its canonical form ** by making the following changes: ** ** * removing any trailing and duplicate / ** * convert /./ into just / ** * convert /A/../ where A is any simple name into just / ** ** Changes are made in-place. Return the new name length. ** ** The original filename is in z[0..n-1]. Return the number of ** characters in the simplified name. */

user 4 Simplify a filename into its canonical form by making the following changes:

user 3 Simplify a filename into its canonical form

user 5 Simplify a filename into its canonical form

user 6 Simplify a filename into its canonical form

user 8 Simplify a filename into its canonical form


id 5307459

body /*********************************************************************** * server_select */

user 4

user 5

user 3

user 8

user 6


id 4638548

body /* ** Given a diff context in which the aEdit[] array has been filled ** in, compute a context diff into pOut. */

user 4 Given a diff context in which the aEdit[] array has been filled

user 5 compute a context diff into pOut.

user 3 compute a context diff into pOut.

user 6 Given a diff context in which the aEdit[] array has been filled

user 8 in, compute a context diff into pOut.


id 6239697

body /* Removes a list element from the list * Returns 1 if successful or -1 on error */

user 4 Removes a list element from the list

user 5 Removes a list element from the list

user 3 Removes a list element from the list

user 8 Removes a list element from the list

user 6 Removes a list element from the list


id 4406633

body /* ** This function is called from within the xFilter method. It initializes ** the full-text query currently stored in pCsr->pExpr. To iterate through ** the results of a query, the caller does: ** ** fts3EvalStart(pCsr); ** while( 1 ){ ** fts3EvalNext(pCsr); ** if( pCsr->bEof ) break; ** ... return row pCsr->iPrevId to the caller ... ** } */

user 4 initializes the full-text query currently stored in pCsr->pExpr.

user 3 It initializes the full-text query currently stored in pCsr->pExpr.

user 5 initializes the full-text query currently stored in pCsr->pExpr.

user 6 initializes the full-text query currently stored in pCsr->pExpr.

user 8 It initializes the full-text query currently stored in pCsr->pExpr.


id 5073974

body /****** poly_addcste ********************************************************* PROTO void poly_addcste(polystruct *poly, double *cste) PURPOSE Modify matrix coefficients to mimick the effect of adding a cst to the input of a polynomial. INPUT Pointer to the polynomial structure, Pointer to the vector of cst. OUTPUT -. NOTES Requires quadruple-precision. **For the time beeing, this function returns completely wrong results!!** AUTHOR E. Bertin (IAP) VERSION 03/03/2004 ***/

user 4 Modify matrix coefficients to mimick the effect of adding a cst to the

user 5 Modify matrix coefficients to mimick the effect of adding a cst

user 3 Modify matrix coefficients to mimick the effect of adding a cst to the

user 8 input of a polynomial.

user 6 Modify matrix coefficients


id 5367798

body /*********************************************************************** * WinHttpSendRequest (winhttp.@) */

user 4

user 5

user 3

user 6

user 8


id 2457120

body /* ** msPostGISBuildSQLWhere() ** ** Returns malloc'ed char* that must be freed by caller. */

user 4

user 5 Returns malloc'ed char that must be freed by caller.

user 3 Returns malloc'ed char that must be freed by caller.

user 6 Returns malloc'ed char that must be freed by caller.

user 8 Returns malloc'ed char that must be freed by caller.


id 3934934

body /* return pointer to paper size struct or NULL */

user 4 return pointer to paper size struct

user 5 return pointer to paper size struct or NULL

user 3 return pointer to paper size struct

user 6 return pointer to paper size struct

user 8 return pointer to paper size struct or NULL


id 5098381

body /* Reads the leaf node values * Returns 1 if the successful or -1 on error */

user 4 Reads the leaf node values

user 5 Reads the leaf node values

user 3 Reads the leaf node values

user 6 Reads the leaf node values

user 8 Reads the leaf node values


id 6499248

body /* Set the current file of the zipfile to the first file. return UNZ_OK if there is no problem */

user 4 Set the current file of the zipfile to the first file.

user 5 Set the current file of the zipfile to the first file.

user 6 Set the current file of the zipfile to the first file.

user 3 Set the current file of the zipfile to the first file.

user 8 Set the current file of the zipfile to the first file.


id 5322655

body /****************************************************************************** * ItemMoniker_IsRunning ******************************************************************************/

user 4

user 5

user 6

user 3

user 8


id 5322653

body /****************************************************************************** * ItemMoniker_IsEqual ******************************************************************************/

user 4

user 5

user 3

user 8

user 6


id 301894

body /* ** Write mapping (iNode->iPar) to the <rtree>_parent table. */

user 4 Write mapping (iNode->iPar) to the <rtree>_parent table.

user 5 Write mapping (iNode->iPar) to the <rtree>_parent table.

user 3 Write mapping (iNode->iPar) to the <rtree>_parent table.

user 8 Write mapping (iNode->iPar) to the <rtree>_parent table.

user 6 Write mapping (iNode->iPar) to the <rtree>_parent table.


id 4094556

body /* common S/MIME checks */

user 4 common S/MIME checks

user 5 common S/MIME checks

user 6

user 3

user 8 common S/MIME checks


id 26080

body /** mod fixed_quality */

user 4

user 3

user 5

user 6

user 8


id 4036655

body /* 1999-06-12 -	Extend the selection to include all rows having styles that are siblings to **	the currently selected row(s). Typically useful to select e.g. all images **	after selecting one, and things like that. Assumes the style tree layout is **	sensible (i.e. rather deep and with "abstract" parents). */

user 4 Extend the selection to include all rows having styles that are siblings

user 3 Extend the selection to include all rows having styles that are siblings

user 5 Extend the selection to include all rows having styles

user 6 Extend the selection to include all rows having styles that are siblings

user 8 to the currently selected row(s).


id 6573473

body /** * \brief Player is injured. */

user 4 Player is injured.

user 5 Player is injured.

user 3 Player is injured.

user 8

user 6


id 6568233

body /* * called to destroy the menu */

user 4 destroy the menu

user 5 destroy the menu

user 6 destroy the menu

user 3 destroy the menu

user 8 destroy the menu


id 3034765

body /* ============= SwapBSPFile Byte swaps all data in a bsp file. ============= */

user 4 swaps all data in a bsp file.

user 3 Byte swaps all data in a bsp file.

user 5 swaps all data in a bsp file.

user 6 Byte swaps all data in a bsp file.

user 8 Byte swaps all data in a bsp file.


id 14670

body /* print file entry */

user 4 print file entry

user 5 print file entry

user 3 print file entry

user 6 print file entry

user 8 print file entry


id 48061

body /** * @brief Derive absolute value from relative attribute, given value of the whole range. * * @param attrval Value of u.num member of attribute capable of holding relative values. * @param whole Range counted as 100%. * @param treat_neg_as_rel Replace negative absolute values with whole+attr.u.num. * * @return Absolute value corresponding to given relative value. */

user 4 Derive absolute value from relative attribute, given value of the whole range.

user 5 Derive absolute value from relative attribute, given value of the whole range.

user 3 Derive absolute value from relative attribute, given value of the whole range.

user 8 Derive absolute value from relative attribute, given value of the whole range.

user 6 Derive absolute value from relative attribute, given value of the whole range.


id 4718441

body /* * Copy the storage definitions from an alist to the JCR */

user 4 Copy the storage definitions from an alist to the JCR

user 6 Copy the storage definitions from an alist to the JCR

user 5 Copy the storage definitions from an alist to the JCR

user 3 Copy the storage definitions from an alist to the JCR

user 8 Copy the storage definitions from an alist to the JCR


id 2733196

body /* ** Remember the current column cache context. Any new entries added ** added to the column cache after this call are removed when the ** corresponding pop occurs. */

user 4 Remember the current column cache context.

user 5 new entries added added to the column cache

user 6 Remember the current column cache context.

user 3 Remember the current column cache context.

user 8


id 4035424

body /* ** Attempt the transfer optimization on INSERTs of the form ** ** INSERT INTO tab1 SELECT * FROM tab2; ** ** The xfer optimization transfers raw records from tab2 over to tab1. ** Columns are not decoded and reassemblied, which greatly improves ** performance. Raw index records are transferred in the same way. ** ** The xfer optimization is only attempted if tab1 and tab2 are compatible. ** There are lots of rules for determining compatibility - see comments ** embedded in the code for details. ** ** This routine returns TRUE if the optimization is guaranteed to be used. ** Sometimes the xfer optimization will only work if the destination table ** is empty - a factor that can only be determined at run-time. In that ** case, this routine generates code for the xfer optimization but also ** does a test to see if the destination table is empty and jumps over the ** xfer optimization code if the test fails. In that case, this routine ** returns FALSE so that the caller will know to go ahead and generate ** an unoptimized transfer. This routine also returns FALSE if there ** is no chance that the xfer optimization can be applied. ** ** This optimization is particularly useful at making VACUUM run faster. */

user 4 Attempt the transfer optimization on INSERTs of the form INSERT INTO tab1

user 5 Attempt the transfer optimization on INSERTs of the form

user 3 Attempt the transfer optimization on INSERTs

user 6 transfers raw records from tab2 over to tab1.

user 8 Attempt the transfer optimization on INSERTs of the form


id 2062420

body /* * stopsig () * * Stop the program when certain signals are received. */

user 2 Stop the program when certain signals are received.

user 4 Stop the program when certain signals are received.

user 5 Stop the program when certain signals are received.

user 6 Stop the program when certain signals are received.

user 3 Stop the program when certain signals are received.

user 8 Stop the program when certain signals are received.


id 5936313

body /***************************************************************************** * NewEITSection ***************************************************************************** * Helper function which allocates a initializes a new PSI section suitable * for carrying EIT data. *****************************************************************************/

user 4 allocates a initializes a new PSI section suitable for carrying EIT data.

user 5 initializes a new PSI section suitable for carrying EIT data.

user 3 allocates a initializes a new PSI section suitable for carrying EIT data.

user 8 allocates a initializes a new PSI section suitable for carrying EIT data.

user 6 allocates a initializes a new PSI section suitable for carrying EIT data.


id 3576336

body /************************************************************************ * This function tokenizes a string based on the user-supplied delimiters * list. The resulting tokens are returned into an array of strings. *************************************************************************/

user 4 tokenizes a string based on the user-supplied delimiters list.

user 5 This function tokenizes a string based on the user-supplied delimiters list.

user 3 tokenizes a string based on the user-supplied delimiters list.

user 6 This function tokenizes a string based on the user-supplied delimiters list.

user 8 tokenizes a string based on the user-supplied delimiters list.


id 3955720

body /** Emet le signal requestForDiagramDeletion avec le schema selectionne */

user 4 Emet le signal requestForDiagramDeletion avec le schema selectionne

user 5

user 3

user 6

user 8 Emet le signal requestForDiagramDeletion avec le schema selectionne


id 2952341

body /* * zCOMMANDS are delimited by \0 * nCOMMANDS are delimited by \n * Old-style non-prefixed commands are one packet, optionally delimited by \n, * with trailing \r|\n ignored */

user 4

user 3

user 5

user 6

user 8


id 5321678

body /* gets the apartment which has a given creator thread ID. The caller must * release the reference from the apartment as soon as the apartment pointer * is no longer required. */

user 4 gets the apartment which has a given creator thread ID.

user 5 gets the apartment which has a given creator thread ID.

user 6 gets the apartment which has a given creator thread ID.

user 3 gets the apartment which has a given creator thread ID.

user 8 gets the apartment which has a given creator thread ID.


id 28080

body /** * Dummy function needed to interface to upstream * ptp.c/ptp.h files. */

user 4 Dummy function needed to interface to upstream

user 5

user 3 Dummy function needed to interface to upstream

user 6 Dummy function needed to interface to upstream

user 8


id 4599862

body /* Determines the UTF-8 string size from the system string * Returns 1 if successful or -1 on error */

user 4 Determines the UTF-8 string size from the system string

user 5 Determines the UTF-8 string size from the system string

user 3 Determines the UTF-8 string size from the system string

user 6 Determines the UTF-8 string size from the system string

user 8 Determines the UTF-8 string size from the system string


id 234034

body /* Parse HTTP request, fill in mg_request_info structure. This function modifies the buffer by NUL-terminating HTTP request components, header names and header values. */

user 4 Parse HTTP request,

user 3 Parse HTTP request, fill in mg_request_info structure.

user 5 Parse HTTP request, fill in mg_request_info structure.

user 6 Parse HTTP request,

user 8


id 661831

body /* a6041 in k6031 in k6028 in k6022 in k6016 in k6013 in find-module/import-library in k2962 in k2958 */

user 4

user 5

user 3

user 8

user 6


id 3493671

body /* execlp is used to re-invoke itself, so pass on privileges... */

user 4

user 5 execlp is used to re-invoke itself, so pass on privileges...

user 3

user 8

user 6


id 2948322

body /** * IPv4: Calculate UDP checksum. Places the result into the UDP-header. * <p> * Use this function after filling the UDP payload. * * @param ipv4_hdr Points to the place where IPv4-header starts. */

user 4 Calculate UDP checksum. Places the result into the UDP-header.

user 3 Calculate UDP checksum.

user 5 Calculate UDP checksum. Places the result into the UDP-header.

user 6 Calculate UDP checksum.

user 8 Calculate UDP checksum. Places the result into the UDP-header.


id 671172

body /* This function works like strtok() except that the original string is not modified and a pointer within str to where the next token begins is returned (this can be used to pass to the function on the next iteration). If no more tokens are found or the token will not fit in the buffer, NULL is returned. */

user 4 works like strtok() except that the original string is not modified and

user 5

user 3 This function works like strtok() except that the original string is not

user 6 This function works like strtok()

user 8 modified and a pointer within str to where the next token begins


id 5364873

body /****************************************************************************** * EnumUILanguagesA (KERNEL32.@) */

user 4

user 5

user 3

user 6

user 8


id 4829226

body /* * is_node_resp - determine if the specified node's state is responding * IN name - name of the node * RET true if node exists and is responding, otherwise false */

user 4 determine if the specified node's state is responding

user 5 determine if the specified node's state is responding

user 6 determine if the specified node's state is responding IN name

user 3 determine if the specified node's state is responding

user 8 determine if the specified node's state is responding


id 805556

body /** * set the button_second_comparison * * \param text_comparison_number number of the text_comparison * \param button_second_comparison * * \return TRUE if ok * */

user 4 set the button_second_comparison

user 5 set the button_second_comparison

user 6 set the button_second_comparison

user 3 set the button_second_comparison

user 8 set the button_second_comparison


id 3122851

body void /* PRIVATE */

user 4

user 3

user 5

user 6

user 8


id 1168303

body /** * Seeks to the previous partition, if possible * @return <= 0 if we should stop parsing, > 0 if we should keep going */

user 4 Seeks to the previous partition,

user 3 Seeks to the previous partition, if possible

user 5 Seeks to the previous partition, if possible

user 6 Seeks to the previous partition, if possible

user 8 Seeks to the previous partition, if possible


id 5811034

body /*********************************************************** ** Calculate coefficients common to many parametric biquad filters. */

user 4 Calculate coefficients common to many parametric biquad filters.

user 5 Calculate coefficients common to many parametric biquad filters.

user 3 Calculate coefficients common to many parametric biquad filters.

user 8 Calculate coefficients common to many parametric biquad filters.

user 6 Calculate coefficients common to many parametric biquad filters.


id 4449234

body /** * qdict_get_double(): Get an number mapped by 'key' * * This function assumes that 'key' exists and it stores a * QFloat or QInt object. * * Return number mapped by 'key'. */

user 4 Get an number mapped by 'key'

user 5 Get an number mapped by 'key'

user 3 Get an number mapped by 'key'

user 6

user 8


id 4593820

body /* This implemementation does not attempt to support IPv6 using * gethostbyname2 et al. */

user 4

user 6

user 5

user 3

user 8


id 4510572

body /* * put partial element map */

user 4 put partial element map

user 5 put partial element map

user 3

user 6 put partial element map

user 8 put partial element map


id 102552

body /* Stop playback of a stream previously started with OGG_play() */

user 4 Stop playback of a stream previously started with OGG_play()

user 5 Stop playback of a stream previously started with OGG_play()

user 3 Stop playback of a stream previously started with OGG_play()

user 6 Stop playback of a stream previously started with OGG_play()

user 8 Stop playback of a stream previously started with OGG_play()


id 41275

body /* API: create default device parameter */

user 4 create default device parameter

user 5 create default device parameter

user 6 create default device parameter

user 3 create default device parameter

user 8 create default device parameter


id 1234959

body /*! sao Uses ds9 to display X. ds9 v5.2 or newer needs to be running. Syntax sao X [, min, max] [, /log, /zscale] Arguments X: A 2-dimensional matrix min, max: Minimum and maximum array value for display scaling Switches /log: display the image in logarithmic scaling. /zscale: Use a display representation similar to IRAF's zscale. */

user 4 Uses ds9 to display X. ds9

user 6 Uses ds9 to display X.

user 3 Uses ds9 to display X.

user 5

user 8 running.


id 4035593

body /* ** Return the VDBE address or label to jump to in order to continue ** immediately with the next row of a WHERE clause. */

user 4 Return the VDBE address or label to jump to in order to

user 5 Return the VDBE address or label

user 3 Return the VDBE address or label to jump to

user 6 Return the VDBE address or label

user 8 continue immediately with the next row of a WHERE clause.


id 5242994

body /* Main Interpreter Loop */

user 4

user 5

user 3 Main Interpreter Loop

user 8 Main Interpreter Loop

user 6


id 5355218

body /* Get the valid number characters for an lcid */

user 4 Get the valid number characters for an lcid

user 6 Get the valid number characters for an lcid

user 5 Get the valid number characters for an lcid

user 3 Get the valid number characters for an lcid

user 8 Get the valid number characters for an lcid


id 2150485

body /* floor is -1 for all, or floornum */

user 4

user 3

user 5

user 6

user 8


id 2843338

body /* cpmStatFS -- statfs */ /*{{{*/

user 4

user 5

user 3

user 6

user 8


id 5038853

body /* * Initialise the contig register lists * * Returns 0 on success and -1 for error; */

user 4 Initialise the contig register lists

user 3 Initialise the contig register lists

user 5 Initialise the contig register lists

user 6 Initialise the contig register lists

user 8 Initialise the contig register lists


id 1641982

body /** * @brief Callback every time the parent window is closed (pop from the active window stack) */

user 4 Callback every time the parent window is closed

user 3

user 5 Callback every time the parent window is closed

user 6

user 8 (pop from the active window stack)


id 5939778

body /* strip a possible PowerShell scope specification and convert it to accessType */

user 4 strip a possible PowerShell scope specification and convert it to accessType

user 5 strip

user 3 strip a possible PowerShell scope specification and convert it to accessType

user 6 strip a possible PowerShell scope specification and convert it to accessType

user 8 strip a possible PowerShell scope specification and convert it to accessType


id 3846629

body /* Compute a superset of the convex hull of "set" that is described * by only some of the "n_ineq" constraints in the list "ineq", where "set" * has no parameters or integer divisions. * * The inequalities in "ineq" are assumed to have been sorted such * that constraints with the same linear part appear together and * that among constraints with the same linear part, those with * smaller constant term appear first. * * We reuse the same data structure that is used by uset_simple_hull, * but we do not need the hull table since we will not consider the * same constraint more than once. We therefore allocate it with zero size. * * We run through the constraints and try to add them one by one, * skipping identical constraints. If we have added a constraint and * the next constraint is a more relaxed translate, then we skip this * next constraint as well. */

user 4 Compute a superset of the convex hull of "set" that is described

user 5 Compute a superset of the convex hull of "set"

user 3 Compute a superset of the convex hull of "set" that is described

user 8 Compute a superset of the convex hull of "set"

user 6 Compute a superset of the convex hull of "set"


id 5763945

body /* * The function of dependence on machine */

user 4

user 3

user 5

user 6

user 8


id 805829

body /** * Add the given transaction to a budget in the counters if no budget * is specified, add it to the blank budget. * * \param transaction_number Transaction we want to work with. * \param budget_id	Budget to add transaction into total. * \param sub_budget_id	Sub-budget to add transaction into total. */

user 4 Add the given transaction to a budget in the counters if no

user 5 Add the given transaction to a budget in the counters

user 3 Add the given transaction to a budget in the counters if no

user 6 Add the given transaction to a budget

user 8 Add the given transaction to a budget in the counters


id 2049122

body /*opcode=0xb0*/

user 4

user 6

user 5

user 3

user 8


id 1790483

body /* ** Give a listing of the program in the virtual machine. ** ** The interface is the same as sqlite3VdbeExec(). But instead of ** running the code, it invokes the callback once for each instruction. ** This feature is used to implement "EXPLAIN". ** ** When p->explain==1, each instruction is listed. When ** p->explain==2, only OP_Explain instructions are listed and these ** are shown in a different format. p->explain==2 is used to implement ** EXPLAIN QUERY PLAN. ** ** When p->explain==1, first the main program is listed, then each of ** the trigger subprograms are listed one by one. */

user 4 Give a listing of the program in the virtual machine.

user 5 it invokes the callback once for each instruction.

user 3 Give a listing of the program in the virtual machine.

user 8

user 6 Give a listing of the program in the virtual machine.


id 2735428

body /* ** Apply posix advisory locks for all bytes from ofst through ofst+n-1. ** ** Locks block if the mask is exactly UNIX_SHM_C and are non-blocking ** otherwise. */

user 4 Apply posix advisory locks for all bytes from ofst through ofst+n-1.

user 3 Apply posix advisory locks for all bytes from ofst through ofst+n-1.

user 5 Apply posix advisory locks for all bytes from ofst

user 6 Apply posix advisory locks for all bytes from ofst through ofst+n-1.

user 8 Apply posix advisory locks for all bytes from ofst through ofst+n-1.


id 6021438

body /** * ixgbe_update_uc_addr_list - Updates the MAC's list of secondary addresses * @hw: pointer to hardware structure * @addr_list: the list of new multicast addresses * @addr_count: number of addresses * @func: iterator function to walk the multicast address list * * The given list replaces any existing list. Clears the secondary addrs from * receive address registers. Uses unused receive address registers for the * first secondary addresses, and falls back to promiscuous mode as needed. **/

user 4 Updates the MAC's list of secondary addresses

user 5 Updates the MAC's list of secondary addresses

user 3 Updates the MAC's list of secondary addresses

user 6 Updates the MAC's list of secondary addresses

user 8 Updates the MAC's list of secondary addresses


id 5393219

body /* TODO space tables are not coupled on a logical volume but on a partition/disc, so call them on that instead of logvol */

user 4

user 3

user 5

user 6

user 8


id 2583129

body /** * Forward data to hijacker * */

user 4 Forward data to hijacker

user 6 Forward data to hijacker

user 5 Forward data to hijacker

user 3 Forward data to hijacker

user 8 Forward data to hijacker


id 5836715

body /* Determines the binary data size from the value data * Returns 1 if successful or -1 on error */

user 4 Determines the binary data size from the value data

user 5 Determines the binary data size from the value data

user 3 Determines the binary data size from the value data

user 6 Determines the binary data size from the value data

user 8 Determines the binary data size from the value data


id 6377950

body /*! Constructs a new SVG item with the given \a parent. */

user 4 Constructs a new SVG item with the given \a parent.

user 3 Constructs a new SVG item with the given \a parent.

user 5 Constructs a new SVG item with the given \a parent.

user 6 Constructs a new SVG item with the given \a parent.

user 8 Constructs a new SVG item with the given \a parent.


id 5327366

body /*********************************************************************** * MSACM_RegisterDriver() */

user 4

user 5

user 3

user 6

user 8


id 5080710

body /** * Converts an array of floats to integers and multiplies it with a const multiplier. * With the right cpu features in place this function is very optimized. * * @param ints Pointer to the destination int32_t array. * @param flts Pointer to the source float array. * @param n The number of items in the array. * @param multiplier The constant multiplier with which every entry is multiplied. * * @return VISUAL_OK on succes or -VISUAL_ERROR_NULL on failure. */

user 3 Converts an array of floats to integers and multiplies it

user 4 Converts an array of floats to integers and multiplies it with a

user 5 Converts an array of floats to integers

user 8 const multiplier.

user 6 Converts an array of floats to integers and multiplies it with a

